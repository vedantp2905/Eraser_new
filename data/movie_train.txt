import java . util . Scanner ; public class AOJ110 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int z = 0 ; int a = sc . nextInt ( ) ; String s = sc . next ( ) ; int b = sc . nextInt ( ) ; if ( s == " + " ) z = a + b ; else if ( s == " - " ) z = a - b ; else if ( s == " / " ) z = a / b ; else if ( s == " * " ) z = a * b ; else if ( s == " ? " ) break ; System . out . println ( " " + z ) ; } sc . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int Na = sc . nextInt ( ) ; int Nb = sc . nextInt ( ) ; int Nc = sc . nextInt ( ) ; int Nd = sc . nextInt ( ) ; int Ne = sc . nextInt ( ) ; int count = 0 ; int [ ] N1 = new int [ 5 ] ; N1 [ 0 ] = Na % 10 ; N1 [ 1 ] = Nb % 10 ; N1 [ 2 ] = Nc % 10 ; N1 [ 3 ] = Nd % 10 ; N1 [ 4 ] = Ne % 10 ; int sum = Na - N1 [ 0 ] + Nb - N1 [ 1 ] + Nc - N1 [ 2 ] + Nd - N1 [ 3 ] + Ne - N1 [ 4 ] + 40 ; Arrays . sort ( N1 ) ; int min = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( N1 [ i ] == 0 ) count ++ ; else { min = N1 [ i ] ; break ; } } if ( count == 5 ) count = 4 ; System . out . println ( sum - 10 * count + min ) ; }
import java . util . Arrays ; import java . util . Scanner ; public class BBQ_Easy { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] arr = new int [ 2 * n ] ; for ( int i = 0 ; i < arr . length ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } sc . close ( ) ; Arrays . sort ( arr ) ; int sum = 0 ; for ( int i = 0 ; i < arr . length ; i += 2 ) { sum += arr [ i ] ; } System . out . println ( sum ) ; } }
import java . util . * ; public class Main { static long [ ] depth ; static ArrayList [ ] edge ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; edge = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { edge [ i ] = new ArrayList < Edge > ( ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc . nextInt ( ) - 1 ; int b = sc . nextInt ( ) - 1 ; long c = sc . nextLong ( ) ; Edge e1 = new Edge ( b , c ) ; Edge e2 = new Edge ( a , c ) ; edge [ a ] . add ( e1 ) ; edge [ b ] . add ( e2 ) ; } int Q = sc . nextInt ( ) ; int K = sc . nextInt ( ) - 1 ; dfs ( K , - 1 , 0 ) ; for ( int i = 0 ; i < Q ; i ++ ) { int x = sc . nextInt ( ) - 1 ; int y = sc . nextInt ( ) - 1 ; System . out . println ( depth [ x ] + depth [ y ] ) ; } } public static void dfs ( int v , int parent , long depth ) { depth [ v ] = depth ; ArrayList < Edge > elist = edge [ v ] ; for ( int i = 0 ; i < elist . size ( ) ; i ++ ) { Edge e = elist . get ( i ) ; if ( e . to != parent ) dfs ( e . to , v , e . cost + depth [ v ] ) ; } } } class Edge { int to ; long cost ; Edge ( int to , long cost ) { this . to = to ; this . cost = cost ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { partB ( ) ; } public static void partB100 ( ) { Scanner scB = new Scanner ( System . in ) ; int D = scB . nextInt ( ) ; int N = scB . nextInt ( ) ; if ( D == 0 ) { System . out . println ( N ) ; } else if ( D == 1 ) { System . out . println ( N * 100 ) ; } else if ( D == 2 ) { System . out . println ( N * 10000 ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 int a = sc.nextInt(); int b = sc.nextInt(); int ans if(a+b<24){ ans=a+b-24; }else{ ans=a+b; } System.out.println(ans); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 int count = 0; int K = sc.nextInt(); for(int i = 2;i <= K; i = i + 2){ fot(int j = 1;j <= K; j = j + 2){ count++; } } } }
import java . io . * ; public class B { public static void main ( String [ ] args ) { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; try { String line = reader . readLine ( ) ; int x = Integer . parseInt ( line ) ; if ( 1 <= x && x <= 100 ) { System . out . println ( x * x * x ) ; } else { System . out . println ( " 値の範囲が正しくありません"); } } catch (IOException e ) y tem.o t .println(e) } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long tmp = 0 ; PriorityQueue pq = new PriorityQueue ( ) ; for ( int i = 0 ; i < N ; i ++ ) { tmp = sc . nextLong ( ) ; pq . add ( tmp ) ; } for ( int i = 0 ; i < N ; i ++ ) { tmp = pq . poll ( ) ; tmp /= 2 ; pq . add ( tmp ) ; } long ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) ans += pq . poll ( ) ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class MainA { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; String s = Integer . toString ( n ) ; if ( s . charAt ( 0 ) == '7' ) { System . out . println ( " Yes " ) ; } else if ( s . charAt ( 1 ) == '7' ) { System . out . println ( " Yes " ) ; } else if ( s . charAt ( 2 ) == '7' ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . Scanner ; public class StructuredProgram1 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int i = 1 ; while ( ++ i <= n ) { int x = i ; if ( x % 3 == 0 ) { System . out . print ( " " + i ) ; } else while ( x != 0 ) { if ( x % 10 == 3 ) { System . out . print ( " " + i ) ; break ; } x /= 10 ; } } System . out . println ( ) ; } }
import java . util . Scanner ; import java . util . TreeMap ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; TreeMap < String , Integer > map = new TreeMap < > ( ) ; int max = 0 ; for ( int i = 0 ; i < N ; i ++ ) { String key = sc . next ( ) ; if ( map . containsKey ( key ) ) { int val = map . get ( key ) ; map . put ( key , ++ val ) ; } else { map . put ( key , 1 ) ; } int val = map . get ( key ) ; max = Math . max ( val , max ) ; } for ( Map . Entry < String , Integer > entry : map . entrySet ( ) ) { int val = entry . getValue ( ) ; String key = entry . getKey ( ) ; if ( val == max ) System . out . println ( key ) ; } } }
import java . util . HashSet ; import java . util . Scanner ; import java . util . Set ; public class B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int s = sc . nextInt ( ) ; Set < Integer > set = new HashSet < > ( ) ; set . add ( s ) ; s = s % 2 == 0 ? s / 2 : s * 3 + 1 ; while ( ! set . contains ( s ) ) { set . add ( s ) ; s = s % 2 == 0 ? s / 2 : s * 3 + 1 ; } System . out . println ( set . size ( ) + 1 ) ; } }
import java . io . * ; import java . util . * ; //AtCoder D class DoubleDots { public static ArrayList<ArrayList<Integer>> adj; public static int[] par; public static void main(String args[]) throws IOException { IO io=new IO(System.in, System.out); int n=io.i(), m=io.i(); par=new int[n+1]; adj=new ArrayList<>(); for(int i=0;i<=n;i++) { adj.add(new ArrayList<>()); } for(int i=1;i<=m;i++) { int u=io.i(), v=io.i(); adj.get(u).add(v); adj.get(v).add(u); } LinkedList<Integer> q=new LinkedList<Integer>(); Boolean[] seen=new Boolean[n+1]; Arrays.fill(seen, false); q.add(1); seen[0]=seen[1]=true; while(!q.isEmpty()) { int u=q.poll(); for(int v : adj.get(u)) if(!seen[v]) { par[v]=u; q.add(v); seen[v]=true; } } if(Arrays.stream(seen).anyMatch(b -> !b)) { io.pln("No"); } else { io.pln("Yes"); for(int i=2;i<=n;i++) { io.pln(""+par[i]); } } io.flush(); } public static class IO { private BufferedReader br; private StringTokenizer tok; private PrintWriter pw; IO(InputStream inputStream, OutputStream outputStream) { br=new BufferedReader(new InputStreamReader(inputStream)); pw=new PrintWriter(new OutputStreamWriter(outputStream)); } public String s() { while(tok == null || !tok.hasMoreElements()) { try { tok=new StringTokenizer(br.readLine()); } catch(IOException exc) { exc.printStackTrace(); } } return tok.nextToken(); } public int i() { return Integer.parseInt(s()); } public long l() { return Long.parseLong(s()); } public void p(String out) { pw.print(out); } public void pln(String out) { pw.println(out); } public void pln() { pw.println(); } public void flush() { pw.flush(); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextInt ( ) ; System . out . println ( s * s ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long sub = 0l ; int t1 , t2 ; t1 = sc . nextInt ( ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { t2 = sc . nextInt ( ) ; sub += ( long ) ( t2 - t1 ) ; t1 = t2 ; } if ( sub % ( long ) ( 2 n - 2 ) == 0l ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . ArrayList ; import java . util . Scanner ; public class A_B_Problem { public static void main ( String [ ] args ) { // 初期処理 Scanner sc = null; // テキスト入力クラス sc = new Scanner(System.in); // int first = sc.nextInt(); int second = sc.nextInt(); // 求める値 int quotient = first / second; int product = first % second; // 浮動小数点 double double_first = (double) first; double double_second = (double) second; double double_quotient = double_first / double_second; // 出力 System.out.println(quotient + " " + product + "" + double_quotient); } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = 0 , l = 0 ; int as = 0 , am = 0 ; // テ・ツ、ツァテ」ツ?催」ツ??ヲツ閉ーテ」ツ?ィテ・ツーツ湘」ツ?陛」ツ??ヲツ閉ー while(sc.hasNext()){ a = sc.nextInt(); l = sc.nextInt(); if(a == 0 && l == 0) break; System.out.println(); int[] array = new int[l]; // 20テ・ツ崢榲ァツケツーテ」ツつ甘ィツソツ氾」ツ?凖」ツ?づァツュツ氾」ツ?暗」ツ?古・ツ?コテ」ツ?淌」ツつ叡reak int[] result = new int[21]; result[0] = a; for(int i = 1;i<result.length;i++){ makeArray(array,a); // テ」ツ?禿」ツ?禿」ツ?ァテゥツ?催・ツ按療」ツつ津」ツ?、テ」ツ?湘」ツ?」テ」ツ?ヲ Arrays.sort(array); // テ」ツ?禿」ツ?禿」ツ?ァテ、ツクツヲテ」ツ?ウテヲツ崢ソテ」ツ?暗」ツ?ヲ am = makeAM(array); // テ・ツ、ツァテ」ツ?催」ツ??」ツ?ョテ」ツ?、テ」ツ?湘」ツ?」テ」ツ?ヲ as = makeAS(array); // テ・ツーツ湘」ツ?陛」ツ??」ツ?ョテ」ツつづ」ツ?、テ」ツ?湘」ツ?」テ」ツ?ヲ a = Math.abs(am - as); result[i] = a; if(isSolved(result,i)!=-1){ System.out.print(isSolved(result,i) + " " + result[i] + " " + (i - isSolved(result,i))); break; } } check = true; } } // テ・ツ、ツァテ」ツ?催」ツ??ゥツ?? static int makeAM(int[] array){ int m = 1; int am = 0; for(int i = array.length-1;i>=0;i--){ am += array[i]*m; m *= 10; } return am; } // テ・ツーツ湘」ツ?陛」ツ??ゥツ?? static int makeAS(int[] array){ int m = 1; int am = 0; for(int i = 0;i<array.length;i++){ am += array[i]*m; m *= 10; } return am; } // テゥツ?催・ツ按療」ツ?ォテ」ツ?敕」ツつ古」ツ?榲」ツつ古・ツ?・テ」ツつ古」ツ?ヲテ」ツ?? static void makeArray(int[] array,int a){ for(int i = 0;i<array.length;i++){ array[i] = a%10; a /= 10; } } // テ・ツ青古」ツ?佚ヲツ閉ーテ・ツュツ療」ツ?古」ツ?づ」ツつ凝」ツ?凝」ツ?ゥテ」ツ??」ツ?凝・ツ?ィテゥツδィテ」ツ?ソテ」ツ?ヲテ」ツ?? static int isSolved(int[] result,int n){ for(int i = 0;i<n;i++){ if(i!=n && result[i]==result[n]) return i; } return -1; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int n = sc . nextInt ( ) ; if ( n == 0 ) { break ; } int [ ] scores = new int [ n ] ; for ( int i = 0 ; i < scores . length ; i ++ ) { scores [ i ] = sc . nextInt ( ) ; } double average = 0 , variance = 0 ; for ( i = 0 ; i < score . length ; i ++ ) { average += ( double ) score [ i ] / n ; variance += ( double ) ( scores [ i ] - average ) * ( scores [ i ] - average ) / n ; } System . out . println ( Math . sqrt ( variance ) ) ; } } }
