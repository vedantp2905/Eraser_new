import java . util . Scanner ; public class Caa { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; String op = sc . next ( ) ; int b = sc . nextInt ( ) ; if ( op . equals ( " + " ) ) { System . out . printf ( " %d " , a + b ) ; } else if ( op . equals ( " - " ) ) { System . out . printf ( " %d " , a - b ) ; } else if ( op . equals ( " * " ) ) { System . out . printf ( " %d " , a * b ) ; } else if ( op . equals ( " / " ) ) { System . out . printf ( " %d " , a / b ) ; } else { System . out . printf ( " " ) ; } System . out . println ( " " ) ; } }
import java . util . Scanner ; public class Sequence { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int [ ] num = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { num [ i ] = scanner . nextInt ( ) ; } int countP = exe ( n , num , 1 ) ; int countM = exe ( n , num , - 1 ) ; System . out . println ( countP > countM ? countM : countP ) ; } private static int exe ( int n , int [ ] num , int sig ) { int count = 0 ; int [ ] ans = new int [ n ] ; ans [ 0 ] = sig * num [ 0 ] ; for ( int i = 0 ; i < num . length - 1 ; i ++ ) { int sa = sa ( ans , num [ i + 1 ] ) ; ans [ i + 1 ] = num [ i + 1 ] + sa ; if ( plusCheck ( ans ) ) { count ++ ; ans [ ans . length - 1 ] = addOne ( ans [ ans . length - 1 ] ) ; } count += Math . abs ( sa ) ; } return count ; } private static boolean plusCheck ( int [ ] num ) { int total = 0 ; for ( int n : num ) { total += n ; } return total == 0 ; } private static int addOne ( int num ) { int sig = ( int ) Math . signum ( num ) ; return sig * ( Math . abs ( num ) + 1 ) ; } private static int sa ( int [ ] left , int right ) { int total = 0 ; for ( int num : left ) { total += num ; } int sigTotal = ( int ) Math . signum ( total ) ; int sigWa = ( int ) Math . signum ( total + right ) ; if ( sigTotal != sigWa ) { return 0 ; } return ( - sigTotal - total ) - right ; } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . Scanner ; public class tri { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner s = new Scanner(System.in); int n = s.nextInt(); ArrayList<Long> list = new ArrayList<Long>(); for(int i = 0; i < n; i++) { list.add(s.nextLong()); } Collections.sort(list); int cnt = 0; for(int i = 0; i < list.size()-2; i++) { for(int j = i+1; j < list.size()-1; j++) { for(int k = j+1; k < list.size(); k++) { if((list.get(i) != list.get(j) && list.get(j) != list.get(k) && list.get(i) != list.get(k)) && list.get(i) + list.get(j) > list.get(k)) cnt += 1; } } } System.out.println(cnt); } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String abc [ ] ) { Main ans = new Main ( ) ; System . out . println ( ans . solve ( ) ) ; } private long solve ( ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long [ ] array = new long [ N + 1 ] ; int i = 0 ; long sum = 0 ; while ( i <= N ) { array [ i ++ ] = sc . nextLong ( ) ; sum += array [ i - 1 ] ; } long [ ] [ ] [ ] dp = new long [ 3001 ] [ 3001 ] [ 2 ] ; long X = solve ( dp , array , 1 , 0 , N ) ; long Y = sum - X ; return X - Y ; } private long solve ( long [ ] dp , long [ ] array , int turn , int i , int j ) { if ( i > j ) return 0 ; if ( dp [ i ] [ j ] [ turn ] != 0 ) return dp [ i ] [ j ] [ turn ] ; if ( turn == 1 ) { long left = array [ i ] + solve ( dp , array , 0 , i + 1 , j ) ; long right = array [ j ] + solve ( dp , array , 0 , i , j - 1 ) ; dp [ i ] [ j ] [ turn ] = Math . max ( left , right ) ; } else { long left = solve ( dp , array , 1 , i + 1 , j ) ; long right = solve ( dp , array , 1 , i , j - 1 ) ; dp [ i ] [ j ] [ turn ] = Math . min ( left , right ) ; } return dp [ i ] [ j ] [ turn ] ; } }
import java . util . Scanner ; public class InputSample { public static void main ( String [ ] args ) { int R = 0 ; int sum = 0 ; Scanner scan = new Scanner ( System . in ) ; R = scan . nextInt ( ) ; sum = R * 2 * 3.141592 ; System . out . println ( sum ) ; scan . close ( ) ; } }
import java . util . ArrayList ; import java . util . Scanner ; public class CandidatesOfNoShortestPaths { static ArrayList [ ] gragh ; static int n , m ; static Scanner sc ; public static void main ( String [ ] args ) { sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; m = sc . nextInt ( ) ; init ( ) ; for ( int i = 0 ; i < n ; i ++ ) { dijkstra ( i ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < gragh [ i ] . size ( ) ; j ++ ) { Ed edge = ( Ed ) gragh [ j ] . get ( j ) ; if ( ! edge . used ) count ++ ; } } System . out . println ( count / 2 ) ; } static void dijkstra ( int a ) { // node aからの各nodeまでの最短を計算 boolean used[] = new boolean[n]; int shortest[] = new int[n]; Ed myEdge[] = new Ed[n]; for (int i = 0; i < n; i++) { shortest[i] = 999999999; } shortest[a] = 0; for (int i = 0; i < n; i++) { int next = 999999999; int nextN = a; for (int j = 0; j < n; j++) { if (!used[j] && shortest[j] < next) { next = shortest[j]; nextN = j; } } used[nextN] = true; if(nextN != a){ myEdge[nextN].used = true; for(int j = 0;j < gragh[nextN].size();j++){ Ed e = (Ed)gragh[nextN].get(j); if(shortest[nextN]-e.cost == shortest[e.node]){ e.used = true; } } } for (int j = 0; j < gragh[nextN].size(); j++) { Ed edge = (Ed) gragh[nextN].get(j); if (shortest[edge.node] > shortest[nextN] + edge.cost) { shortest[edge.node] = shortest[nextN] + edge.cost; myEdge[edge.node] = edge; } } } return; } static void init() { gragh = new ArrayList[n]; for (int i = 0; i < n; i++) { gragh[i] = new ArrayList<Ed>(); } for (int i = 0; i < m; i++) { int a = sc.nextInt() - 1; int b = sc.nextInt() - 1; int c = sc.nextInt(); gragh[a].add(new Ed(b, c)); gragh[b].add(new Ed(a, c)); } } } class Ed { int node; int cost; boolean used; Ed(int node, int cost) { this.node = node; this.cost = cost; used = false; } }
import java . io . * ; import java . util . * ; class Main { public static void main ( String [ ] args ) { int count = 0 ; Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNext ( ) ) { int n = sc . nextInt ( ) ; int [ ] array = new int [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { array [ i ] = sc . nextInt ( ) ; } } for ( int j = 0 ; j < array . length - 1 ; j ++ ) { for ( int k = n - 1 ; j < k ; k -- ) { if ( array [ k ] < array [ k - 1 ] ) { int a = array [ k ] ; int b = array [ k - 1 ] ; array [ k ] = b ; array [ k - 1 ] = a ; count ++ ; } } } for ( int i = 1 ; i < n - 1 ; i ++ ) { System . out . print ( " " + a [ i ] ) ; } System . out . println ( count ) ; } }
import java . util . Scanner ; class Node { Node prev ; Node next ; int n ; Node ( ) { prev = this ; next = this ; } Node ( Node prev , Node next , int data ) { n = data ; this . prev = prev ; this . next = next ; } } public class DoublyLinkedList { static Node head = new Node ( ) ; static Node crnt = head ; static void add ( int x ) { Node tmp = new Node ( crnt , crnt . next , x ) ; crnt . next = crnt . next . prev = tmp ; crnt = tmp ; } static void insert ( int x ) { crnt = head ; add ( x ) ; } static boolean isEmpty ( ) { return head . next == head ; } static void removeCurrentNode ( ) { if ( ! isEmpty ( ) ) { crnt . prev . next = crnt . next ; crnt . next . prev = crnt . prev ; crnt = crnt . prev ; } } static void deleteFirst ( ) { //リストの先頭の要素を削除 crnt=head.next; removeCurrentNode(); } static void deleteLast(){ crnt=head.prev; removeCurrentNode(); } static void deleteX(int x){ crnt=head.next; while(crnt!=head){ if(crnt.n==x){ removeCurrentNode(); break; } crnt=crnt.next; } } static void output(){ crnt=head.next; if(!isEmpty()){ System.out.print(crnt.n); crnt=crnt.next; while(crnt!=head){ System.out.print(" "+crnt.n); crnt=crnt.next; } System.out.println(); } } public static void main(String[] args) { Scanner scan=new Scanner(System.in); String s; int x; int n=scan.nextInt(); for(int i=0;i<n;i++){ s=scan.next(); if(s.equals("insert")){ x=scan.nextInt(); insert(x); }else if(s.equals("delete")){ x=scan.nextInt(); deleteX(x); }else if(s.equals("deleteFirst")){ deleteFirst(); }else{ deleteLast(); } } output(); scan.close(); } }
import java . util . Scanner ; public class B_PowerSocket { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int a = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ; int i = 1 ; int c = 0 ; while ( i < b ) { i = i + a - 1 ; c ++ ; } System . out . println ( c ) ; // Scannerクラスのインスタンスをクローズ scanner.close(); } }
import java . util . Scanner ; public class ah { public static void main ( string [ ] args ) { Scanner in = new Scanner ( System in ) ; int t = in . nextInt ( ) ; int sum = 0 ; int arr = new int [ t ] ; while ( t -- > 0 ) { int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; sum -= a ; sum += b ; arr [ t ] = sum ; } Arrays . sort ( arr ) System . out . println ( ar [ ar . length - 1 ] ) ; } }
import java . util . * ; public class atcoder002 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; if ( a == 5 && b == 5 && c == 7 ) { System . out . println ( " YES " ) ; } else if ( a == 5 && b == 7 && c == 5 ) { System . out . println ( " YES " ) ; } else if ( a == 7 && b == 5 && c == 5 ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO ????????????????????????????????????????????? Scanner n = new Scanner(System.in); int a = n.nextInt(); int b = n.nextInt(); int c = n.nextInt(); if ( a < b && b < c ) { System.out.println( a+" "+b" "+c ); } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; var s = sc . next ( ) ; s = s . replaceAll ( " 0 " , " " ) ; System . out . println ( s . lentgh ( ) ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str ; while ( ( str = br . readLine ( ) ) != " 0 " ) { int n = Integer . parseInt ( str ) ; int max = - 1000000 ; int [ ] a = new int [ n ] ; int [ ] s = new int [ n + 1 ] ; s [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = Integer . parseInt ( br . readLine ( ) ) ; s [ i + 1 ] += a [ i ] ; } for ( int a = 0 ; a < n ; a ++ ) { for ( int b = a + 1 ; b <= n ; b ++ ) { max = Math . max ( max , s [ b ] - s [ a ] ) ; } } System . out . println ( max ) ; } } }
import java . util . * ; import java . io . * ; //A - Frog 1 public class C_01_dp_a { static StringTokenizer st; static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); public static void main(String[] args) throws IOException { int N = nextInt(); int dp[] = new int[N+1]; int input[] = new int[N+1]; for (int i=1; i<=N; i++) { input[i] = nextInt(); } // now dp time Arrays.fill(dp, Integer.MAX_VALUE); dp[1] = 0; for (int i=1; i<=N; i++) { if(i+1<=N){ dp[i+1] = Math.min(dp[i+1], dp[i] + Math.abs(input[i+1]- input[i])); } if(i+2<=N){ dp[i+2] = Math.min(dp[i+2], dp[i] + Math.abs(input[i+2]- input[i])); } } System.out.println(dp[N]); } public static int nextInt() throws IOException { return Integer.parseInt(next()); } public static long nextLong() throws IOException { return Long.parseLong(next()); } public static double nextDouble() throws IOException { return Double.parseDouble(next()); } static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine().trim()); return st.nextToken(); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int max = math . max ( math . max ( a , b ) , c ) ; if ( ( max == a + b || max == b + c || max == c + a ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . utill . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; System . out . println ( n * n * n ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { do { Scanner obj = new Scanner ( System . in ) ; int a = obj . nextInt ( ) ; char op = obj . next ( ) . charAt ( 0 ) ; int b = obj . nextInt ( ) ; if ( op == '+' ) { System . out . println ( a + b ) ; } else if ( op == '-' ) { System . out . println ( a - b ) ; } else if ( op == '*' ) { System . out . println ( a * b ) ; } else if ( op == '/' ) { System . out . println ( a / b ) ; } else if ( op == '?' ) { System . exit ( ) ; } } while ( op != '?' ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] arts ) { Scanner scan = new Sanner ( System . in ) ; int p = scan . nextInt ( ) ; int q = scan . nextInt ( ) ; int r = scan . nextInt ( ) ; int sum1 = p + q ; int sum2 = p + r ; int sum3 = q + r ; if ( sum1 <= sum2 && sum1 <= sum3 ) { System . out . println ( sum1 ) ; } else if ( sum2 <= sum1 && sum2 <= sum3 ) { System . out . println ( sum2 ) ; } else { System . out . println ( sum3 ) ; } } }
import java . util . ArrayList ; import java . util . Scanner ; public class KnapSackProblem { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , s = sc . nextInt ( ) ; ArrayList < KnapSackItem > items = new ArrayList < KnapSackItem > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { items . add ( new KnapSackItem ( sc . nextInt ( ) , sc . nextInt ( ) ) ) ; } int [ ] [ ] dp = new int [ s + 1 ] [ n + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { dp [ 0 ] [ i ] = 0 ; } for ( int i = 0 ; i <= s ; i ++ ) { dp [ i ] [ 0 ] = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= s ; j ++ ) { for ( int k = 0 ; k <= j ; k ++ ) { dp [ j ] [ i ] = Math . max ( dp [ j ] [ i ] , dp [ k ] [ i - 1 ] + ( j - k ) / items . get ( i - 1 ) . size * items . get ( i - 1 ) . value ) ; } } } System . out . println ( dp [ s ] [ n ] ) ; } private static class KnapSackItem { int size , value ; public KnapSackItem ( int v , int s ) { size = s ; value = v ; } } }
import java . util . Scanner ; public class Test7 { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int intInput1 = scan . nextInt ( ) ; int intInput2 = scan . nextInt ( ) ; int intInput3 = scan . nextInt ( ) ; int intSub = 0 ; if ( intInput1 > intInput2 ) { intSub = intInput1 ; intInput1 = intInput2 ; intInput2 = intSub ; if ( intInput2 > intInput3 ) { intSub = intInput2 ; intInput2 = intInput3 ; intInput3 = intSub ; } } else if ( intInput2 > intInput3 ) { intSub = intInput2 ; intInput2 = intInput3 ; intInput3 = intSub ; } if ( intInput1 > intInput2 ) { intSub = intInput1 ; intInput1 = intInput2 ; intInput2 = intSub ; if ( intInput2 > intInput3 ) { intSub = intInput2 ; intInput2 = intInput3 ; intInput3 = intInput2 ; } } System . out . println ( intInput1 + " " + intInput2 + " " + intInput3 ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] argas ) { Scanner sc = new Scanner ( System . in ) ; String a = sc . next ( ) ; int count = 0 ; if ( a [ 0 ] == 1 ) count ++ ; if ( a [ 1 ] == 1 ) count ++ ; if ( a [ 2 ] == 1 ) count ++ ; System . out . println ( count ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; char [ ] c1 = s . toCharArray ( ) ; char [ ] c2 = t . toCharArray ( ) ; List < char > L1 = new ArrayList < char > ( ) ; List < char > L2 = new ArrayList < char > ( ) ; for ( int i = 0 ; i < c1 . length ( ) ; i ++ ) { L1 . add ( c1 [ i ] ) ; } for ( int i = 0 ; i < c2 . length ( ) ; i ++ ) { L2 . add ( c2 [ i ] ) ; } Collections . sort ( L1 ) ; Collections . sort ( L2 ) ; for ( int i = 0 ; i < c1 . length ( ) ; i ++ ) { String s1i = L1 . get ( i ) ; } for ( int i = 0 ; i < c2 . length ( ) ; i ++ ) { String s2i = L2 . get ( i ) ; } for ( int i = 0 ; i < c1 . length ( ) ; i ++ ) { String ss = s10 + s1i ; } for ( int i = 0 ; i < c2 . length ( ) ; i ++ ) { String tt = s20 + s2i ; } List < String > ans = new Arraylist < String > ( ) ; ans . add ( ss ) ; ans . add ( tt ) ; Collections . sort ( ans ) ; if ( ans . get ( 0 ) . equals ( ss ) ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int i ; int x = i ; for ( i = 1 ; i <= n ; i ++ ) { if ( x % 3 == 0 ) { System . out . printf ( " " + i ) ; } else if ( x % 10 == 3 ) { System . out . printf ( " " + i ) ; } else if ( i > 10 ) { while ( i > 10 ) { i = i / 10 ; } if ( i == 3 ) { System . out . printf ( " " + i ) ; } } } System . out . ptintln ( " " ) ; } }
import java . math . BigDecimal ; import java . math . RoundingMode ; public static void main ( String [ ] args ) { int N , P ; BigDecimal P = new BigDecimal ( N ) ; P = N / 2 ; BigDecimal P = bd . setScale ( 0 , RoundingMode . HALF_UP ) ; System . out . println ( P . toPlainString ( ) ) ; //12 }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] s = br . readLine ( ) . split ( " " ) ; int n = Integer . parseInt ( s [ 0 ] ) ; int m = Integer . parseInt ( s [ 1 ] ) ; HashMap < Integer , ArrayList < Integer > > hm = new HashMap < > ( ) ; for ( int i = 0 ; i < m ; i ++ ) { String [ ] str = br . readLine ( ) . split ( " " ) ; int u = Integer . parseInt ( str [ 0 ] ) ; int v = Integer . parseInt ( str [ 1 ] ) ; if ( hm . containsKey ( u ) ) { ArrayList < Integer > al = hm . get ( u ) ; al . add ( v ) ; hm . put ( u , al ) ; } else { ArrayList < Integer > al = new ArrayList < > ( ) ; al . add ( v ) ; hm . put ( u , al ) ; } } long ans = 0 ; long [ ] dp = new long [ 1000005 ] ; Arrays . fill ( dp , - 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) { ans = Math . max ( ans , getBestLength ( i , dp , hm ) ) ; } System . out . println ( ans ) ; } public int getBestLength ( int u , int [ ] dp , Map < Integer , ArrayList < Integer > > hm ) { if ( dp [ u ] != - 1 ) return dp [ u ] ; else if ( ! hm . containsKey ( u ) ) { dp [ u ] = 0 ; return dp [ u ] ; } else { long bestLen = 0 ; for ( int child : hm . get ( u ) ) { long currLen = getBestLength ( child , dp , hm ) ; bestLen = Math . max ( bestLen , currLen ) ; } dp [ u ] = bestLen + 1 ; return dp [ u ] ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; System . out . println ( a59_ ( sc . nextInt ( ) , sc . nextInt ( ) , sc . nextInt ( ) ) ) ; } static String a59_ ( String s , String s1 , String s2 ) { s = s . substring ( 0 , 1 ) . toUpperCase ( ) ; s1 = s1 . substring ( 0 , 1 ) . toUpperCase ( ) ; s2 = s2 . substring ( 0 , 1 ) . toUpperCase ( ) ; return s + s1 + s2 ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { String [ ] arr_1 = new String [ ] ; for ( String str : arr_1 ) { System . out println ( str ) ; } List < String > list = new ArrayList < String > ( Arrays . asList ( arr_1 ) ) ; list . remove ( ( " 0B " ) || ( " 1B " ) ) ; String [ ] arr_2 = ( String [ ] ) list . toArray ( new String [ list . size ( ) ] ) ; for ( String str : arr_2 ) { System . out . println ( str ) ; } } }
import java . util . Scanner ; /** * https://abc062.contest.atcoder.jp/tasks/arc074_a */ public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long H = sc . nextLong ( ) ; long W = sc . nextLong ( ) ; sc . close ( ) ; long ans = Math . min ( ( H % 3 == 0 ? 0 : 1 ) * W , ( W % 3 == 0 ? 0 : 1 ) * H ) ; ans = Math . min ( ans , getAreaDiff ( W , H ) ) ; ans = Math . min ( ans , getAreaDiff ( H , W ) ) ; System . out . println ( ans ) ; } static long getAreaDiff ( long w , long h ) { long diff = h * w ; for ( int i = 1 ; i < h ; i ++ ) { long h1 = i ; long h2 = h - i ; long a1 = h1 * w ; long a2 = h2 * ( w / 2 ) ; long a3 = h2 * ( w - w / 2 ) ; long area = Math . max ( Math . max ( a1 , a2 ) , a3 ) - Math . min ( Math . min ( a1 , a2 ) , a3 ) ; diff = Math . min ( diff , area ) ; } return diff ; }
import java . util . Arrays ; import java . util . Comparator ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { try ( Scanner sc = new Scanner ( System . in ) ; ) { solve ( sc ) ; } } public static void solve ( Scanner sc ) { int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] barLength = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { barLength [ i ] = sc . nextInt ( ) ; } Arrays . sort ( barLength , Comparator . reverseOrder ( ) ) ; int max = 0 ; for ( int i = 0 ; i < k ; i ++ ) { max += barLength [ i ] ; } System . out . println ( max ) ; } }
import java . util . Scanner ; class Weather_Prediction { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String input = sc . nextLine ( ) ; String output = " " ; if ( input . equals ( " Sunny " ) ) { output = " Cloudy " ; } else if ( input . equals ( " Cloudy " ) ) { output = " Rainy " ; } else if ( input . equals ( " Rainy " ) ) { output = " Sunny " ; } System . out . print ( output ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scaner ( System . in ) ; int n = sc . nextInt ( ) ; int j = 2 ; int k = 0 ; // カウントする数 while( 0 <= j && j <= n){ if(n%j == 0){ j = j* 2; k = k+1; }else{ System.out.println(j); } } } }
import java . util . Scanner ; /** * * @author Mohamed Abd El-Meged */ public class JavaApplication1 { /** * @param args the command line arguments */ public static void main ( String [ ] args ) { // TODO code application logic here String S; Scanner sc = new Scanner(System.in); S = sc.nextLine(); if (S.toUpperCase().equals("SUN")){ System.out.println("It is Sunday today, and seven days later, it will be Sunday again"); } else if (S.equals("MON")){ System.out.println("It is Monday today, and six days later, it will be Sunday again"); } else if (S.equals("TUE")){ System.out.println("It is Tuesday today, and five days later, it will be Sunday again"); } else if (S.equals("WED")){ System.out.println("It is Wednesday today, and four days later, it will be Sunday again"); } else if (S.equals("THU")){ System.out.println("It is Thursday today, and three days later, it will be Sunday again"); } else if (S.equals("FRI")){ System.out.println("It is Friday today, and two days later, it will be Sunday again"); } else if (S.equals("SAT")){ System.out.println("It is Saturday today, and one days later, it will be Sunday again"); } } }
import java . io . * ; public class Main { ? ? ? ? ? ? ? ? public static void main ( String args [ ] ) throws IOException { ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? StringBuilder builder = new StringBuilder ( ) ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? while ( true ) { ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String data [ ] = reader . readLine ( ) . split ( " " ) ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? int a = Integer . parseInt ( data [ 0 ] ) ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? int b = Integer . parseInt ( data [ 1 ] ) ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if ( a == 0 && b == 0 ) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? break ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? builder . append ( Integer . toString ( a < b ? a : b ) ) . append ( " " ) . append ( Integer . toString ( a < b ? b : a ) ) . append ( " \n " ) ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? System . out . print ( builder ) ; ? ? ? ? ? ? ? ? } }
import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; while ( true ) { String line = br . readLine ( ) ; String [ ] str = line . split ( " " ) ; int h = Integer . parseInt ( str [ 0 ] ) ; int w = Integer . parseInt ( str [ 1 ] ) ; if ( h == 0 && w == 0 ) { //??\????????¨??????0 break; } for (int i = 0; i < h ; i++ ) { for (int k = 0; k < w ; k++ ) { if ((i%2) == (k%2)) { System.out.print("#"); }else{ System.out.print(".") } } System.out.print("\n"); } System.out.print("\n"); } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String T = sc . next ( ) ; int count = 0 ; if ( S == T ) { System . out . println ( " 0 " ) ; } else { for ( int i = 0 ; i < S . length ( ) ; i ++ ) { if ( S . charAt ( i ) != T . charAt ( i ) ) { S . charAt ( i ) == T . charAt ( i ) ; count ++ ; } } } System . out . println ( count ) ; } }
import java . util . Scanner ; public class po { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int e , f , g , h ; e = a / 3600 ; f = a % 3600 ; g = f / 60 ; h = f % 60 ; System . out . println ( " " + e + " : " + g + " : " + h + " " ) ; sc . close ( ) ; } }
import java . util . * ; class sol { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String s = in . nextLine ( ) ; if ( s . charAt ( s . length ( ) - 1 ) != 's' ) System . out . println ( s + " s " ) ; else System . out . println ( s + " es " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String T = sc . next ( ) ; oneS = S . substring ( 0 , 1 ) ; twoS = S . substring ( 1 , 2 ) ; threeS = S . substring ( 2 , 3 ) ; oneT = T . substring ( 0 , 1 ) ; twoT = T . substring ( 1 , 2 ) ; threeT = T . substring ( 2 , 3 ) ; int count = 0 ; if ( oneS . equals ( oneT ) ) { count ++ ; } if ( twoS . equals ( twoT ) ) { count ++ ; } if ( threeS . equals ( threeT ) ) { count ++ ; } System . out . println ( count ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; List < Integer > l = new ArrayList < Integer > ( ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; while ( sc . hasNext ( ) ) { int a = sc . nextInt ( ) ; l . add ( a ) ; } Collections . sort ( l ) ; int min = 1000000000 ; for ( int i = 0 ; i < l . size ( ) - k + 1 ; i ++ ) { int sabun = l . get ( i + k - 1 ) - l . get ( i ) ; if ( sabun < min ) min = sabun ; } // 出力 System.out.println(min); } } import java.util.*; public class Main { static long num = 0; static long patty = 0; static long n = 0; static long x = 0; static Map<Integer,Integer> numMap = new HashMap<Integer,Integer>(); static Map<Integer,Integer> pattyMap = new HashMap<Integer,Integer>(); public static void main(String[] args){ Scanner sc = new Scanner(System.in); n = sc.nextLong(); x = sc.nextLong(); numMap.put(0,1); pattyMap.put(0,1); for (int i = 1 ; i < 49 ; i++) { numMap.put(i, numMap.get(i-1)*2+3); pattyMap.put(i, pattyMap.get(i-1)*2+1); } level(n); // 出力 System.out.println(patty); } private static boolean level(long lev) { if ( (x - num) > numMap.get(lev)) { num += numMap.get(lev); patty += pattyMap.get(lev); } if (lev == 0) { num++; patty++; if (num == x) return false; return true; } else { num++; if (num == x) return false; boolean b = level(lev - 1); if (b == false) return false; num++; patty++; if (num == x) return false; b = level(lev - 1); if (b == false) return false; num++; if (num == x) return false; return true; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String sent = scan . nextLine ( ) ; char [ ] alp = { 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' , 'k' , 'l' , 'm' , 'n' , 'o' , 'p' , 'q' , 'r' , 's' , 't' , 'u' , 'v' , 'w' , 'x' , 'y' , 'z' } ; for ( int i = 0 ; i < 26 ; i ++ ) { int cnt = 0 ; for ( int j = 0 ; j < sent . length ( ) ; j ++ ) { char c = toLower ( sent . charAt ( j ) ) ; if ( alp [ i ] == c ) { cnt ++ ; } } System . out . printf ( " %s : %d \n " , alp [ i ] , cnt ) ; } } }
import java . util . io . * ; public class Main { public static void main ( String [ ] args ) { BufferedReader ( new InputStreamReader ( System . in ) ) ; int a , b , c ; String c = in . readLine ( ) ; String [ ] arange = str . split ( " " , 0 ) ; a = Integer . parseInt ( arange [ 0 ] ) ; b = Integer . parseInt ( arange [ 1 ] ) ; c = Integer . parseInt ( arange [ 2 ] ) ; if ( a < b && a < c ) { if ( b < c ) System . out . println ( a + " " + b + " " + c ) ; else System . out . println ( a + " " + c + " " + b ) ; } else if ( b < a && b < c ) { if ( a < c ) System . out . println ( b + " " + a + " " + c ) ; else System . out . println ( b + " " + c + " " + a ) ; } else if ( c < a && c < b ) { if ( a < b ) System . out . println ( c + " " + a + " " + b ) ; else System . out . println ( c + " " + b + " " + a ) ; } } }
import java . util . * ; public class main { public static void Main ( String [ ] args ) { int n , s , max , count ; count = 0 ; n = 9 ; max = 100 ; s = 200 ; Scanner sc = new Scanner ( System . in ) ; for ( ; ; ) { n = sc . nextInt ( ) ; s = sc . nextInt ( ) ; if ( n == 0 && s == 0 ) break ; count = check ( n , s , max ) ; System . out . println ( count ) ; } } private static int check ( int n , int s , int max ) { int count = 0 ; if ( s < max ) max = s ; for ( ; max >= 0 ; max -- ) { if ( n > 1 ) count += check ( n - 1 , s - max , max - 1 ) ; else if ( s == max ) return 1 ; else return 0 ; } return count ; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . IOException ; import java . util . Scanner ; import java . util . ArrayDeque ; import java . util . Deque ; public class pr_2_A_bubble_sort { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; String tmp_arr [ ] = new String [ n ] ; int arr [ ] = new int [ n ] ; tmp_arr = br . readLine ( ) . split ( " " ) ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = Integer . parseInt ( tmp_arr [ i ] ) ; } bubblesort_swap_num ( arr ) ; } public static void bubblesort_swap_num ( int [ ] arr ) { int n = arr . length ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] > arr [ j ] ) { int tmp = arr [ i ] ; arr [ i ] = arr [ j ] ; arr [ j ] = tmp ; ans ++ ; } } } print_array ( arr ) ; System . out . println ( ans ) ; } public static void print_array ( int [ ] arr ) { for ( int i = 0 ; i < arr . length ; i ++ ) { System . out . print ( arr [ i ] ) ; if ( i != arr . length - 1 ) System . out . print ( " " ) ; else System . out . print ( " \n " ) ; } } }
import java . util . Arrays ; import java . util . * ; class longpath { static ArrayList < Integer > adj [ ] ; static int ans ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int i ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; adj = new ArrayList [ n ] ; ans = 0 ; for ( i = 0 ; i < n ; i ++ ) adj [ i ] = new ArrayList ( ) ; for ( i = 0 ; i < m ; i ++ ) { int u = sc . nextInt ( ) - 1 ; int v = sc . nextInt ( ) - 1 ; adj [ u ] . add ( v ) ; } for ( i = 0 ; i < n ; i ++ ) dfs ( i , 0 ) ; System . out . println ( ans ) ; } public static void dfs ( int v , int l ) { if ( l > ans ) ans = l ; for ( int node : adj [ v ] ) dfs ( node , l + 1 ) ; } }
import java . util . Scanner ; //import java.util.Arrays; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); String a = sc.next(); String b = sc.next(); int num = Integer.parseInt(a+b); boolean flg = flase; for(int i = 1; i < num / 2; i++){ if(i + i == num){ flg = true; break; } } System.out.println(flg ? "Yes" : "No"); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String block [ ] = new String [ 1000 ] ; int counter = 0 ; while ( true ) { String command = sc . next ( ) ; if ( command . equals ( " quit " ) ) { break ; } else if ( comannd . equals ( " pop " ) ) { System . out . println ( block [ counter ] ) ; block [ counter ] = null ; counter -- ; } else { String color = sc . next ( ) ; block [ counter ] = color ; counter ++ ; } } } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; String str = scan . next ( ) ; int y = Integer . parseInt ( str . substring ( 0 , 4 ) ) ; int m = Integer . parseInt ( str . substring ( 5 , 7 ) ) ; int d = Integer . parseInt ( str . substring ( 8 , 10 ) ) ; if ( ( y > 2019 ) || ( ( y = 2019 ) && ( m >= 5 ) ) ) { System . out . println ( " TBD " ) ; } else { System . out . println ( " Heisei " ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int S1 = 0 ; int S2 = 1 ; for ( int i = 0 ; i < N ; i ++ ) { int f = sc . nextInt ( ) ; S1 = S1 + f ; S2 = S2 * f ; } flort t = S2 / S1 ; System . out . println ( " t " ) ; } }
import java . io . * ; import java . util . * ; public class Solution { static int check_three2 ( int num ) { if ( num < 10 && num != 3 ) return 0 ; int temp = num - ( num / 10 * 10 ) ; if ( temp == 3 ) { return 1 ; } else { return check_three2 ( temp ) ; } } static int check_three ( int num ) { if ( num % 3 == 0 ) { return 1 ; } else { if ( check_three2 ( num ) == 1 ) { return 1 ; } return 0 ; } } public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; for ( int i = 1 ; i <= N ; i ++ ) { if ( check_three ( i ) == 1 ) { System . out . print ( " " + i ) ; } } System . out . println ( " " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; while ( true ) { int n = in . nextInt ( ) ; if ( n == 0 ) break ; String name [ ] = new String [ n ] ; int P [ ] = new int [ n ] ; //種の値段 int S[]=new int[n];//実の値段 int M[]=new int[n];//何回実がなるか int F[]=new int[n];//累計何個実が出来るか plants pp[] = new plants[n]; for(int i=0;i<n;i++){ int mim = 0; int time=0; name[i]=in.next(); P[i]=in.nextInt(); time+=in.nextInt();//A time+=in.nextInt();//B time+=in.nextInt();//C mim+=in.nextInt();//D mim+=in.nextInt();//Eこれらは F[i]=in.nextInt(); S[i]=in.nextInt(); M[i]=in.nextInt(); for(int s=0;s<M[i];s++){ time+=mim; } double c = 1.000*((F[i]*S[i]*M[i])-P[i])/time; pp[i]=new plants(name[i],c); } Arrays.sort(pp,new ss()); Arrays.sort(pp); for(int i=0;i<n;i++){ System.out.println(pp[i].name); } System.out.println("#"); } } static class plants implements Comparable<plants>{ String name; double cost; plants(String name,double cost){ this.name=name; this.cost=cost; } public int compareTo(plants o) { return Double.compare(o.cost,this.cost);//降順 } } static class ss implements Comparator{ public int compare(Object o1, Object o2) { return ((plants)o1).name.compareTo(((plants)o2).name); } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; boolean takasa = 0 ; boolean teihen = 0 ; boolean syahen = 0 ; takasa = sc . nextInt ( ) ; teihen = sc . nextInt ( ) ; syahen = sc . nextInt ( ) ; syahen = 0.5 ; boolean menseki = 0 ; menseki = ( teihen * takasa ) * syahen ; int intmenseki = int ( menseki ) System . out . println ( menseki ) ; } }
import java . io . * ; import java . io . BufferedReader ; import java . io . InputStreamReader ; public class takoyaki { public static void main ( String [ ] args ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; int x = Integer . parseInt ( br . readLine ( ) ) ; int t = Integer . parseInt ( br . readLine ( ) ) ; int ans = 0 ; while ( n > 0 ) { ans += t ; n = n >= x ? n - x : 0 ; } System . out . println ( ans ) ; } }
import java . util . * public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nexyInt ( ) ; int c = sc . nextInt ( ) ; int r = ( a > b ? a : b ) > c ? ( a > b ? a : b ) : c ; System . out . println ( r * 10 + a + b + c - r ) ; } }
import java . ulti . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int current = sc . nextInt ( ) ; int mini = current , maxi = current , distance = 0 ; do { int res = Math . max ( Math . abs ( current - mini ) , Math . abs ( current - maxi ) ) ; if ( res > distance ) { distance = res ; } current = sc . nextInt ( ) ; } while ( sc . next ( ) != null ) ; if ( distance > current ) { System . out . println ( " Yay! " ) ; } else { System . out . println ( " Yay! " ) ; } } }
import java . util . * ; public class pck4 { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int n ; int k = new int [ 10000 ] while ( true ) { n = scan . nextInt ( ) ; if ( n == 0 ) break ; for ( int i = 0 ; i < n ; i ++ ) { k [ i ] = scan . nextInt ( ) ; if ( n == 1 ) { if ( k [ i ] > 1 ) { System . out . println ( 2 ) ; } } else if ( n >= 2 ) { System . out . println ( n + 1 ) ; } } } } }
import java . util . * ; public class D { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc = new Scanner(System.in); int N = sc.nextInt(); long K = sc.nextLong(); long[] a = new long[N]; long[] b = new long[N]; for(int i=0; i<N; i++) { a[i] = sc.nextLong(); b[i] = sc.nextLong(); } sc.close(); int r = 1; { long tempk = K; while((tempk = tempk/2) != 0) r++; } ArrayList<Long> ks = new ArrayList<Long>(); ks.add(K); for(int i=0; i<=r; i++) { long tempk = K; if((tempk>>>i)%2==0) continue; tempk = tempk & ~(pow(2, i)); if(i!=0) { tempk = tempk | (pow(2, i) -1); } ks.add(tempk); } long ans = 0; for(int i=0; i<ks.size(); i++) { long tempans = 0; long k = ks.get(i); for(int j=0; j<N; j++) { if((a[j]|k) == k) { tempans += b[j]; } } ans = Math.max(ans, tempans); } System.out.println(ans); } static long pow(long a, long r) { if(r==0) return 1; if(r%2==0) { long d = pow(a, r/2); return d*d; } else { return pow(a, r-1) * a; } } }
import java . util . * ; public Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; System . out . println ( sc . nextLine ( ) . toUpperCase ( ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String N = sc . next ( ) ; int sum = 0 ; for ( int i = 0 ; i < N . length ( ) ; i ++ ) { sum += N . charAt ( i ) - '0' ; } if ( sum % 9 == 0 ) { System . out . print ( " Yes " ) ; } else if ( sum == 0 ) { System . out . print ( " Yes " ) ; } else { System . out . print ( " No " ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( ( a * b ) % 2 == 0 ) { System . out . println ( " even " ) ; } else { System . out . println ( " odd " ) ; } }
import java . util . * ; import java . io . PrintWriter ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; int [ ] vol = new int [ n + 1 ] ; int two = 1 ; vol [ 0 ] = 1 ; for ( int i = 0 ; i <= n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; if ( a [ i ] > vol [ i ] ) { System . out . println ( - 1 ) ; return ; } if ( i != n ) { vol [ i + 1 ] = Math . min ( 100000000 , two = ( two - a [ i ] ) * 2 ) ; two = Math . min ( 100000000 , two ) ; } } System . out . println ( - 1 ) ; return ; long ans = 0 ; long num = 0 ; for ( int i = n ; i >= 0 ; i -- ) { num += a [ i ] ; num = Math . min ( vol [ i ] , num ) ; ans += num ; } System . out . println ( ans ) ; } }
import java . util . * ; public class Main { private static final Scanner scan = new Scanner ( System . in ) ; static final int TOP = 0 , SOUTH = 1 , EAST = 2 , WEST = 3 , NORTH = 4 , BOTTOM = 5 ; public static void main ( String [ ] args ) { int [ ] d = new int [ 6 ] ; for ( int i = 0 ; i < 6 ; i ++ ) { d [ i ] = scan . nextInt ( ) ; } String dirs = scan . next ( ) ; int len = dirs . length ( ) ; for ( int i = 0 ; i < len ; i ++ ) { char ch = dirs . charAt ( i ) ; switch ( ch ) { case 'E' : rollEast ( ) ; break ; case 'W' : rollWest ( ) ; break ; case 'S' : rollSouth ( ) ; break ; case 'N' : rollNorth ( ) ; break ; default : break ; } } System . out . println ( d [ TOP ] ) ; } public static void rollEast ( ) { int work = d [ TOP ] ; d [ TOP ] = d [ WEST ] ; d [ WEST ] = d [ BOTTOM ] ; d [ BOTTOM ] = d [ EAST ] ; d [ EAST ] = work ; } public static void rollWest ( ) { int work = d [ TOP ] ; d [ TOP ] = d [ EAST ] ; d [ EAST ] = d [ BOTTOM ] ; d [ BOTTOM ] = d [ WEST ] ; d [ WEST ] = work ; } public static void rollSouth ( ) { int work = d [ TOP ] ; d [ TOP ] = d [ NORTH ] ; d [ NORTH ] = d [ BOTTOM ] ; d [ BOTTOM ] = d [ SOUTH ] ; d [ SOUTH ] = work ; } public static void rollNorth ( ) { int work = d [ TOP ] ; d [ TOP ] = d [ SOUTH ] ; d [ SOUTH ] = d [ BOTTOM ] ; d [ BOTTOM ] = d [ NORTH ] ; d [ NORTH ] = work ; } }
import java . util . Scanner ; public class Main2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int K = sc . nextInt ( ) ; int count = 0 ; for ( int a = 1 ; a <= N ; a ++ ) { int ax = a % K ; int bs = K - ax ; for ( int b = bs ; b <= N ; b += K ) { int bx = b % K ; int cs1 = K - bx ; for ( int c = cs1 ; c <= N ; c += K ) { // if (((a+c)%K==0) && (b+c)%K==0){ count ++; // } } } } System.out.println(count); } }
import java . util . Scanner ; /** * Created by ui on 2016/02/23. */ public class XCubic { static void run ( ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; System . out . println ( x * x * x ) ; } } public class Main { public static void main ( String [ ] args ) { XCubic . run ( ) ; } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; char [ ] s = str . toCharArray ( ) ; if ( Character . isUpperCase ( s ) ) { System . out . println ( 'A' ) ; } else { System . out . println ( 'a' ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ; import static java . lang . Integer . parseInt ; /** * YAML */ public class P2438 { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String line ; String [ ] words ; P2438 main = new P2438 ( ) ; StringTokenizer query = new StringTokenizer ( br . readLine ( ) , " . " ) ; List < String > yaml = new ArrayList < > ( ) ; Obj [ ] objs = new Obj [ 50_000 ] ; //read while ((line = br.readLine()) != null && !line.isEmpty()) { yaml.add(line); } //parse for (int i = 0; i < yaml.size(); i++) { String line1 = yaml.get(i); //parent int n = 0; for (int j = 0; j < line1.length(); j++) { if (line1.charAt(j) == ' ') n++; else break; } if (objs[n] == null) { objs[n] = main.new Obj(); } //prop words = line1.substring(n).split(":"); if (words.length == 1) { //prop: object String line2 = yaml.get(i + 1); //self int m = 0; for (int j = 0; j < line2.length(); j++) { if (line2.charAt(j) == ' ') m++; else break; } if (objs[m] == null) { objs[m] = main.new Obj(); } String key = words[0]; objs[n].props.put(key, main.new Prop<Obj>(objs[m])); } else { //prop: string String key = words[0]; String string = words[1].substring(1); objs[n].props.put(key, main.new Prop<String>(string)); } } Obj obj = objs[0]; Prop prop = null; while (query.hasMoreTokens()) { if ((prop = obj.get(query.nextToken())) != null) { if (prop.value instanceof Obj) { obj = (Obj) prop.value; } else { if (query.hasMoreTokens()) { prop = null; break; } } } } String ans = ""; if (prop == null) { ans = "no such property"; } else if (prop.value instanceof String) { ans = "string \"" + prop.value + "\""; } else if (prop.value instanceof Obj) { ans = "object"; } System.out.println(ans); } //end main class Obj { Map<String, Prop> props; Obj() { props = new HashMap<>(); } Prop get(String key) { return props.get(key); } } class Prop<T> { T value; Prop(T value) { this.value = value; } } }
import java . util . Scanner ; public class b { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int D = sc . nextInt ( ) ; int N = sc . nextInt ( ) ; sc . close ( ) ; System . out . println ( Math . pow ( 100 , D ) * N ) ; } }
import java . util . Scanner ; class Main { public stsatic void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; //入力を受け取る int M1 = sc.nextInt(); int D1 = sc.nextInt(); int M2 = sc.nextInt(); int D2 = sc.nextInt(); answer(M1,M2); public static void answer(int A, int B){ if(A==B){ System.out.println(1); }else{ Sytsem.out.println(0); } } }
import java . util . * ; public class Saleresult { public static void main ( String [ ] args ) { ArrayList < String > view = new ArrayList < String > ( ) ; while ( true ) { Scanner sc = new Scanner ( System . in ) ; int datanum = sc . nextInt ( ) ; int [ ] [ ] data = new int [ datanum ] [ 4 ] ; int encounter = 0 ; if ( datanum == 0 ) break ; for ( int i = 0 ; i < datanum ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) { data [ i ] [ j ] = sc . nextInt ( ) ; } data [ i ] [ 3 ] = data [ i ] [ 1 ] * data [ i ] [ 2 ] ; for ( int e = i - 1 ; e >= 0 ; e -- ) { if ( data [ i ] [ 0 ] == data [ e ] [ 0 ] && data [ e ] [ 3 ] < 1000000 ) { data [ i ] [ 3 ] += data [ e ] [ 3 ] ; encounter = 1 ; } } if ( data [ i ] [ 3 ] >= 1000000 ) { view . add ( " " + data [ i ] [ 0 ] ) ; encounter = 1 ; } } if ( encounter == 0 ) view . add ( " NA " ) ; } for ( int i = 0 ; i < view . size ( ) ; i ++ ) System . out . println ( view . get ( i ) ) ; } }
import java . util . * ; import java . util . stream . * ; import java . io . * ; class Main { public static void main ( String [ ] args ) { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; br . lines ( ) . map ( line -> Stream . of ( line . split ( " " ) ) . mapToInt ( Integer :: parseInt ) . toArray ( ) ) . map ( ar -> Stream . of ( ( double ) ( ar [ 1 ] * ar [ 5 ] - ar [ 4 ] * ar [ 2 ] ) / ( ar [ 1 ] * ar [ 3 ] - ar [ 4 ] * ar [ 0 ] ) , ( double ) ( ar [ 5 ] * ar [ 0 ] - ar [ 2 ] * ar [ 3 ] ) / ( ar [ 0 ] * ar [ 4 ] - ar [ 1 ] * ar [ 3 ] ) ) . toArray ( ) ) . forEach ( xy -> System . out . printf ( " %.3f %.3f \n " , Math . round ( xy [ 0 ] , 3 ) , Math . round ( xy [ 1 ] , 3 ) ) ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; int t = Integer . parseInt ( str ) ; int h = t / 3600 ; int m = ( t % 3600 ) / 60 ; int s = ( t % 3600 ) % 60 ; System . out . println ( h + " : " + m + " : " + S ) ; } }
import java . util . * ; import java . math . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int k = in . nextInt ( ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int a ; for ( i = a ; i <= b ; i ++ ) { if ( i % k == 0 ) { System . out . println ( 'OK' ) ; break ; } } if ( i > b ) System . out . println ( 'NG' ) ; } }
import java . uti . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int d = scan . nextInt ( ) ; int sight = 2 * d + 1 ; if ( n % d == 0 ) { System . out . print ( n / d ) ; } else { System . out . print ( n / d + 1 ) ; } } }
import java . util . Scanner ; public class Exam1 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String str ; str = scanner . next ( ) ; char charValue = str . charAt ( 3 ) ; if ( charValue == '7' ) { charValue = '8' ; } String oldStr = str ; String newStr = oldStr . replace ( str . charAt ( 3 ) , '8' ) ; System . out . println ( newStr ) ; } }
import java . util . * ; public class abcd { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; if ( Math . abs ( a - c ) <= d || ( Math . abs ( a - b ) <= d && Math . abs ( b - c ) <= d ) ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import java . lang . Math ; import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String x = sc . next ( ) ; char ni = x . charAt ( 1 ) ; if ( ni == " R " ) { System . out . print ( " ABC " ) ; } else { System . out . print ( " ARC " ) ; } System . out . print ( x ) ; } }
import java . util . Scanner ; class At_Coder_01 { public static void main ( String args [ ] ) throws Exception { Scanner s = new Scanner ( System . in ) ; int N = s . nextInt ( ) ; int a = N % 10 ; if ( a == 2 || a == 4 || a == 5 || a == 7 || a == 9 ) System . out . println ( " hon " ) ; else if ( a == 0 || a == 1 || a == 6 || a == 8 ) System . out . println ( " pon " ) ; else System . out . println ( " bon " ) ; } }
import java . util . * ; class q1 { public static void main ( ) { int l ; String s ; Scanner sc = new Scanner ( System . in ) ; s = sc . next ( ) ; if ( s . length ( ) == 6 ) { if ( ( s . charAt ( 2 ) == s . charAt ( 3 ) ) && ( s . charAt ( 4 ) == s . charAt ( 5 ) ) ) System . out . print ( " Yes " ) ; else System . out . print ( " No " ) ; } } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner scan = new Scanner ( System . in ) ; x = scan . nextInt ( ) ; System . out . println ( 360 / x ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String S = scanner . next ; for ( int i = 0 ; i < S . length ( ) ; i ++ ) { System . out . println ( " x " ) ; } } }
import java . util . Scanner ; class Integer { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; if ( x == 0 ) { System . out . prinln ( 1 ) ; } else { system . out . println ( 0 ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( ( a * b ) % == 0 ) System . out . println ( " Even " ) ; else System . out . println ( " Odd " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String T = sc . next ( ) ; int changeCount = T . length ( ) ; //比較する最初の文字を決める for(int start=0; start<=S.length()-T.length(); start++) { int count = 0; for(int i=0; i<T.length(); i++) { if(S[start] != T[i]) { count ++; } } if(changeCount > count) { changeCount = count; } } System.out.println(changeCount); } }
import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner cin = new Scanner ( System . in ) ; String s1 = cin . nextLine ( ) ; String s2 = cin . nextLine ( ) ; int x = s2 . indexOf ( s1 ) ; if ( x == 0 && s1 . length ( ) + 1 == s2 . length ( ) ) System . out . println ( " YES " ) ; else System . out . println ( " NO " ) ; } }
import java . util . * ; import java . lang . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int [ ] [ ] A = new int [ 2 ] [ N + 1 ] ; int [ ] t0 = new int [ N + 1 ] ; int [ ] t1 = new int [ N + 1 ] ; int [ ] ans = new ans [ N + 1 ] ; int total0 = 0 , total1 = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { A [ 0 ] [ i ] = sc . nextInt ( ) ; total0 += A [ 0 ] [ i ] ; t0 [ i ] = total0 ; } for ( int i = 1 ; i <= N ; i ++ ) { A [ 1 ] [ i ] = sc . nextInt ( ) ; } for ( int i = N ; i >= 1 ; i -- ) { total1 += A [ 1 ] [ i ] ; t1 [ i ] = total1 ; } for ( int i = 1 ; i <= N ; i ++ ) { ans [ i ] = t0 [ i ] + t1 [ i ] ; } Arrays . sort ( ans ) ; System . out . println ( ans [ N ] ) ; } }
import java . util . * ; public class a { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int c = in . nextInt ( ) ; System . out . println ( ( int ) Math . min ( b / a , c ) ) ; in . close ( ) ; } }
import java . util . Scanner ; public classMain { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a , b , i , j ; a = scan . nextInt ( ) ; b = scan . nextInt ( ) ; for ( j = 0 ; j < b ; j ++ ) { System . out . print ( " # " ) ; } if ( a == 0 && b = 0 ) { break ; } else { System . out . println ( " " ) ; } for ( i = 0 ; i < a - 2 ; i ++ ) { System . out . print ( " # " ) ; for ( j = 0 ; j < b - 2 ; j ++ ) { System . out . print ( " . " ) ; } System . out . println ( " # " ) ; } for ( j = 0 ; j < b ; j ++ ) { System . out . print ( " # " ) ; } if ( a == 0 && b = 0 ) { break ; } else { System . out . println ( " " ) ; } } }
import java . io . * ; import java . util . * ; class Main { public static void main ( String [ ] args ) throws IOException { Scanner scanner = new Scanner ( System . in ) ; ArrayList bs = new ArrayList ( ) ; ArrayList rs = new ArrayList ( ) ; for ( ; ; ) { String op = scanner . next ( ) ; if ( op . equals ( " quit " ) ) { break ; } if ( op . equals ( " push " ) ) { String b = scanner . next ( ) ; bs . add ( b ) ; continue ; } if ( op . equals ( " pop " ) ) { rs . add ( bs . get ( bs . size ( ) - 1 ) ) ; bs . remove ( bs . size ( ) - 1 ) ; continue ; } } for ( int ii = 0 ; ii < rs . size ( ) ; ii ++ ) { System . out . println ( rs . get ( ii ) ) ; } } }
import gnu . getopt . Getopt ; class Main { public static void main ( String [ ] args ) { int x ; x = Integer . parseInt ( args [ 0 ] ) ; x = x * x * x ; System . out . println ( x ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Char n = sc . next ( ) ; System . out . println ( n ++ ) ; sc . close ( ) ; } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; String str = scan . next ( ) ; int y = Integer . parseInt ( str . substring ( 0 , 4 ) ) ; int m = Integer . parseInt ( str . substring ( 6 , 8 ) ) ; int d = Integer . parseInt ( str . substring ( 9 , 11 ) ) ; if ( ( y > 2019 ) || ( ( y = 2019 ) && ( m >= 5 ) ) ) { System . out . println ( " TBD " ) ; } else { System . out . println ( " Heisei " ) ; } } }
import java . io . * ; public class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader in = new BufferedReader ? ? ? ( new FileReader ( " foo.in " ) ) ; ? ? ? String str = br . readLine ( ) ; int x = Integer . parseInt ( str ) ; System . out . println ( x * x * x ) ; } }
import java . util . Scanner ; class A { public static void main ( String [ ] args ) { int x , y , z , temp ; Scanner input = new Scanner ( System . in ) ; x = input . nextInt ( ) ; y = input . nextInt ( ) ; z = input . nextInt ( ) ; temp = x ; x = z ; z = y ; y = temp ; System . out . println ( " " + x + " " + y + " " + z ) ; } }
import java . util . Scanner ; public class Question1 { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String st = s . next ( ) ; char c = st . charAt ( 0 ) ; if ( Character . isUpperCase ( c ) ) { System . out . println ( " A " ) ; } else { System . out . println ( " a " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long x = sc . nextInt ( ) ; List < Long > sweet = new ArrayList < Long > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { long a = sc . nextInt ( ) ; sweet . add ( a ) ; } Collections . sort ( sweet ) ; int num = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( x - sweet . get ( num ) >= 0 ) { x = x - sweet . get ( num ) ; num ++ ; } else { break ; } } if ( x > 0 ) { num -= 1 ; } System . out . println ( num ) ; } }
import java . util . Scanner ; public class mygraph { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = " 00 " ; String nbefore = " 1 " ; int N , D , n , ans ; D = sc . nextInt ( ) ; N = sc . nextInt ( ) ; for ( int i = 0 ; i < D ; i ++ ) { nbefore = nbefore + str ; } n = Integer . parseInt ( nbefore ) ; ans = n * N ; System . out . println ( ans ) ; } }
import java . util . * ; class Main { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int C = sc . nextInt ( ) ; int D = sc . nextInt ( ) ; while ( A <= 0 || C <= 0 ) { A = A - D ; C = C - B ; } if ( A <= 0 ) System . out . println ( " No " ) ; else System . out . println ( " Yes " ) } }
import java . util . Scanner ; import java . io . * ; class Main { public static void main ( String [ ] args ) { int [ ] A = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ; int [ ] A2 = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ; Scanner scan = new Scanner ( System . in ) ; for ( int i = 0 ; i < 9 ; i ++ ) { A [ i ] = sc . nextInt ( ) ; } int N ; int b ; N = sc . nextInt ( ) ; for ( int i = 0 ; i < N ; i ++ ) { b = sc . nextInt ( ) ; for ( int j = 0 ; j < 9 ; j ++ ) { if ( b == A [ j ] ) { A2 [ j ] = 1 ; } } } for ( int i = 0 ; i < 3 ; i ++ ) { int c = 1 ; for ( int j = 0 ; j < 3 ; j ++ ) { c *= A2 [ i + 3 * j ] ; } if ( c != 0 ) { System . out . println ( " Yes " ) ; return ; } } for ( int i = 0 ; i < 3 ; i ++ ) { int c = 1 ; for ( int j = 0 ; j < 3 ; j ++ ) { c *= A2 [ 3 * i + j ] ; } if ( c != 0 ) { System . out . println ( " Yes " ) ; return ; } } if ( A2 [ 0 ] * A2 [ 4 ] * A2 [ 8 ] != 0 || A2 [ 2 ] * A2 [ 4 ] * A2 [ 6 ] != 0 ) { System . out . println ( " Yes " ) ; return ; } System . out . println ( " No " ) ; } }
import java . io . * ; import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { String x = sc . next ( ) ; if ( x . equals ( " 0 " ) ) break ; int sum = 0 ; for ( int i = 0 ; i < x . length ( ) ; i ++ ) { sum += Integer . parseInt ( x [ i ] ) ; } System . out . printtln ( sum ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( Strings [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int x = scanner . nextInt ( ) ; System . out . println ( x * x * x ) ; } }
import java . util . Scanner ; public class Main2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { double m = sc . nextDouble ( ) ; double f = sc . nextDouble ( ) ; double r = sc . nextDouble ( ) ; if ( m == - 1 && f == - 1 && r == - 1 ) { break ; } if ( m == - 1 && f == - 1 ) { System . out . println ( " F " ) ; } if ( m + f >= 80 ) { System . out . println ( " A " ) ; } else if ( m + f >= 65 ) { System . out . println ( " B " ) ; } else if ( m + f >= 50 || ( m + f >= 30 && r >= 50 ) ) { System . out . println ( " C " ) ; } else if ( m + f >= 30 ) { System . out . println ( " D " ) ; } else { System . out . println ( " F " ) ; } } } }
import java . math . BigDecimal ; import java . util . Scanner ; public class Main1 { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; double x = scan . nextDouble ( ) ; double y = scan . nextDouble ( ) ; double x2 = scan . nextDouble ( ) ; double y2 = scan . nextDouble ( ) ; double result = Math . sqrt ( ( ( x - x2 ) * ( x - x2 ) ) + ( ( y - y2 ) * ( y - y2 ) ) ) ; if ( BigDecimal . valueOf ( result ) . scale ( ) > 8 ) { System . out . printf ( " %.8f " , result ) ; } else { System . out . print ( result ) ; } System . out . println ( ) ; } }
import java . util . * ; class Dpro { static int digitSum ( int n ) { int sum = 0 ; while ( n >= 1 ) { sum += ( n % 10 ) ; n /= 10 ; } return sum ; } public static void main ( String [ ] args ) { Scanner std = new Scanner ( System . in ) ; int k = std . nextInt ( ) ; int i = 1 ; int K = k ; int min = digitSum ( K ) ; while ( i < k * k ) { K = k * i ; if ( digitSum ( K ) < min ) min = digitSum ( K ) ; i ++ ; } System . out . println ( min ) ; } }
import java . util . Scanner ; public class MAIN { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int angka = input . nextInt ( ) ; int sum = 0 ; for ( int a = 1 ; a <= angka ; a ++ ) { sum += a ; } System . out . println ( sum ) ; } }
import java . util . Scanner ; import java . util . ArrayList ; public class Main { Scanner scan = new Scanner ( System . in ) ; int H ; int N ; ArrayList < Integer > A = new ArrayList < > ( ) ; Main ( ) { H = scan . nextInt ( ) ; N = scan . nextInt ( ) ; for ( int i = 0 ; i < N ; i ++ ) { A . add ( scan . nextInt ( ) ) ; } judge ( H , A ) ; /* for(int i = 0; i < N; i++){ System.out.println(A.get(i)); }*/ } public void judge ( int H , ArrayList < Integer > A ) { for ( int i = 0 ; i < A . size ( ) ; i ++ ) { H -= A . get ( i ) ; } if ( H <= 0 ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } public static void main ( String [ ] args ) { new Common ( ) ; } }
import java . util . * ; public class Main { public static void main ( Striing [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int i , limit ; int [ ] distance = new int [ 5 ] ; for ( i = 0 ; i < 5 ; i ++ ) distance [ i ] = Integer . parseInt ( sc . next ( ) ) ; limit = Integer . parseInt ( sc . next ( ) ) ; if ( distance [ 4 ] - distance [ 0 ] > limit ) System . out . println ( " :( " ) ; else System . out . println ( " Yay! " ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int number = sc . nextInt ( ) ; int factorial = number ; for ( int i = 1 ; i < number ; i ++ ) { factorial = factorial * ( number - i ) ; } System . out . println ( factorial ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String [ ] str = scan . nextLine ( ) . spilit ( " " ) ; Integer joinCount = str [ 0 ] ; Integer displayCount = str [ 1 ] ; Integer internalCount = 0 ; if ( joinCount >= 10 ) { internalCount = displayCount ; } else { internalCount = ( 100 * ( 10 - joinCount ) ) + displayCount ; } System . out . println ( internalCount ) ; scan . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNextInt ( ) ) { int n = sc . nextInt ( ) ; for ( int i1 = 0 ; i1 <= n ; i1 ++ ) { for ( int i2 = 0 ; i2 <= n - i1 ; i2 ++ ) { for ( int i3 = 0 ; i3 <= n - i1 - i2 ; i3 ++ ) { int i4 = n - i1 - i2 - i3 ; System . out . println ( i1 + " , " + i2 + " , " + i3 + " , " + i4 ) ; } } } } sc . close ( ) ; } } sc . close ( ) ; } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { InputStreamReader is = new InputStreamReader ( System . in ) ; BufferedReader br = new BufferedReader ( is ) ; int x = 0 ; try { String str = br . readLine ( ) ; x = Integer . parseInt ( str ) ; } catch ( ) int i = x ^ 3 ; System . out . println ( i ) ; } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; ArrayList < Integer > m = new ArrayList ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { m . add ( sc . nextInt ( ) ) ; } Collections . sort ( m ) ; Collections . reverse ( m ) ; for ( int i = 0 ; i < 3 ; i ++ ) { System . out . println ( m . get ( i ) ) ; } } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 int n = sc.nextInt(); int l = sc.nextInt(); long t = sc.nextInt(); int[] x = new int[n]; int[] w = new int[n]; for(int i=0;i<n;i++) { x[i] = sc.nextInt(); w[i] = sc.nextInt(); } int[] y = new int[n]; ArrayList<Integer> list = new ArrayList<>(); for(int i = 0;i<n;i++) { if(w[i]==1) { y[i] = location(l,x[i]+t); }else { y[i] = location(l,x[i]-t); } list.add(y[i]); } int firstIndex = y[0]; Collections.sort(list); long counter =0; if(w[0]==1) { for(int i = 1;i<n;i++) { if(w[i]==2) { if(t*2-(x[i]-x[0])<0) { }else { counter+=(t*2-(x[i]-x[0]))/l+1; } } } counter = (counter+1)%n; if(counter ==0)counter =n; }else { for(int i = n-1;i>0;i--) { if(w[i]==1) { if(t*2-(x[0]+l-x[i])<0) { }else { counter+=(t*2-(x[0]+l-x[i]))/l+1; } } } counter = (1-counter); counter = counter%n; if(counter<=0)counter+=n; } int offset = list.indexOf(firstIndex)-counter; for(int i =1;i<n+1;i++) { int listindex = offset+i; if(listindex<0) { listindex+=n; } if(listindex>=n) { listindex-=n; } System.out.println(list.get(listindex)); } /* TreeMap<Integer,Integer> treeMap = new TreeMap<>();//sorted no duplication treeMap.put(b[n], n); */ } static int location(int length,long value) { int loc = (int) (value%length); if(loc<0)loc+=length; return loc; } } /* class City{ int order; int prefecture; int year; int number; City(int order,int prefecture, int year){ this.order = order; this.prefecture = prefecture; this.year = year; } } */
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; long [ ] [ ] k = { { 1 , 1 , 1 } , { 1 , 1 , - 1 } , { 1 , - 1 , 1 } , { - 1 , 1 , 1 } , { - 1 , - 1 , 1 } , { - 1 , 1 , - 1 } , { 1 , - 1 , - 1 } , { - 1 , - 1 , - 1 } } ; long [ ] [ ] sum = new long [ 8 ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int v = 0 ; v < 8 ; v ++ ) { long x = sc . nextLong ( ) , y = sc . nextLong ( ) , z = sc . nextLong ( ) ; sum [ v ] [ i ] = x * k [ v ] [ 0 ] + y * k [ v ] [ 1 ] + z * k [ v ] [ 2 ] ; } } long ans = 0 ; for ( int v = 0 ; v < 8 ; v ++ ) { Arrays . sort ( sum [ v ] ) ; long lower = 0 , upper = 0 ; for ( int i = 0 , c = n - 1 ; i < m ; i ++ , c -- ) { lower += sum [ v ] [ i ] ; upper += sum [ v ] [ c ] ; } ans = Math . max ( ans , Math . max ( Math . abs ( lower ) , Math . abs ( upper ) ) ) ; } System . out . println ( ans ) ; }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; InputStreamReader reader = new InputStreamReader ( System . in ) ; while ( sc . hasNext ( ) ) { int a = sc . nextInt ( ) ; String op = sc . next ( ) ; int b = sc . nextInt ( ) ; int answer = 0 ; if ( op . equals ( " + " ) ) { answer = a + b ; } else if ( op . equals ( " - " ) ) { answer = a - b ; } else if ( op . equals ( " * " ) ) { answer = a * b ; } else if ( op . equals ( " / " ) ) { answer = a / b ; } else if ( op . equals ( " ? " ) ) { break ; } System . out . printf ( " %d \n " , answer ) ; } } }
import java . util . * ; public class UniqueNumber { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int i , j , k , c = 0 ; int [ ] [ ] a ; a = new int [ n ] [ n ] ; for ( i = 0 ; i < n ; i ++ ) { a [ 0 ] [ i ] = sc . nextInt ( ) ; a [ 1 ] [ i ] = sc . nextInt ( ) ; a [ 2 ] [ i ] = sc . nextInt ( ) ; } for ( i = 0 ; i < 3 ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { for ( k = j + 1 ; k < n ; k ++ ) { if ( a [ i ] [ j ] == a [ i ] [ k ] ) { a [ i ] [ k ] = 0 ; c = c + 1 ; } } if ( c > 0 ) { a [ i ] [ j ] = 0 ; } c = 0 ; } } for ( i = 0 ; i < n ; i ++ ) { System . out . println ( a [ 0 ] [ i ] + a [ 1 ] [ i ] + a [ 2 ] [ i ] ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String x = sc . next ( ) ; String y = Integer . toString ( x . lentgh ( ) - 2 ) ; System . out . print ( x . charAt ( 0 ) ) ; System . out . print ( y ) ; System . out . println ( x . charAt ( x . length - 1 ) ) ; } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { int [ ] [ ] card = new int [ 4 ] [ 13 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 13 ; j ++ ) card [ i ] [ j ] = 0 ; } Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( i = 0 ; i < n ; i ++ ) { pattern = sc . next ( ) ; number = sc . nextInt ( ) ; switch ( pattern . charAt ( 0 ) ) { case 'S' : card [ 0 ] [ number - 1 ] = 1 ; break ; case 'H' : card [ 1 ] [ number - 1 ] = 1 ; break ; case 'C' : card [ 2 ] [ number - 1 ] = 1 ; break ; default : card [ 3 ] [ number - 1 ] = 1 ; break ; } } for ( i = 0 ; i < 13 ; i ++ ) { for ( j = 0 ; j < 13 ; j ++ ) { if ( card [ i ] [ j ] != 1 ) { if ( i == 0 ) System . out . println ( " S " + j + 1 ) ; else if ( i == 1 ) System . out . println ( " H " + j + 1 ) ; else if ( i == 2 ) System . out . println ( " C " + j + 1 ) ; else System . out . println ( " D " + j + 1 ) ; } } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; String b = sc . next ( ) ; String s = s . substring ( 0 , 1 ) + s . substring ( 2 , 4 ) ; int c = ( int ) s ; long d = a * c ; System . out . println ( d / 100 ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = " No " ; if ( s . charAt ( 0 ) == s . charAt ( 1 ) ) { if ( s . charAt ( 2 ) == s . charAt ( 3 ) && s . charAt ( 0 ) != s . charAt ( 2 ) { t = " Yes " ; } } if ( s . charAt ( 0 ) == s . charAt ( 2 ) ) { if ( s . charAt ( 1 ) == s . charAt ( 3 ) && s . charAt ( 0 ) != s . charAt ( 1 ) { t = " Yes " ; } } if ( s . charAt ( 0 ) == s . charAt ( 3 ) ) { if ( s . charAt ( 1 ) == s . charAt ( 2 ) && s . charAt ( 0 ) != s . charAt ( 1 ) { t = " Yes " ; } } System . out . println ( t ) ; } }
import java . io . * ; import java . util . * ; public class Main { private void compute ( ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int p = scanner . nextInt ( ) ; int e , o ; for ( int i = 0 ; i < n ; i ++ ) { if ( scanner . nextInt ( ) % 2 == 0 ) e ++ ; else o ++ ; } long rtn = 1 ; if ( p == 1 ) { rtn *= o ; o -- ; } long or , er ; for ( int i = 0 ; i <= o ; i += 2 ) { or += co ( o , i ) ; } for ( int i = 0 ; i <= e ; i ++ ) { er += co ( e , i ) ; } System . out . println ( " " ) ; } private static long co ( int n , int k ) { long rtn = 1 ; for ( int i = 0 ; i < k ; i ++ ) { rtn *= n - i ; rtn /= i + 1 ; } return rtn ; } public static void main ( String [ ] args ) { new Main ( ) . compute ( ) ; } }
import sun . jvm . hotspot . opto . HaltNode ; import java . util . ArrayList ; import java . util . HashMap ; import java . util . HashSet ; import java . util . List ; import java . util . Map ; import java . util . Scanner ; import java . util . Set ; import java . util . TreeSet ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int k = scanner . nextInt ( ) ; int c = scanner . nextInt ( ) ; String s = scanner . next ( ) ; int [ ] dpLeftToRight = new int [ n ] ; dpLeftToRight [ 0 ] = s . charAt ( 0 ) == 'x' ? 0 : 1 ; for ( int i = 1 ; i < s . length ( ) ; ++ i ) { if ( s . charAt ( i ) == 'x' ) { dpLeftToRight [ i ] = dpLeftToRight [ i - 1 ] ; } else { if ( i - c - 1 >= 0 ) { dpLeftToRight [ i ] = Math . max ( dpLeftToRight [ i - 1 ] , dpLeftToRight [ i - c - 1 ] + 1 ) ; } else { dpLeftToRight [ i ] = Math . max ( dpLeftToRight [ i - 1 ] , 1 ) ; } } // System.out.println("dpLeftToRight[" + (i + 1) + "]: " + dpLeftToRight[i]); } if (dpLeftToRight[n - 1] > k) { return; } Map<Integer, Set<Integer>> workDaysToDayLeftToRight = new HashMap<>(); for (int i = 0; i < n; ++i) { if (s.charAt(i) == 'x') { continue; } int workDays = dpLeftToRight[i]; if (!workDaysToDayLeftToRight.containsKey(workDays)) { workDaysToDayLeftToRight.put(workDays, new HashSet<>()); } workDaysToDayLeftToRight.get(workDays).add(i + 1); } int[] dpRightToLeft = new int[n]; dpRightToLeft[n - 1] = s.charAt(n - 1) == 'x' ? 0 : 1; for (int i = s.length() - 2; i >= 0; --i) { if (s.charAt(i) == 'x') { dpRightToLeft[i] = dpRightToLeft[i + 1]; } else { if (i + c + 1 < n) { dpRightToLeft[i] = Math.max(dpRightToLeft[i + 1], dpRightToLeft[i + c + 1] + 1); } else { dpRightToLeft[i] = Math.max(dpRightToLeft[i + 1], 1); } } // System.out.println("dpRightToLeft[" + (i + 1) + "]: " + dpRightToLeft[i]); } Map<Integer, Set<Integer>> workDaysToDayRightToLeft = new HashMap<>(); for (int i = 0; i < n; ++i) { if (s.charAt(i) == 'x') { continue; } int workDays = dpRightToLeft[i]; if (!workDaysToDayRightToLeft.containsKey(workDays)) { workDaysToDayRightToLeft.put(workDays, new HashSet<>()); } workDaysToDayRightToLeft.get(workDays).add(i + 1); } Set<Integer> ans = new TreeSet<>(); for (int i = 1; i <= n; ++i) { if (workDaysToDayLeftToRight.containsKey(i) && workDaysToDayLeftToRight.get(i).size() == 1) { ans.add(workDaysToDayLeftToRight.get(i).iterator().next()); } if (workDaysToDayRightToLeft.containsKey(i) && workDaysToDayRightToLeft.get(i).size() == 1) { ans.add(workDaysToDayRightToLeft.get(i).iterator().next()); } } for (int day: ans) { System.out.println(day); } } }
import java . util . Arrays ; import java . util . Scanner ; import java . util . Vector ; public class MAIN { /** * @param args */ public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ int[] box=new int[10]; Scanner sc=new Scanner(System.in); for(int i=0;i<10;i++){ box[i]=sc.nextInt(); } Arrays.sort(box); for(int i=0;i<3;i++) System.out.println(box[9-i]); } }
import java . util . * ; public class Main { int T , S , E , W , N , U ; public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int [ ] in = new int [ 6 ] ; for ( int i = 0 ; i < 6 ; i ++ ) { in [ i ] = scan . nextInt ( ) ; } T = in [ 0 ] ; S = in [ 1 ] ; E = in [ 2 ] ; W = in [ 3 ] ; N = in [ 4 ] ; U = in [ 5 ] ; int q = scan . nextInt ( ) ; for ( int i = 0 ; i < q ; i ++ ) { int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; boolean flg = false ; while ( true ) { if ( m == N ) { MoveSouth ( ) ; MoveSouth ( ) ; } else if ( m == U ) { MoveSouth ( ) ; MoveSouth ( ) ; MoveSouth ( ) ; } else if ( m == T ) { MoveSouth ( ) ; } else { MoveEast ( ) ; } if ( m == S ) { if ( n == T ) { flg = true ; break ; } else { MoveEast ( ) ; } } } System . out . println ( E ) ; } } public static void MoveSouth ( ) { int a = T ; T = N ; N = U ; U = S ; S = a ; } public static void MoveEast ( ) { int a = T ; T = W ; W = U ; U = E ; E = a ; } public static void MoveNorth ( ) { int a = T ; T = S ; S = U ; U = N ; N = a ; } public static void MoveWest ( ) { int a = T ; T = E ; E = U ; U = W ; W = a ; } }
import java . util . * ; import java . io . BufferedReader ; import java . io . BufferedWriter ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . next ( ) ) ; int m = Integer . parseInt ( sc . next ( ) ) ; int [ ] c = new int [ 10000 ] ; for ( int i = 0 ; i < m ; i ++ ) { d [ i ] = Integer . parseInt ( sc . next ( ) ) ; } int dp [ ] = new int [ n + 1 ] ; dp [ 0 ] = 1 ; for ( int i = 1 ; i < n ; i ++ ) { dp [ i ] = dp [ i - 1 ] + 1 ; for ( int j = 0 ; j < m ; j ++ ) { if ( c [ j ] == i ) { dp [ i ] = 1 ; } } } System . out . println ( dp [ n ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int n = sc . nextInt ( ) ; if ( n == 0 ) { break ; } int [ ] scores = new int [ n ] ; for ( int i = 0 ; i < scores . length ; i ++ ) { scores [ i ] = sc . nextInt ( ) ; } double a = 0 , b = 0 , average = 0 , variance = 0 ; for ( int i = 0 , i < n , i ++ ) { a = a + scores [ i ] ; } average = a / n ; for ( int i = 0 ; i < n ; i ++ ) { b = b + Math . pow ( scores { i ) - average , 2 ) ; } variance = a / n ; System . out . println ( Math . sqrt ( variance ) ) ; } } }
import java . io . * ; public class A { public static void main ( String [ ] args ) { try { BufferedReader in = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String s = new String ( in . readLine ( ) ) ; int ans = 700 ; if ( s . charAt ( 0 ) == 'o' ) { ans += 100 ; } if ( s . charAt ( 1 ) == 'o' ) { ans += 100 ; } if ( s . charAt ( 2 ) == 'o' ) { ans += 100 ; } System . out . println ( ans ) ; } catch ( IOException e ) { } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { // Your code here! Scanner sc = new Scanner(System.in); int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); int d = sc.nextInt(); int e = sc.nextInt(); int tmpb = c * 60 + d; int tmpa = a * 60 + b; int tmpc = tmpb - tmpa; int tmpd = tmpc / e; int tmpx = tmpc - e; System.out.println(tmpx); } } import java.util.*; public class Main { public static void main(String[] args) throws Exception { // Your code here! Scanner sc = new Scanner(System.in); int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); int d = sc.nextInt(); int e = sc.nextInt(); int tmpb = c * 60 + d; int tmpa = a * 60 + b; int tmpc = tmpb - tmpa; int tmpd = tmpc / e; int tmpx = tmpc - e; System.out.println(tmpx); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNextLine ( ) ; ) { String line = sc . nextLine ( ) ; int num = Integer . parseInt ( line ) ; int result = calculatePrimeNumberQty ( num ) ; System . out . println ( result ) ; } } private static int calculatePrimeNumberQty ( int argNum ) { if ( argNum == 2 ) return 1 ; int cnt = 0 ; for ( int num = 2 ; num < argNum ; num ++ ) { boolean isPrime = judgePrimeNumber ( num ) ; if ( isPrime ) { cnt ++ ; } } return cnt ; } private static boolean judgePrimeNumber ( int num ) { if ( num == 2 ) return true ; if ( num % 2 == 0 ) return false ; for ( int i = 2 ; i < num ; i ++ ) { if ( num % i == 0 ) return false ; } return true ; } }
import java . util . * ; class digitsum { public static void main ( String [ ] args ) { int n , j , sum = 0 , min = 0 ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; for ( int i = 1 ; i < n ; i ++ ) { j = n - i ; //System.out.println(i + ", " + j + ", "); sum = sumDigits(i) + sumDigits(j); if(i == 1){ min = sum; } if(min > sum){ min = sum; } } System.out.println(min); } static public int sumDigits(int n){ int sum = 0; while(n != 0){ sum += n % 10; n /= 10; } return sum; } }
import java . util . Scanner ; public class SortingThreeNumbers { public static void main ( String [ ] args ) { // ?¨??????\??????????????????????????????????????? Scanner sc = new Scanner(System.in); // 3?????????????????????????????????????????´??°?????¨???????????????????????? int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if (a < b) { if (b < c) { System.out.printf("%d %d %d?\n", a, b, c); } else if (a < c) { System.out.printf("%d %d %d?\n", a, c, b); } else if (c < a){ System.out.printf("%d %d %d?\n", c, a, b); } }else{ if (a < c) { System.out.printf("%d %d %d?\n", b, a, c); } else if (b < c) { System.out.printf("%d %d %d?\n", b, c, a); } else if (c < b){ System.out.printf("%d %d %d?\n", c, b, a); } } } }
import java . util . HashMap ; import java . util . Map ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; //軒数 int M = sc.nextInt(); //ほしい本数 Map<Integer, Integer> mMap = new HashMap<Integer, Integer>(); for (int i = 0; i < N; i++) { mMap.put(sc.nextInt(), sc.nextInt()); } int ans = 0; for(Map.Entry<Integer, Integer> entry : mMap.entrySet()) { int buy = Math.min(M, entry.getValue()); ans += buy * entry.getKey(); M -= buy; } System.out.println(ans); sc.close(); }
import java . util . Scanner ; import java . util . Arrays ; class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; boolean [ ] numbers = new int [ 4 ] [ 13 ] ; for ( int i = 0 ; i < n ; i ++ ) { String mark = scanner . nextString ( ) ; int card = scanner . nextInt ( ) ; if ( mark . equals ( " S " ) ) { numbers [ 0 ] [ card - 1 ] = true ; } else if ( mark . equals ( " H " ) ) { numbers [ 1 ] [ card - 1 ] = true ; } else if ( mark . equals ( " C " ) ) { numbers [ 2 ] [ card - 1 ] = true ; } else if ( mark . equals ( " D " ) ) { numbers [ 3 ] [ card - 1 ] = true ; } } for ( int i = 0 ; i <= 3 ; i ++ ) { for ( int j = 0 ; j <= 13 ; j ++ ) { if ( numbers [ i ] [ j ] == false ) { if ( i . equals ( " S " ) ) { System . out . println ( " S " + j ) ; } else if ( mark . equals ( " H " ) ) { System . out . println ( " H " + j ) ; } else if ( mark . equals ( " C " ) ) { System . out . println ( " C " + j ) ; } else if ( mark . equals ( " D " ) ) { System . out . println ( " D " + j ) ; } } } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int result = Math . pow ( N , 3 ) ; System . out . println ( result ) ; } }
import java . io . * ; import java . util . * ; Class EntranceExam { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ( ) ) ; int t = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; Double res = t / x ; System . out . println ( res ) ; } }
import java . util . * ; import static java . util . Arrays . * ; import static java . lang . Math . * ; public class Main { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { while ( read ( ) ) solve ( ) ; } static int N , M , R , Q ; static Range2 [ ] qs ; static ArrayList < Range > [ ] [ ] rs ; static boolean read ( ) { N = sc . nextInt ( ) ; M = sc . nextInt ( ) ; if ( N == 0 && M == 0 ) return false ; rs = new ArrayList [ N + 1 ] [ M + 1 ] ; // PC Student for (int i = 0; i < N + 1; i++) { rs[i] = new ArrayList[M + 1]; for (int j = 0; j < M + 1; j++) { rs[i][j] = new ArrayList<Range>(); } } R = sc.nextInt(); for (int i = 0; i < R; i++) { int t, n, m, s; t = sc.nextInt(); n = sc.nextInt(); m = sc.nextInt(); s = sc.nextInt(); if (s == 1) { rs[n][m].add(new Range(t, -1)); } else { for (int j = 0; j < rs[n][m].size(); j++) { if (rs[n][m].get(j).end == -1) { rs[n][m].get(j).end = t; break; } } } } Q = sc.nextInt(); qs = new Range2[Q]; for (int i = 0; i < Q; i++) qs[i] = new Range2(sc.nextInt(), sc.nextInt(), sc.nextInt()); return true; } static void solve() { for (int i = 0; i < Q; i++) { int ans = 0; for (int t = qs[i].start; t < qs[i].end; t++) { boolean add = false; for (int j = 1; j <= N && !add; j++) { for (int k = 0; k < rs[j][qs[i].student].size() && !add; k++) { if (rs[j][qs[i].student].get(k).start <= t && t < rs[j][qs[i].student].get(k).end) { ans++; add = true; } } } } System.out.println(ans); } } } class Range { int start, end; Range(int start, int end) { this.start = start; this.end = end; } } class Range2 { int start, end, student; Range2(int start, int end, int student) { this.start = start; this.end = end; this.student = student; } }
import java . util . * ; class A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; System . out . println ( 1000 - N % 1000 ) ; } }
import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String s ; String [ ] t ; int [ ] location = new int [ 3 ] ; location [ 0 ] = 1 ; location [ 1 ] = 0 ; location [ 2 ] = 0 ; int alt ; int [ ] number = new int [ 2 ] ; while ( ( s = reader . readLine ( ) ) != null ) { t = s . split ( " , " ) ; for ( int i = 0 ; i < 2 ; i ++ ) { switch ( t [ i ] ) { case " A " : number [ i ] = 0 ; break ; case " B " : number [ i ] = 1 ; break ; default : number [ i ] = 2 ; break ; } } alt = location [ number [ 0 ] ] ; location [ number [ 0 ] ] = location [ number [ 1 ] ] ; location [ number [ 1 ] ] = alt ; } for ( int j = 0 ; j < 3 ; j ++ ) { if ( location [ j ] == 1 ) { switch ( j ) { case 0 : System . out . println ( " A " ) ; break ; case 1 : System . out . println ( " B " ) ; break ; case 2 : System . out . println ( " C " ) ; break ; } } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int k = scan . nextInt ( ) ; int [ ] h = new int [ ] ; for ( int i = o ; i < n ; i ++ ) { h [ i ] = scan . nextInt ( ) ; } Arrays . sort ( h ) ; int ans = Integer . MAX_VALUE ; for ( int j = 0 ; j < n ; j ++ ) { ans = Math . min ( ans , h [ j + k ] - h [ j ] ) ; } System . out . print ( ans ) ; } }
import java . util . * ; public class Main { // Main public static void main(String[] args){ Scanner input=new Scanner(System.in); int a=input.nextInt(); int b=input.nextInt(); int c=input.nextInt(); temp=a; a=b; b=temp; c=temp; a=c; } }
import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; System . out . println ( ( a <= 9 && b <= 9 ) ? a * b : - 1 ) ; } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( a * b + " " + 2 ( a + b ) ) ; } }
import java . util . Scanner ; public class Main { public void solve ( ) { Scanner sc = new Scanner ( System . in ) ; int syu , mai , a , uri ; for ( int t = 0 ; t < 4 ; t ++ ) { syu = sc . nextInt ; if ( syu == 1 ) { a = 6000 ; } else if ( syu == 2 ) { a = 4000 ; } else if ( syu == 3 ) { a = 3000 ; } else if ( syu == 4 ) { a = 2000 ; } mai = sc . nextInt ( ) ; uri = a * mai ; System . out . println ( uri ) ; } } public static void main ( String [ ] args ) { Main obj = new Main ( ) ; obj . solve ( ) ; } }
import java . util . * ; public class Contenst { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; char [ ] cs = sc . nextLine ( ) . toCharArray ( ) ; boolean flagA = true ; //偶数 for (int i = 0; i < cs.length; i+=2) { if (cs[i] == 'L') { flagA = false; break; } } boolean flagB = true; //奇数 for (int i = 1; i < cs.length; i+=2) { if (cs[i] == 'R') { flagB = false; break; } } if (flagA && flagB) { System.out.println("Yes"); } else { System.out.println("No"); } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int a = scanner . nextInt ( ) ; String str = scanner . next ( ) ; int valLen = str . length ( ) ; if ( valLen = a ) { System . out . println ( str ) ; } else if ( valLen < a ) { System . out . println ( str ) ; } else { String i = str . substring ( 0 , a ) ; System . out . println ( i + " ... " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // Scannerクラスのインスタンスの生成 Scanner sc = new Scanner(System.in); String[] ss = sc.next().split(""); if(ss[0].equals(ss[1]) && ss[2].equals(ss[3]) && !(ss[0].equals(ss[2]))) { System.out.println("Yes"); } else if (ss[0].equals(ss[2]) && ss[1].equals(ss[3]) && !(ss[0].equals(ss[1])) { System.out.println("Yes"); } else if (ss[0].equals(ss[3]) && ss[1].equals(ss[2]) && !(ss[0].equals(ss[1])) { System.out.println("Yes"); } else { System.out.println("No"); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; int [ ] frags = new int [ n ] ; int i = 0 ; while ( sc . hasNext ( ) ) { frags [ i ++ ] = sc . nextInt ( ) ; } Main soln = new Main ( ) ; System . out . println ( soln . jdg ( t , frags ) ) ; } private long jdg ( int t , int [ ] frags ) { long res = ( long ) t ; if ( frags . length == 1 ) return res ; int dlt = 0 ; for ( int i = 0 ; i < dlt . length ; i ++ ) { dlt = frags [ i + 1 ] - frags [ i ] ; res += ( long ) ( ( dlt < t ) ? dlt : t ) ; } return res ; } }
import java . util . Scanner ; public class Teppei { public static void main ( String [ ] args ) { // ?¨??????\??????????????????????????????????????? Scanner sc = new Scanner(System.in); // ????????????????????????????????´??°?????¨???????????????????????? int i,j,c; while (true) { int H = sc.nextInt(); int W= sc.nextInt(); if (H == 0 && W == 0) { break; } for(i=0;i<H;i++){ for(j=0;j<W;j++){ c = j%2; if(c == 1) System.out.printf("."); else{ System.out.printf("#"); } } System.out.printf("\n"); } System.out.printf("\n"); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; final int N = sc . nextInt ( ) ; int [ ] array1 = new int [ N ] ; int counter = 0 ; for ( int i = 0 ; i < N ; i ++ ) { array [ i ] = i + 1 ; } for ( int i = 0 ; i < N ; i ++ ) { if ( array [ i ] % 2 == 1 ) { counter ++ ; } } double answer = counter / N ; System . out . println ( answer ) ; } }
import java . io . * ; public class Main { public Main ( ) { try { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; System . out . println ( str . replace ( " apple " , " xxxxx " ) . replace ( " peach " , " apple " ) . replace ( " xxxxx " , " peach " ) ) ; br . close ( ) } catch ( IOException e ) { System . out . println ( e . getMessage ( ) ) ; } } public static void main ( String [ ] args ) { new Main ( ) ; } }
import java . util . Scanner ; public class Multiplication1 { private static final Scanner in = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { System . out . println ( in . nextInt ( ) * in . nextInt ( ) ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; public class E { static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; } String next ( ) { while ( st == null || ! st . hasMoreElements ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } return st . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double . parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = " " ; try { str = br . readLine ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return str ; } } public static void main ( String [ ] args ) { FastReader fr = new FastReader ( ) ; int N = fr . nextInt ( ) ; int W = fr . nextInt ( ) ; // upto 10^5 int[] w = new int[N]; long[] v = new long[N]; for(int i = 0; i < N; i++) { w[i] = fr.nextInt(); v[i] = fr.nextLong(); } long[][] dp = new long[N+1][W+1]; for(int i = 1; i <= N; i++) { for(int j = 1; j <= W; j++) { if (w[i-1] > j) dp[i][j] = dp[i-1][j]; else dp[i][j] = Math.max(dp[i-1][j], dp[i-1][j-w[i-1]] + v[i-1]); } } System.out.println(dp[N][W]); } }
import java . util . Scanner ; public class A { static Scanner sc ; public static void main ( String [ ] args ) { String x ; sc = new Scanner ( System . in ) ; x = sc . next ( ) ; long n = x . length ( ) ; char [ ] X = x . toCharArray ( ) ; long len = n ; for ( long i = 0 ; i < n - 1 ; i ++ ) { if ( X [ ( int ) i ] == 'S' && X [ ( int ) ( i + 1 ) ] == 'T' ) { len -= 2 ; long j = i ; while ( j - 1 >= 0 && X [ ( int ) ( j - 1 ) ] == 'S' ) { if ( X [ ( int ) ( i + 2 ) ] == 'T' ) { i ++ ; j -- ; len -= 2 ; } else { break ; } } } } System . out . println ( len ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; String s = " " ; if ( a > b && a > c && c > b ) { s = " Yes " ; } else if ( b > a && b > c && c > a ) { s = " Yes " ; } else { s = " No " ; } System . out . println ( s ) ; } }
import java . util . Scanner ; public class Three { public static void main ( String arg [ ] ) { int Math = 0 ; Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int c = scan . nextInt ( ) ; for ( int x = a ; x <= b ; x ++ ) { if ( c % x == 0 ) { Math += 1 ; } else { } } System . out . println ( Math ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { String str = sc . next ( ) ; if ( str . equals ( " - " ) ) break ; } int n = sc . nextInt ( ) ; for ( i = 0 ; i < n ; i ++ ) { int h = sc . nextInt ( ) ; str = str . sbstring ( ( h + 1 ) - 1 ) + str . sbstring ( 0 , h ) } System . out . println ( str ) ; } } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; int x = Intger . parseInt ( str ) ; System . out . println ( x * x * x ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) { String p = sc . next ( ) ; if ( p = " ABC " ) System.out.println( " ARC " ); else System.out.println( " ABC " ); } }
import java . io . * ; import java . util . * ; public class TaskA { //FastIO io = new FastIO("in.txt"); int N, M; long[][] dp; static long MOD = 1000000007; static long[] FS = new long[1005]; void init(){ FS[0] = 1; for(int i=1; i<1005; i++){ FS[i] = (FS[i-1] * i) % MOD; } } long solve(){ init(); dp = new long[N][N+1]; for(int i=0; i<N; i++){ dp[i][0] = 1; } for(int i=1; i<N; i++){ for(int k=1; k<=N; k++) { int j = i - M; if (j >= 0) { dp[i][k] += dp[i-1][k-1] * 2; if(k - 2 >= 0){ dp[i][k] += dp[i-1][k-2]; } } } } long ans = FS[N], f = -1; for(int k=1; k<=N; k++){ ans += f * dp[N-1][k] * FS[N - k]; f = f * -1; ans %= MOD; } return ans; } public void main() throws Exception { N = io.nextInt(); M = io.nextInt(); io.out(solve() + "\n"); } public static void main(String[] args) throws Exception { TaskA task = new TaskA(); task.main(); } class FastIO { BufferedReader br; StringTokenizer sk; public FastIO(String fname){ try{ File f = new File(fname); if(f.exists()) { System.setIn(new FileInputStream(fname)); } }catch (Exception e){ throw new IllegalArgumentException(e); } br = new BufferedReader(new InputStreamReader(System.in)); } public FastIO(){ br = new BufferedReader(new InputStreamReader(System.in)); } String next(){ while(sk==null || !sk.hasMoreElements()){ try { sk = new StringTokenizer(br.readLine()); }catch (Exception e){ throw new IllegalArgumentException(e); } } return sk.nextToken(); } public int nextInt(){ return Integer.parseInt(next()); } public char nextChar(){ return next().charAt(0); } public long nextLong(){ return Long.parseLong(next()); } public double nextDouble(){ return Double.parseDouble(next()); } public String nextLine(){ String str = ""; try { str = br.readLine(); }catch (Exception e){ e.printStackTrace(); } return str; } public void out(String v){ System.out.print(v); } public void out(int v) { System.out.print(v); } public void out(long v){ System.out.print(v); } public void out(double v) { System.out.print(v); } } }
import java . util . * ; class Main { private int Num , Dis ; private int [ ] Xa , Ya ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Num = sc . nextInt ( ) ; Dis = sc . nextInt ( ) ; for ( int i = 0 ; i < Num ; i ++ ) { Xa [ i ] = sc . nextInt ( ) ; Ya [ i ] = sc . nextInt ( ) ; } int R = 0 ; for ( int k = 0 ; k < Num ; k ++ ) { if ( check ( k ) ) R ++ ; } System . out . println ( " " + R ) ; } private static boolean check ( int i ) { return Math . pow ( Xa [ i ] , 2 ) + Math . pow ( Y [ i ] , 2 ) <= Math . pow ( Dis , 2 ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String [ ] S = new String [ 3 ] ; int y = 700 ; for ( string s = 0 ; s < S . length ; s ++ ) { if ( s [ 0 ] == 'o' ) y += 100 ; if ( s [ 1 ] == 'o' ) y += 100 ; if ( s [ 2 ] == 'o' ) y += 100 ; System . out . println ( 700 + 100 * input ( ) . count ( 'o' ) ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int d , n ; d = sc . nextInt ( ) ; n = sc . nextInt ( ) ; if ( d == 0 ) { System . out . println ( n ) ; } else if ( d == 1 ) { System . out . println ( 100 * n ) ; } else if ( n == 100 ) { if ( d == 0 ) { System . out . println ( n + 1 ) ; } else if ( d == 1 ) { System . out . println ( 100 * n + 100 ) ; } else { System . out . println ( 10000 * n + 10000 ) ; } else { System . out . println ( 10000 * n ) ; } } }
import java . io . * ; class Main { public static void main ( String [ ] args ) { BufferedReader kbd = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int A ; int B ; String txt = " " ; try { txt = kbd . readLine ( ) ; kbd . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } A = Integer . parseInt ( txt . substring ( 0 , txt . indexOf ( " " ) ) . strip ( ) ) ; B = Integer . parseInt ( txt . substring ( txt . indexOf ( " " ) , txt . length ( ) ) . strip ( ) ) ; int [ ] data = { A + B , A - B , A * B } ; System . out . println ( Math . max ( Math . max ( data [ 0 ] , data [ 1 ] ) , data [ 2 ] ) ) ; } }
import java . io . * ; import java . util . * ; public class Exp { // "Main" should be used for most online judges public static void main(String[] args) { Scanner sc = new Scanner(System.in); int r = sc.nextInt(); int g = sc.nextInt(); int b = sc.nextInt(); if ((r * 100 + g * 10 + b) % 4 == 0) System.out.println("YES"); else System.out.printf("NO"); } }
import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; System . out . println ( t >= 30 ? " Yes " : " No " ) ; in . close ( ) ; } }
import java . util . Scanner ; public class test2 { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = a * b ; int d = a + b ; int e = a - b ; if ( c >= d && c >= e ) { System . out . println ( c ) ; } else if ( d >= c && d >= e ) { System . out . println ( d ) ; } else { System . out . println ( e ) ; } } }
import java . util . * ; class Main { public static void main ( String args [ ] ) { int a = 0 , b = 0 , c = 0 ; Scanner s = new Scanner ( System . In ) ; a = s . nextInt ( ) ; b = s . nextInt ( ) ; c = s . nextInt ( ) ; if ( c - 1 <= a + b ) { System . out . println ( b + c ) ; } else { System . out . println ( a + b + 1 ) ; } } }
import java . util . ArrayList ; import java . util . List ; /** * @author ando * */ public class P2001 { public static void main ( String [ ] args ) { int now = 1 ; List < Line > l = new ArrayList < > ( ) ; for ( String line : args [ 0 ] . split ( " \n " ) ) l . add ( new Line ( line . split ( " " ) ) ) ; l . remove ( 0 ) ; java . util . Collections . sort ( l ) ; for ( Line ll : l ) now = ll . transit ( now ) ; System . out . println ( now ) ; //System.out.println(args[0]); } } public class Line implements Comparable<Line> { int hight; int left; int right; public Line(String[] lines) { hight = Integer.valueOf(lines[0]); left = Integer.valueOf(lines[1]); right = Integer.valueOf(lines[2]); } public int transit(int now) { if(now == left) return right; else if(now == right) return left; return now; } @Override public int compareTo(Line o) { if(this.hight == o.hight) return 0; if(this.hight < o.hight) return 1; return -1; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double r = nextDouble ( ) ; double pi = Math . PI ; double a = r * r * pi ; double b = r * 2 * pi ; System . out . printf ( " %f %f " , a , b ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { double r ; String area , rect ; BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; String [ ] strAry = str . split ( " " ) ; r = Doubleeger . parseInt ( strAry [ 0 ] ) ; area = r * r * 3.141592653589 ; rect = 2 * r * 3.141592653589 ; area = String . format ( " %.5f " , r * r * 3.141592653589 ) ; rect = String . format ( " %.5f " , 2 * r * 3.141592653589 ) ; System . out . println ( area + " " + rect ) ; } }
import java . util . * ; class solution { public static void main ( String args [ ] ) { try { Scanner s1 = new Scanner ( System . in ) ; String n = s1 . next ( ) ; String s = n . substring ( 0 , 4 ) ; if ( s . equals ( " YAKI " ) ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } catch ( Exception e ) { } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 String s = sc.nextString(); int counter = 0; if (s[0] == "1") counter++; if (s[1] == "1") counter++; if (s[2] == "1") counter++; System.out.printf(counter); } }
import java . util . * ; impiort java . io . * ; class test { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int min = Math . min ( a , c ) ; int max = Math . max ( b , d ) ; int ans = max - min ; if ( ans < 0 ) { System . out . println ( " 0 " ) ; } else System . out . println ( ans ) ; sc . close ( ) ; } }
import java . util . Scanner ; import java . util . * ; public class smallestToX { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int x = scn . nextInt ( ) ; int n = scn . nextInt ( ) ; int [ ] arr = new int [ n ] ; HashSet < Integer > map = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = scn . nextInt ( ) ; map . add ( arr [ i ] ) ; } int diff = 0 ; while ( true ) { int no = x - diff ; if ( ! map . contains ( no ) ) { System . out . println ( no ) ; return ; } no = x + diff ; if ( ! map . contains ( no ) ) { System . out . println ( no ) ; return ; } diff ++ ; } } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str1 = br . readLine ( ) ; String str2 [ ] = str1 . split ( " " ) ; int a = Integer . parseInt ( Str2 [ 0 ] ) ; int b = integer . parseInt ( str2 [ 1 ] ) ; int c = a * b ; int d = 2 * ( a + b ) ; System . out . println ( c + " " + d ) ; } }
import java . util . * ; import javax . lang . model . util . ElementScanner6 ; /** * test */ public class test { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; if ( s . equals ( " AAA " ) ) { System . out . println ( " No " ) ; } else if ( s . equals ( " BBB " ) ) { System . out . println ( " No " ) ; } else { System . out . println ( s . equals ( " Yes " ) ) ; } } }
import java . util . Scanner ; class A162 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int dig = sc . nextInt ( ) ; int temp ; int flag = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { temp = dig % 10 ; dig = dig / 10 ; if ( temp == 7 ) { flag = flag + 1 ; break ; } } if ( flag == 1 ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long l = sc . nextLong ( ) ; long r = sc . nextLong ( ) ; long tmp = 2018 ; if ( r - l >= 2019 ) { tmp = 0 ; } else { for ( long i = 0 ; i < r ; i ++ ) { for ( long j = i + 1 ; j <= b ; j ++ ) { tmp = Math . min ( tmp , ( i * j ) % 2019 ) ; } } System . out . println ( tmp ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; class atcoder { public static void main ( String [ ] args ) throws IOException { BufferedReader bufferedReader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] s = bufferedReader . readLine ( ) . split ( " " ) ; long n = Long . parseLong ( s [ 0 ] ) , k = Long . parseLong ( s [ 1 ] ) ; long ans = ( long ) Math . ceil ( ( double ) n / 2 ) ; if ( ans >= k ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; class B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int s = stdIn . nextInt ( ) ; String hantei = " No " ; for ( int a = 1 ; a <= 9 ; a ++ ) { for ( int b = 1 ; b <= 9 ; b ++ ) { if ( a * b == s ) { hantei = " Yes " ; } } } System . out . println ( hantei ) ; } } //ミャオ
import java . util . Scanner ; public class { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; int count = 0 ; sc . close ( ) ; for ( int i = 0 ; i < s . length ( ) - 3 ; i ++ ) { for ( int j = i + 3 ; j < s . length ( ) ; j ++ ) { String subStr = s . substring ( i , j ) ; int num = Integer . parseInt ( subStr ) ; if ( num % 2019 == 0 ) { count ++ ; } } } System . out . println ( count ) ; } }
import java . util . * ; public class ABC055_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) , x = 1 ; for ( int i = 1 ; i <= N ; i ++ ) { x = x * i ; } System . out . println ( ( int ) ( x % ( Math . pow ( 10 , 9 ) + 7 ) ) ) ; } }
import java . util . * ; class main { public static long solve ( int arr [ ] , int n ) { long ans [ ] = new long [ n + 1 ] ; ans [ 1 ] = 0 ; ans [ 2 ] = Math . abs ( arr [ 1 ] - arr [ 2 ] ) ; for ( int i = 3 ; i <= n ; i ++ ) { ans [ i ] = Math . min ( Math . abs ( arr [ i ] - arr [ i - 1 ] ) + ans [ i - 1 ] , Math . abs ( arr [ i ] - arr [ i - 2 ] ) + ans [ i - 2 ] ) ; } return ans [ n ] ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int arr [ ] = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } System . out . println ( solve ( arr , n ) ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int x = scan . nextInt ( ) ; boolean a = true ; for ( int i = 1 ; i < x + 1 ; i ++ ) { if ( i % 3 == 0 ) { System . out . print ( " " + i ) ; a = false ; } while ( a ) { if ( i % 10 == 3 ) { System . out . print ( " " + i ) ; a = false ; } else if ( i > 30 ) { i /= 10 ; } else a = false ; } a = true ; } println ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; List < Object > list = new ArrayList < > ( ) ; int finish = 0 ; int N = sc . nextInt ( ) ; int T = sc . nextInt ( ) ; while ( sc . next ( ) != null ) { Map aa = new HashMap ( ) ; // 整数の入力 int i = 0; int c = sc.nextInt(); int t = sc.nextInt(); aa.put(c,t); list.add(aa); i++; finish =i; } String s = "TLE"; for(int i = 1; i<=finish;i++) { } System.out.print(s); }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long A [ ] = new int [ N ] ; for ( int i ; i < N ; ++ i ) { A [ i ] = sc . nextLong ( ) ; } for ( int i ; i < N ; i ++ ) { if ( A [ i ] < ( long ) Math . pow ( 10 , 18 ) ) { int ans *= A [ i ] ; } else { ans = - 1 ; } } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class aoj { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int sum = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { int a = sc . nextInt ( ) ; if ( a < 40 ) { a = 40 ; } sum += a ; } System . out . println ( sum / 5 ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; String [ ] NM = ( scn . nextLine ( ) ) . split ( " " ) ; int N = Integer . valueOf ( NM [ 0 ] ) ; int M = Integer . valueOf ( NM [ 1 ] ) ; String [ ] Am = ( scn . nextLine ( ) ) . split ( " " ) ; int sum = 0 ; int result = 0 ; for ( int i = 0 ; i < M ; i ++ ) { sum += Integer . valueOf ( Am [ i ] ) ; } if ( sum <= N ) { result = N - sum ; } else { result = - 1 ; } System . out . println ( result ) ; }
import java . util . * ; class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) ; char c = s . charAr ( s . length ( ) - 1 ) ; if ( c == '3' ) { System . out . println ( " bon " ) ; } else if ( c == '1' || c == '0' || c == '6' || c == '8' ) { System . out . println ( " pon " ) ; } else { System . out . println ( " hon " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) break ; for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( j % 2 == 0 ) { if ( i % 2 == 0 ) { System . out . printf ( " # " ) ; } else { System . out . printf ( " . " ) ; } else { if ( i % 2 == 0 ) { System . out . printf ( " . " ) ; } else { System . out . printf ( " # " ) ; } } } System . out . printf ( " \n " ) ; } } } }
import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int N = Integer . parseInt ( scanner . nextLine ( ) ) ; int [ ] costs = new int [ N ] ; int [ ] cache = new int [ N ] ; String [ ] c = scanner . nextLine ( ) . split ( " " ) ; for ( int i = 0 ; i < N ; i ++ ) { costs [ i ] = Integer . parseInt ( c [ i ] ) ; cache [ i ] = 1000000 ; } cache [ 0 ] = 0 ; //cache[1] = Math.abs(costs[1] - costs[0]); System.out.println(jump(costs, 2, cache)); return; } private static int jump(int[] costs, int k, int[] cache) { for(int i = 0 ; i < costs.length ; i++) { // for every i - check the next k cells and update if the cost from current cell is better. for(int j = i-1 ; j >= i-k ; j--) { //ith cell of cache will have min of i-jth cell + its cost from coming there. // if it has already lower value, lets keep that as is. if(j >= 0) cache[j] = Math.min(cache[i], cache[j]+Math.abs(costs[j] - costs[i])); } //System.out.println(Arrays.toString(cache)); } return cache[costs.length-1]; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . util . * ; public class Main { static int N , D , money ; static int [ ] prices ; private static int solve ( ) { int answer = 0 ; if ( prices [ 0 ] * 2 > money ) return 0 ; if ( prices [ prices . length - 1 ] + prices [ prices . length - 2 ] <= money ) return prices [ prices . length - 1 ] + prices [ prices . length - 2 ] ; for ( int i = 0 ; i < N - 1 ; i ++ ) { int index = Arrays . binarySearch ( prices , i + 1 , prices . length - i - 1 , money - prices [ i ] ) ; if ( index > i ) return prices [ i ] + prices [ index ] ; index = ~ index - 1 ; if ( index == i ) continue ; answer = Math . max ( prices [ i ] + prices [ index ] , answer ) ; } return answer ; } public static void main ( String args [ ] ) { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] strs = br . readLine ( ) . split ( " , " ) ; N = Integer . parseInt ( strs [ 0 ] ) ; D = Integer . parseInt ( strs [ 1 ] ) ; prices = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) prices [ i ] = Integer . parseInt ( be . readLine ( ) ) ; Arrays . Sort ( prices ) ; for ( int i = 0 ; i < D ; i ++ ) { money = Integer . parseInt ( be . readLine ( ) ) ; System . out . println ( solve ( ) ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 String a = sc.nextInt(); String b = "+"; String c = "-"; Integer takahashi1; String takahashi2; String result; if(b.equals(a)) { System.out.print("+"); }else if(c.equals(a)) { System.out.print("-"); } } }
import java . util . * ; import java . lang . * ; import java . io . * ; import java . util . Scanner ; /* Name of the class has to be "Main" only if the class is public. */ class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; char [ ] chars = s . toCharArray ( ) ; for ( char c : chars ) { if ( c == '1' ) { System . out . print ( 9 ) ; } else { System . out . print ( 1 ) ; } } }
import java . util . * ; public class Main { static int n ; static int [ ] a = new int [ 21 ] ; static int dfs ( int A , int B , int i ) { int x ; int y ; if ( i == n ) return Math . abs ( A - B ) ; x = dfs ( A + a [ i ] , B , i + 1 ) ; y = dfs ( A , B + a [ i ] , i + 1 ) ; return Math . min ( x , y ) ; } public static void main ( String [ ] args ) { try ( Scanner sc = new Scanner ( System . in ) ) { while ( sc . hasNext ( ) ) ｛ n = s .n e xtInt() ; i (n = 0 b eak; f r(i n t i 0 ; i n ; i + ) { a i ] = s .n e xtInt() ; } S stem.o u t.p r intln(d f s(0 , 0 0 ) ; ｝ } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; String qa = sc . nextLine ( ) ; int q = Integer . parseInt ( qa ) ; String [ ] t = new String [ q ] ; for ( int i = 0 ; i < q ; i ++ ) { t [ i ] = sc . nextLine ( ) ; if ( t [ i ] . toCharArray ( ) [ 0 ] == '1' ) { StringBuilder rev = new StringBuilder ( s ) . reverse ( ) . toString ( ) ; s = " " + rev ; } else { char letter = t [ i ] . toCharArray ( ) [ 4 ] ; if ( t [ i ] . toCharArray ( ) [ 2 ] == '1' ) { s = letter + s ; } else { s = s + letter ; } } } System . out . println ( s ) ; } }
import java . util . * ; class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; String str1 = sc . next ( ) ; String moji = str1 . toUpperCase ( ) ; if ( str1 == moji ) { System . out . println ( A ) ; } else { System . out . println ( a ) ; } } }
import java . util . Scanner ; public class Ex { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( a < b ) { System . out . println ( a + " < " + b ) ; } else if ( a > b ) { System . out . println ( a + " > " + b ) ; } else { System . out . println ( a + " = " + b ) ; } sc . close ( ) ; } }
import java . util . * ; import java . util . Scanner ; class GFG { // Function to return the count of // trailing 0s in the given function static int findTrailingZeros(int n) { // If n is odd if ((n & 1) == 1) return 0; // If n is even else { int ans = 0; // Find the trailing zeros // in n/2 factorial n /= 2; while (n != 0) { ans += n / 5; n /= 5; } // Return the required answer return ans; } } // Driver code public static void main (String[] args) { int n; Scanner n= new Scanner(System.in); System.out.println(findTrailingZeros(n)); } }
import java . util . * ; class Abc { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } a = ZahyouAssyuku ( a ) ; boolean flag = false ; int k = 0 ; while ( ! flag ) { k ++ ; int [ ] x = new int [ n ] ; Arrays . fill ( x , 0 ) ; boolean flag2 = false ; for ( int i = 1 ; i < n ; i ++ ) { if ( a [ i - 1 ] >= a [ i ] ) { int j = a [ i ] - 1 ; while ( j >= 0 ) { if ( x [ j ] != k - 1 ) { x [ j ] ++ ; flag2 = true ; break ; } else { x [ j ] = 0 ; } j -- ; } Arrays . fill ( x , a [ i ] , n - 1 , 0 ) ; if ( ! flag2 ) { break ; } } } if ( flag2 ) flag = true ; } System . out . println ( k ) ; } public static int [ ] ZahyouAssyuku ( int [ ] a ) { TreeSet < Integer > set = new TreeSet < > ( ) ; for ( int i = 0 ; i < a . length ; i ++ ) { set . add ( a [ i ] ) ; } Integer [ ] x = set . toArray ( new Integer [ set . size ( ) ] ) ; for ( int i = 0 ; i < a . length ; i ++ ) { a [ i ] = Arrays . binarySearch ( x , a [ i ] ) + 1 ; } return a ; } }
import java . util . * ; public class fun { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; String a = s . next ( ) ; String b = s . next ( ) ; if ( a . equals ( b . substring ( 0 , a . length ( ) ) ) ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . Arrays ; import java . util . * ; public class Solution { //private static Object InputStream; public static void main(String args[]) throws IOException { // Object input; Scanner scan=new Scanner(System.in); int K=scan.nextInt(); int A=scan.nextInt(); int B=scan.nextInt(); boolean t=true; for(int i=A;i<=B;i++){ if(i%K==0){ t=false; break; } } if(t){ System.out.println("NG"); } else{ System.out.println("OK"); } } }
import java . util . * ; public class ProblemA { private static String VOWELS = " ueoai " ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; if ( VOWELS . indexOf ( s ) > 0 ) { System . out . println ( " vowel " ) ; } else { System . out . println ( " consonant " ) ; } } }
import java . util . Scanner ; import java . lang . * ; public class Main { public static void main ( String args [ ] ) { //入力するためのオブジェクトを生成 Scanner scan = new Scanner(System.in); int A = scan.nextInt(); //Aのいる座標 int B = scan.nextInt(); //Bがいる座標 int T = scan.nextInt(); //秒数 int V = scan.nextInt(); //Aの秒速 int W = scan.nextInt(); //Bの秒速 //AとBの位置関係 if(A<=B){ if(A *V * T <= B * V * T ){ System.out.println("Yes"); }else{ System.out.println("No"); } }else{ int B = -(B * T); int A = -(A * T); if(A *V * T >= B * V * T ){ System.out.println("Yes"); }else{ System.out.println("No"); } } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; Long N = sc . nextLong ( ) ; Long ans = 0 ; for ( int i = 1 ; i < N + 1 ; i ++ ) { if ( N % 3 != 0 && N % 5 != 0 ) { ans ++ ; } } System . out . println ( ans ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Matrix_Multiplication_28 { public static void main ( String [ ] args ) throws IOException { BufferedReader input = new BufferedReader ( new InputStreamReader ( System . in ) ) ; // A,B,C?????????????????¨???????±????????????? String first_line = input.readLine(); // ??\??????????´? String[] array_of_lo_col = first_line.split(" "); // ??????A,C????????????????????? int low_n = Integer.parseInt(array_of_lo_col[0]); // ??????A???????????????B????????????????????? int column_or_row_m = Integer.parseInt(array_of_lo_col[1]); // ??????B,C????????????????????? int column_l = Integer.parseInt(array_of_lo_col[2]); // ??????A???????¬?????????? long[][] matrix_A = new long[low_n][column_or_row_m]; // ??????B???????¬?????????? long[][] matrix_B = new long[column_or_row_m][column_l]; // ??????C???????¬?????????? long[][] matrix_C = new long[low_n][column_l]; // ??????C???Ci???????????¨?????????A?????\??????????????°??????????´? for (int low_spot = 0; low_spot < low_n; low_spot++) { // ??????A???????´???\??? String elements_A = input.readLine(); // ??\??????????????????A???????´????array_elements_A???????´? String[] array_elements_A = elements_A.split(" "); // ??????A???????´????????´? for (int column_spot = 0; column_spot < column_or_row_m; column_spot++) { // array_elements_A???????´????????????°??????long?????? long element_A = Long.parseLong(array_elements_A[column_spot]); // ????´??????????A???????´? matrix_A[low_spot][column_spot] = element_A; } } // ??????C???Ci???????????¨?????????B?????\??????????????°??????????´? for (int low_spot = 0; low_spot < column_or_row_m; low_spot++) { // ??????B???????´???\??? String elements_B = input.readLine(); // ??\??????????????????B???????´????array_elements_A???????´? String[] array_elements_B = elements_B.split(" "); // ??????B???????´????????´? for (int column_spot = 0; column_spot < column_l; column_spot++) { // array_elements_B???????´????????????°??????long?????? long element_B = Long.parseLong(array_elements_B[column_spot]); // ????´??????????B???????´? matrix_B[low_spot][column_spot] = element_B; } } // C?????????????´???¨ long Ci = 0; // ??????C???????´? for (int low_spot = 0; low_spot < low_n; low_spot++) { // ??????C?????????????´? for (int column_spot = 0; column_spot < column_l; column_spot++) { // C?????????????´????A????????¨B????????????????????? for (int m_term = 0; m_term < column_or_row_m; m_term++) { // Ci???????´??????????matrixA,B?????????????¶????????????? Ci += matrix_A[low_spot][m_term] * matrix_B[m_term][column_spot]; } // ????´?C???Ci???????´? matrix_C[low_spot][column_spot] = Ci; // ?????? System.out.print(matrix_C[low_spot][column_spot]); //AOJ???????????¨ int remove_blank_last=column_l-1; //???????????????????´????????????????????¶?????????? if(column_spot < remove_blank_last){ System.out.print(" "); } //Ci???????????? Ci=0; } // ???????????? System.out.print(""); } } }
import java . util . * ; public class Main { Scanner scan = new Scanner ( System . in ) ; int num = scan . nextInt ( ) ; int res = num * num * num ; System . out . println ( res ) ; }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . MathContext ; import java . text . BreakIterator ; import java . util . Arrays ; import java . util . StringTokenizer ; public class MasonsMark { static int n , m ; static char [ ] [ ] a ; static boolean [ ] [ ] ok ; static int [ ] dx = new int [ ] { - 1 , 0 , 1 , 0 , - 1 , - 1 , 1 , 1 } ; static int [ ] dy = new int [ ] { 0 , 1 , 0 , - 1 , - 1 , 1 , - 1 , 1 } ; static int A , B , C ; public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; PrintWriter pw = new PrintWriter ( System . out ) ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; int n = Integer . parseInt ( st . nextToken ( ) ) ; int m = Integer . parseInt ( st . nextToken ( ) ) ; if ( n % 2 == 1 ) { for ( int i = 1 ; i <= m ; i ++ ) { pw . println ( i + " " + ( n - i + 1 ) ) ; } } else { int odd = ( m + 1 ) / 2 ; for ( int i = 1 ; i <= odd ; i ++ ) { pw . println ( i + " " + ( n - i + 1 ) ) ; } for ( int i = odd + 1 ; i <= m ; i ++ ) { pw . println ( i + " " + ( n - i ) ) ; } } pw . flush ( ) ; } }
import java . util . * ; import java . io . * ; public class Solution { public static void main ( String [ ] args ) throws IOException { // Solution sol = new Solution(); BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st= new StringTokenizer(br.readLine()); int N = Integer.parseInt(st.nextToken()); int M = Integer.parseInt(st.nextToken()); System.out.println((N*(N-1)+M*(M-1))/2); } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigInteger ; import java . util . Scanner ; import java . util . StringTokenizer ; public class Main { public static void main ( String [ ] args ) throws Exception { // // Scanner sc = new Scanner(System.in); // BigInteger n = sc.nextBigInteger(); // boolean flag=solve(n); // if(flag==true) // System.out.println("Yes"); // else // System.out.println("No"); BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); StringTokenizer st = new StringTokenizer(br.readLine()); int max=-1; int sum=0; for(int i=0; i<n; i++){ int k = Integer.parseInt(st.nextToken()); if(i==0) { max=k; } else { sum+=k>=max?0:max-k; k+=k>=max?0:max-k; max=Math.max(max, k); } } System.out.println(sum); } private static boolean solve(BigInteger n) { long sum=0; while(n>BigInteger.valueOf(0)) { sum+=n%10; n=n/10; } return sum%9==0; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] a ) throws IOException { String strLine = " " ; BufferedReader stdReader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int i = 0 ; int max = 50 ; int [ ] tempInt = new int [ 2 ] ; while ( i <= max && ( ( strLine = stdReader . readLine ( ) ) != null ) ) { //??????????????§????????? String[] temp = strLine.split(" ",-10); tempInt[0] =Integer.parseInt(temp[0]); tempInt[1] = Integer.parseInt(temp[1]); int maxYakusu = 1; for(int k = tempInt[1]-1 ; k > 1 ; k--){ if((tempInt[0]%k == 0)&&(tempInt[1]%k == 0)){ tempInt[0] = tempInt[0]/k; tempInt[1] = tempInt[1]/k; maxYakusu = maxYakusu * k; } } //????°???¬?????°????±????????????????????´??????? int maxBaisu = maxYakusu * temp1 * temp2; System.out.println(maxYakusu+" "+maxBaisu); i++; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Boolean b = false ; int n = Integer . parseInt ( sc . next ( ) ) ; String pattern = " [1-9] " ; Pattern p = Pattern . compile ( pattern ) ; for ( int i = 1 ; i < 10 ; i ++ ) { if ( n % i == 0 ) { if ( p . matcher ( String . value ( n / i ) ) . find ( ) ) { System . out . println ( " Yes " ) ; b = true ; } if ( b ) break ; } } if ( ! b ) System . out . println ( " No " ) ;
import java . util . LinkedList ; import java . util . Scanner ; public class P2 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; LinkedList < String > name = new LinkedList < String > ( ) ; LinkedList < Integer > time = new LinkedList < Integer > ( ) ; int length = scanner . nextInt ( ) ; int q = scanner . nextInt ( ) ; int qTime = 0 ; for ( int i = 0 ; i < length ; i ++ ) { name . add ( scanner . next ( ) ) ; time . add ( scanner . nextInt ( ) ) ; } while ( ! name . isEmpty ( ) ) { if ( time . peek ( ) <= q ) { System . out . print ( name . poll ( ) + " " ) ; qTime = qTime + time . poll ( ) ; System . out . println ( qTime ) ; } else { name . add ( name . poll ( ) ) ; time . add ( time . poll ( ) - q ) ; qTime = qTime + q ; } } } }
import java . util . Arrays ; class Main { public static void main ( String [ ] a ) { String [ ] s = new String [ ] ; Scanner sc = new Scanner ( System . in ) ; for ( int c = 0 ; c < 10 ; c ++ ) { s [ c ] = sc . nextLine ( ) ; } Arrays . sort ( s ) ; System . out . print ( String . format ( " %d \% d \% d " , s [ 9 ] , s [ 8 ] , s [ 7 ] ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Map < Integer , String > map = new HashMap < > ( ) ; // Scannerクラスのインスタンスを作成 // 引数で標準入力System.inを指定する Scanner scanner = new Scanner(System.in); int sunuke_value = scanner.nextInt(); int okashi_kind = scanner.nextInt(); while (sc.hasNextLine()) { int sunuke_has = scanner.nextInt(); int okashi_has = scanner.next(); map.put(sunuke_has, okashi_has); } System.out.println(sunuke_value - map.keySet().size()); } }
import java . util . * ; public class D { void run ( ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String mid = " " ; if ( s . length ( ) >= 2 ) { mid = s . substring ( 1 , s . length ( ) - 1 ) ; } int q = sc . nextInt ( ) ; StringBuffer sbHead = new StringBuffer ( 1000000 ) ; sbHead . append ( s . charAt ( 0 ) ) ; StringBuffer sbLast = new StringBuffer ( 1000000 ) ; if ( s . length ( ) != 1 ) { sbLast . append ( s . charAt ( s . length ( ) - 1 ) ) ; } // debug(sbHead, sbLast); boolean isHead = true; for (int i = 0; i < q; i++) { // debug(sbHead, sbLast); int t = sc.nextInt(); if (t == 1) { isHead = !isHead; continue; } int f = sc.nextInt(); char c = sc.next().charAt(0); if ((f == 1 && isHead) || (f == 2 && !isHead)) { sbHead.append(c); } else { sbLast.append(c); } } StringBuffer ans = sbHead.reverse().append(mid).append(sbLast); if (isHead) { System.out.println(ans.toString()); } else { System.out.println(ans.reverse().toString()); } } void debug(Object... os) { System.err.println(Arrays.deepToString(os)); } public static void main(String[] args) { new D().run(); } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( new BufferedReader ( new InputStreamReader ( System . in ) ) ) ; int n = sc . nextInt ( ) ; sc . nextLine ( ) ; int [ ] L = toArray ( sc . nextLine ( ) ) ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = L [ i ] ; for ( int j = i + 1 ; j < n ; j ++ ) { int b = L [ j ] ; for ( int k = j + 1 ; k < n ; k ++ ) { int c = L [ k ] ; if ( a + b > c && a + c > b && b + c > a ) res ++ ; } } } System . out . println ( res ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int [ ] l = new int [ m ] ; int [ ] r = new int [ m ] ; for ( int i = m - 1 ; i >= 0 ; i -- ) { l [ i ] = in . nextInt ( ) ; r [ i ] = in . nextInt ( ) ; } int [ ] size = new int [ n ] ; Arrays . fill ( size , 1 ) ; long [ ] ans = new long [ m ] ; DSU d = new DSU ( n ) ; for ( int i = 0 ; i < m ; i ++ ) if ( d . find ( l [ i ] ) != d . find ( r [ i ] ) ) { int a = size [ d . find ( l [ i ] ) ] ; int b = size [ d . find ( r [ i ] ) ] ; ans [ m - 1 - i ] = a * b ; d . union ( l [ i ] , r [ i ] ) ; size [ d . find ( l [ i ] ) ] = a + b ; } for ( int i = 1 ; i < m ; i ++ ) { ans [ i ] += ans [ i - 1 ] ; System . out . println ( ans [ i ] ) ; } in . close ( ) ; } public static class DSU { int [ ] set ; DSU ( int n ) { Arrays . fill ( set = new int [ n ] , - 1 ) ; } int find ( int i ) { return set [ i ] < 0 ? i : ( set [ i ] = find ( set [ i ] ) ) ; } boolean union ( int a , int b ) { if ( ( a = find ( a ) ) == ( b = find ( b ) ) ) return false ; if ( set [ a ] == set [ b ] ) set [ a ] -- ; if ( set [ a ] <= set [ b ] ) set [ b ] = a ; else set [ a ] = b ; s -- ; return true ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { // Your code here! Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int[] colors = new int[9]; while (n-- > 0) { int rate = sc.nextInt(); int colorNumber = getColor(rate); colors[colorNumber]++; } int min = 0; int max = 0; for (int i = 0; i < 8; i++) { if (colors[i] > 0) min++; } if (min == 0) { min = 1; max = Math.min(8, colors[8]); } } else { max = Math.min(8, min + colors[8]); } System.out.println(min + " " + max); } public static int getColor(int rate) { if (rate < 400) { return 0; } else if (rate < 800) { return 1; } else if (rate < 1200) { return 2; } else if (rate < 1600) { return 3; } else if (rate < 2000) { return 4; } else if (rate < 2400) { return 5; } else if (rate < 2800) { return 6; } else if (rate < 3200) { return 7; } return 8; } }
import java . io . * ; import java . util . ArrayList ; import java . util . StringTokenizer ; class Main { static PrintWriter out ; static BufferedReader br ; static class Dictionary { ArrayList < String > array = new ArrayList < String > ( ) ; void insert ( String str ) { array . add ( str ) ; } boolean find ( String str ) { return ( array . indexOf ( str ) < 0 ) ? false : true ; } } public static void main ( String [ ] args ) throws IOException { out = new PrintWriter ( System . out ) ; br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; long start = System . currentTimeMillis ( ) ; solve ( ) ; long end = System . currentTimeMillis ( ) ; //out.println(end-start+"ms"); out.flush(); } private static void solve(){ String line=""; while((line=br.readLine())!=null&&!line.isEmpty()){ int n=Integer.parseInt(line); Dictionary d=new Dictionary(); for(int i=0;i<n;i++){ StringTokenizer st=new StringTokenizer(br.readLine()); String command=st.nextToken(); String str=st.nextToken(); if("insert".equals(str)){ d.insert(str); } if("find".equals(str)){ if(d.find(str)) out.println("yes"); else out.println("no"); } } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new java . util . Scanner ( System . in ) ; int a = scan . nextInt ( ) ; String op = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int x ; for ( int i = 0 ; i < - 20000 ; i ++ ) { if ( op == " + " ) { x = a + b ; } else if ( op == " - " ) { x = a - b ; } else if ( op == " * " ) { x = a * b ; } else if ( op == " / " ) { x = a / b ; } else if ( op == " ? " ) { break ; } System . out . println ( x ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . next ( ) ; Char s [ ] = new char [ 200 ] ; char [ ] s = str . toCharArray ( ) ; if ( s [ 2 ] == s [ 3 ] && s [ 4 ] == s [ 5 ] ) { System . out . print ( " Yes " ) ; } else { System . out . print ( " No " ) ; } } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . util . Arrays ; import java . util . StringJoiner ; public class Main { private static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; public static void main ( String [ ] args ) throws Exception { int n = Integer . parseInt ( br . readLine ( ) ) ; int [ ] array = Arrays . stream ( br . readLine ( ) . split ( " " ) ) . mapToInt ( Integer :: parseInt ) . toArray ( ) ; trace ( array ) ; for ( int i = 1 ; i < n ; i ++ ) { int v = array [ i ] ; int j = i - 1 ; while ( j >= 0 && array [ j ] > v ) { array [ j + 1 ] = array [ j ] ; j -- ; } array [ j + 1 ] = v ; javascript : void ( 0 ) trace ( array ) ; } System . out . println ( ) ; } public static void trace ( int [ ] array ) { StringJoiner sj = new StringJoiner ( " " ) ; Arrays . stream ( array ) . forEach ( iv -> sj . add ( String . valueOf ( iv ) ) ) ; System . out . println ( sj . toString ( ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . next ( ) ) ; boolean result = false ; if ( n <= 81 ) { for ( int i = 1 ; i <= 9 && ! result ; i ++ ) { for ( int j = 1 ; j <= 9 && ! result ; j ++ ) { if ( n == i * j ) { result = true ; } } } } System . out . println ( result ? " Yes " : " No " ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; long n = scanner . nextLong ( ) ; long k = scanner . nextLong ( ) ; long a = n % k ; long b = k - a ; if ( a > b ) a = b ; System . out . println ( a ) ; }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; var x = sc . nextInt ( ) ; var y = sc . nextInt ( ) ; if ( K >= 10 ) { var A = y ; } else { var a = 10 - x ; var b = 100 * a ; A = y + b ; } System . out . println ( A ) ; } }
import java . io . * ; import java . util . * ; import java . lang . * ; public class atcoder_160A { static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; } String next ( ) { while ( st == null || ! st . hasMoreElements ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } return st . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double . parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = " " ; try { str = br . readLine ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return str ; } } public static void main ( String [ ] args ) { FastReader ob = new FastReader ( ) ; long x = ob . nextLong ( ) ; long ans = ( x / 500 ) * 1000 + ( ( x % 500 ) / 5 ) * 5 ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { test2 ( ) ; } private static void test_mine ( ) { Scanner scan = new Scanner ( System . in ) ; String s = scan . next ( ) ; int count = 0 ; if ( s . charAt ( 1 ) == 'S' ) { if ( s . charAt ( 0 ) == 'R' || s . charAt ( 2 ) == 'R' ) count = 1 ; else count = 0 ; } else { if ( s . charAt ( 0 ) == 'R' ) { if ( s . charAt ( 2 ) == 'R' ) { count = 3 ; } else { count = 2 ; } } else if ( s . charAt ( 2 ) == 'R' ) { if ( s . charAt ( 0 ) == 'R' ) { count = 3 ; } else { count = 2 ; } } else count = 1 ; } System . out . println ( count ) ; } private static void test_ans ( ) { Scanner scan = new Scanner ( System . in ) ; String s = scan . next ( ) ; boolean p = s . charAt ( 0 ) == 'R' ; boolean q = s . charAt ( 1 ) == 'R' ; boolean r = s . charAt ( 2 ) == 'R' ; int count = 0 ; if ( p && q && r ) count = 3 ; else if ( ( p && q ) || ( q && r ) ) count = 2 ; else if ( p || q || r ) count = 1 ; else count = 0 ; System . out . println ( count ) ; } }
import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferdReader input1 = new BufferedReader ( new InpputStreamReader ( System . in ) ) ; String input2 = input1 . readLine ( ) ; String [ ] fac = input2 . split ( " \s + " ) ; int a = ( int ) fac [ 0 ] ; int b = ( int ) fac [ 1 ] ; int ab = a * b ; int syu = 2 * ( a + b ) ; fac [ 0 ] = ( String ) ab ; fac [ 1 ] = ( String ) syu ; for ( String w : fac ) { System . out . println ( w + " \s + " ) ; } } }
import java . util . Scanner ; import java . util . LinkedList ; public class Main { public static void main ( String args [ ] ) { run ( ) ; } static void run ( ) { Scanner scan = new Scanner ( System . in ) ; int n , q ; int count ; int timeCount ; count = 0 ; timeCount = 0 ; n = scan . nextInt ( ) ; q = scan . nextInt ( ) ; String [ ] nameAns = new String [ n ] ; int [ ] timeAns = new int [ n ] ; LinkedList < String > name = new LinkedList ( ) ; LinkedList < Integer > time = new LinkedList ( ) ; for ( int i = 0 ; i < n ; i ++ ) { name . offer ( scan . next ( ) ) ; time . offer ( scan . nextInt ( ) ) ; } for ( ; ; ) { if ( time . peek ( ) - q <= 0 ) { nameAns [ count ] = name . poll ( ) ; timeCount += time . poll ( ) ; timeAns [ count ] = timeCount ; count ++ ; } else { name . offer ( name . poll ( ) ) ; time . offer ( time . poll ( ) - q ) ; timeCount += q ; } if ( count == n ) break ; } for ( int i = 0 ; i < n ; i ++ ) { System . out . println ( nameAns [ i ] + " " + timeAns [ i ] ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int i ; for ( i = 1 ; i < N ; i ++ ) { int pow = pow * i ; double ans = ( double ) pow % ( Math . pow ( 10.0 , 9.0 ) + 7.0 ) ; } System . out . println ( ( int ) ans ) ; } }
import java . io . * ; public class Exercise { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int x = Integer . parseInt ( br . readLine ( ) ) ; System . out . println ( x * x * x ) ; } }
import java . util . * ; public class A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int [ ] a = new int [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { a [ i ] = scan . nextInt ( ) ; } for ( int j = 0 ; j < 5 ; j ++ ) { if ( a [ j ] == 0 ) { System . out . println ( j ) ; return ; } } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; double r = scan . nextDouble ( ) ; double aoac = r * r * Math . PI ; double cf = r + r * Math . PI ; String after = String format ( " %.16f " , aoac ) ; String str = String format ( " %.16f " , cf ) ; System . out . println ( after + " " , str ) ; } }
import java . util . ArrayList ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; public class MainC { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int cost = scanner . nextInt ( ) ; int numDigits = scanner . nextInt ( ) ; boolean [ ] badDigits = new boolean [ 10 ] ; for ( int i = 0 ; i < numDigits ; i ++ ) { int badDigit = scanner . nextInt ( ) ; badDigits [ badDigit ] = true ; } // we can have possible change of 1 to 100,000 // In case we can't pay the initial amount with x digits we pad one more digit. for (int change=cost; change<100000; change++) { // give up on change amount if she hates a digit int currChange = change; while (currChange > 0) { int currDigit = currChange % 10; if (badDigits[currDigit]) break; else { currChange /= 10; } } // currChange = 0 OR we had a bad digit if (currChange == 0) { System.out.println(change); break; } } scanner.close(); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . out . println ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) - 1 ; } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc . nextInt ( ) ; } int [ ] c = new int [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { c [ i ] = sc . nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += b [ a [ i ] ] ; if ( a [ i ] == a [ i - 1 ] + 1 ) { sum += c [ a [ i ] ] ; } } System . out . println ( sum ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String dofw = sc . next ( ) ; System . out . println ( 7 - dnum ( dofw ) ) ; } public static int dnum ( String day ) { String [ ] dsofw = { " SUN " , " MON " , " TUE " , " WED " , " THU " , " FRI " , " SAT " } ; for ( int i = 0 ; i < 7 ; i ++ ) { if ( day == dsodw [ i ] ) { return i ; } } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; Integer p [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { p [ i ] = sc . nextInt ( ) ; } if ( n == 0 ) { System . out . print ( x ) ; return ; } List < Integer > list = Arrays . asList ( p ) ; int r = 0 ; for ( int i = 0 ; i < 100 ; i ++ ) { r = x - i ; if ( ! list . contains ( r ) ) { System . out . print ( r ) ; return ; } r = x + i ; if ( ! list . contains ( r ) ) { System . out . print ( r ) ; return ; } } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; String s = stdIn . next ( ) ; char [ ] charArray = s . toCharArray ( ) ; for ( int i = 0 ; i < charArray . length ; i ++ ) { for ( int j = charArray . length - 1 ; i < j ; j -- ) { if ( charArray [ i ] == charArray [ j ] ) { no ( ) ; } } } yes ( ) ; } static void yes ( ) { System . out . println ( " yes " ) ; } static void no ( ) { System . out . println ( " no " ) ; }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int K = sc . nextInt ( ) ; String S = sc . next ( ) ; if ( S . length ( ) > K ) { System . out . plintln ( S . substring ( 1 , K ) + " ... " ) ; } else { System . out . plintln ( S ) ; } } }
import java . util . * ; public class j5A { public static void main ( String [ ] args ) { int i1 , i2 ; Scanner sc = new Scanner ( System . in ) ; i1 = sc . nextInt ( ) ; i2 = sc . nextInt ( ) ; for ( int i = 0 ; i < i1 ; i ++ ) { for ( int j = 0 ; j < i2 ; j ++ ) System . out . print ( " # " ) ; System . out . println ( " " ) ; } } }
import java . util . * ; public class main { public static void main ( String [ ] args ) { Scanner scan1 = new Scanner ( System . in ) ; int num = scan1 . nextInt ( ) ; String res = " No " ; for ( int i = 0 ; i < 3 ; i ++ ) { if ( ( num / ( int ) Math . pow ( 10 , i ) ) % 10 == 7 ) { res = " Yes " ; break ; } } System . out . println ( res ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int k = scan . nextInt ( ) ; int ans = dfs ( n , k ) ; System . out . println ( ans ) ; } public static int dfs ( int a , int b ) { int temp = Math . abs ( a - b ) ; if ( temp < a ) { a = temp ; dfs ( a , b ) ; } else { return a ; } retrun 0 ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int max = 1 ; for ( int i = 0 ; i < N ; i ++ ) { max = 2 * * i ; if ( max > N ) { break ; } } max = max / 2 ; System . out . println ( max ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 入力 int a = sc.nextInt(); ArrayList<Integer> list = new ArrayList<>(); double result = 0; int i; for (i = 0; i < a; i++){ list.add(sc.nextInt()); } Arrays.sort(list); result = list.get(0); for(i = 1; i < a; i++){ result = (result + list.get(i))/2.0; } System.out.println(result); } }
import java . util . Scanner ; class Rp1ABC098A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int max = a + b ; if ( ( a - b ) > max ) max = a - b ; if ( ( a * b ) > max ) max = a * b ; System . out . println ( max ) ; } }
import java . util . Scanner ; public class Kako124 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int sum ; if ( A <= B - 1 ) { sum = 2 * B - 1 ; } else if ( A < B + 1 && A > B - 1 ) { sum = A + B ; } else { sum = 2 * A + 1 ; } System . out . println ( sum ) ; } }
import java . math . BigInteger ; import java . util . Scanner ; public class SubMain { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; BigInteger a , b , c ; while ( n -- != 0 ) { a = sc . nextBigInteger ( ) ; b = sc . nextBigInteger ( ) ; c = a . add ( b ) ; if ( c . toString ( ) . length ( ) > 80 ) { System . out . println ( " overflow " ) ; } else { System . out . println ( c ) ; } } } }
import java . util . Scanner ; class Rp1ABC093 { static public void main ( String args [ ] ) { String S ; Scanner sc = new Scanner ( System . in ) ; if ( S . equals ( abc ) ) ; ( S . equals ( bca ) ) ; ( S . equals ( cba ) ) ; ( S . equals ( acb ) ) ; ( S . equals ( bac ) ) ; ( S . equals ( cab ) ) ; System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import java . util . * ; public class Main { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { String [ ] words = sc . nextLine ( ) . split ( " " ) ; TreeMap < String , Integer > dic = new TreeMap < String , Integer > ( ) ; String mode = " " , longest = " " ; int max = 0 , maxlen = 0 ; for ( int i = 0 ; i < words . length ; i ++ ) { int cnt = 1 ; String key = words [ i ] ; if ( dic . containsKey ( key ) ) { cnt = dic . get ( words [ i ] ) ; //dic.remove(words[i]); } dic.put(key, ++cnt); if(max < cnt) { max = cnt; mode = key; } if(maxlen < key.length()) { maxlen = key.length(); longest = key; } } System.out.println(mode + " " + longest); }
import java . util . Scanner ; public class p0019 { public p0019 ( ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int t = 1 ; while ( n > 1 ) { t *= n -- ; } System . out . println ( t ) ; } public static void main ( String [ ] args ) { p0019 test = new p0019 ( ) ; } }
import util . java . Scanner ( ) ; public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int N = scn . nextInt ( ) ; int M = scn . nextInt ( ) ; int [ ] a = scn . nextInt ( ) ; int sum = 0 ; int sum = sum + a [ ] ; scn . close ( ) ; if ( a [ ] < sum / 4 * M ) { System . out . println ( " No " ) ; } else { System . out . println ( " Yes " ) ; } } }
import java . util . Scanner ; public class Solution { public static void main ( String [ ] args ) { Scanner key = new Scanner ( System . in ) ; int x = key . nextInt ( ) ; int y = key . nextInt ( ) ; int z = key . nextInt ( ) ; int temp = 0 ; temp = x ; x = y ; y = temp ; temp = x ; x = z ; z = temp ; System . out . println ( x + " " + y + " " + z ) ; } }
import java . util . Scanner ; public class Main ( ) { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; System . out . println ( gcd ( a , b ) ) ; } public static int gcd ( int x , int y ) { if ( x % y == 0 ) { return y ; } else { return gcd ( y , x % y ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int [ ] [ ] arr = new int [ n ] [ 3 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] [ 0 ] = s . nextInt ( ) ; arr [ i ] [ 1 ] = s . nextInt ( ) ; arr [ i ] [ 2 ] = s . nextInt ( ) ; } int [ ] [ ] dp = new int [ n ] [ 3 ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; i < 3 ; j ++ ) { if ( i == 0 ) { dp [ i ] [ j ] = arr [ i ] [ j ] ; } else { if ( j == 0 ) dp [ i ] [ j ] = Math . max ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) + arr [ i ] [ j ] ; else if ( j == 1 ) dp [ i ] [ j ] = Math . max ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) + arr [ i ] [ j ] ; else dp [ i ] [ j ] = Math . max ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 1 ] ) + arr [ i ] [ j ] ; } } int max = Integer . MIN_VALUE ; for ( int i = 0 ; i < 3 ; i ++ ) { max = Math . max ( dp [ n - 1 ] [ i ] , max ) ; } System . out . println ( max ) ; } }
import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . util . * ; import java . util . concurrent . * ; public class Result { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; long x = s . nextLong ( ) ; long fivehndrd = x / 500 ; x = x - fivehndrd * 500 ; long five = x / 5 ; System . out . println ( fivehndrd * 1000 + five * 5 ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int [ ] check = new int [ 3 ] ; check [ 0 ] = int A = scan . nextInt ( ) ; check [ 1 ] = int B = scan . nextInt ( ) ; check [ 2 ] = int C = scan . nextInt ( ) ; int count_5 = 0 ; int count_7 = 0 ; for ( int i = 0 ; i < check . length ; i ++ ) { if ( check [ i ] == 5 ) { count_5 ++ ; } else if ( check [ i ] == 7 ) { count_7 ++ ; } check [ i ] } if ( count_5 == 2 && count_7 == 1 ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; if ( N . charAt ( 0 ) = 7 || N . charAt ( 1 ) = 7 || N . charAt ( 2 ) = 7 ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; class main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( ( a * b ) % 2 == 0 ) System . out . println ( " Even " ) ; else System . out . println ( " Odd " ) ; } }
import java . util . * ; public class Main { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int A = sc . nextInt ( ) ; for ( int i = 1 ; i < 10 ; i ++ ) { if ( A % i == 0 ) { System . out . println ( 'Yes' ) ; return ; } } System . out . println ( 'No' ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; for ( int i = 0 ; i < n ; i += 2 ) { System . out . print ( s . charAt ( i ) ) ; } System . out . println ( " " ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; //総商品数 int m = sc.nextInt(); //選びたい商品数 int[] param = new int[n]; long sum1 = 0; //総得票数 int sum2 = 0; //選ぶことができる商品数 //全ての商品の票数を入力する for(int i = 0 ; i<n ; i++){ param[i] = sc.nextInt(); sum1 += param[i]; } //全ての票数と条件とを照らし合わせる for(int i=0 ; i<n ; i++){ if( (param[i] =(sum1/(4*m))) || (param[i] >(sum1/(4*m)))){ sum2++; } } //選ぶことができるかどうかを確かめる if(sum2>=m){ System.out.println("Yes"); }else{ System.out.println("No"); } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int n = stdIn . nextInt ( ) ; int [ ] A = new int [ n ] ; int i ; for ( i = 0 ; i < n ; i ++ ) A [ i ] = stdIn . nextInt ( ) ; printArray ( A , n ) ; int j , key ; for ( i = 1 ; i < n - 1 ; i ++ ) { key = A [ i ] ; j = i - 1 ; while ( j >= 0 && A [ j ] > key ) { A [ j + 1 ] = A [ j ] ; j -- ; } A [ j ] = key ; printArray ( A , n ) ; } } public static void printArray ( int [ ] array , int num ) { int a ; for ( a = 0 ; a < ( num - 1 ) ; a ++ ) System . out . print ( array [ a ] + " " ) ; System . out . println ( a [ num - 1 ] ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner scanner = new Scanner ( System . in ) ; int N = Integer . parseInt ( scanner . nextLine ( ) ) ; //total for(int a=0; a<=25; a++){ for(int b=0; b<=14; b++){ if((4*a + 7*b) == N){ System.out.println('yes'); break; } } } System.out.println('no'); } }
import java . util . * ; class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; System . out . println ( ( a / b ) + " " + ( a % b ) + " " ( ( double ) a / ( double ) b ) ) ; } }
import java . util . Scanner ; public class sort { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int x ; if ( b >= c ) { x = c ; c = b ; b = x ; } if ( a > b ) { x = b ; b = a ; a = x ; if ( b > c ) { x = c ; c = b ; b = x ; } } System . out . printf ( " %d %d %d \n " , a , b , c ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class MAin { public static void main ( String [ ] args ) throws IOException { try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ) { String in = br . readLine ( ) ; String chr [ ] = in . split ( " " ) ; int a = Integer . parseInt ( chr [ 0 ] ) ; int b = Integer . parseInt ( chr [ 1 ] ) ; int c = Integer . parseInt ( chr [ 2 ] ) ; System . out . println ( a + b + c - ( Math . max ( a , Math . max ( b , c ) ) ) ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int ans = k ; for ( int i = 0 ; i < n - 1 ; i ++ ) { ans *= ( k - 1 ) } System . out . println ( ans ) ; } }
import java . util . Scanner ; class main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int x ; x = scan . nextInt ( int x ) ; x = x * x * x ; System . out . println ( y ) ; } }
import java . io . * ; import java . util . * ; class Main { static final long MOD = 1_000_000_007 ; // 10^9+7 static final int MAX = 2_147_483_646; // intMax static final int INF = 1_000_000_000; // 10^9 public static void main(String[] args) throws Exception { char[] s = new Scanner(System.in).next().toCharArray(); int[] arr = {0,0}; for(char c : s){ if(c == '1')arr[1]++; else arr[0]++; } System.out.println(2*Math.min(arr[0],arr[1])); saori.close(); } } class hayami implements Closeable { private final InputStream in = System.in; private final byte[] hayami = new byte[1024]; private int Hayami = 0; private int saori = 0; private boolean HayamiSaori() { if (Hayami < saori) { return true; }else{ Hayami = 0; try { saori = in.read(hayami); } catch (IOException e) { e.printStackTrace(); } if (saori <= 0) { return false; } } return true; } private int SaoriHayami() { if (HayamiSaori()) { return hayami[Hayami++]; }else{ return -1; } } private static boolean hayami_saori(int hayami) { return 33 <= hayami && hayami <= 126; } public boolean hayamisaori() { while(HayamiSaori() && !hayami_saori(hayami[Hayami])) Hayami++; return HayamiSaori(); } public String nextHayami() { if (!hayamisaori()) throw new NoSuchElementException(); StringBuilder hayamin = new StringBuilder(); int saori = SaoriHayami(); while(hayami_saori(saori)) { hayamin.appendCodePoint(saori); saori = SaoriHayami(); } return hayamin.toString(); } public long saorihayami() {//nextLong if (!hayamisaori()) throw new NoSuchElementException(); long hayami = 0; boolean misao = false; int saori = SaoriHayami(); if (saori == '-') { misao = true; saori = SaoriHayami(); } if (saori < '0' || '9' < saori) { throw new NumberFormatException(); } while(true){ if ('0' <= saori && saori <= '9') { hayami *= 10; hayami += saori - '0'; }else if(saori == -1 || !hayami_saori(saori)){ return misao ? -hayami : hayami; }else{ throw new NumberFormatException(); } saori = SaoriHayami(); } } public int saori_hayami() {//nextInt long hayami = saorihayami(); if (hayami < Integer.MIN_VALUE || hayami > Integer.MAX_VALUE) throw new NumberFormatException(); return (int) hayami; } public double Hayamin() { //nextDouble return Double.parseDouble(nextHayami()); } public void close() { try { in.close(); } catch (IOException e) { } } }
import java . io . * ; import java . util . * ; class Main { public static void main ( String ar [ ] ) { Scanner sc = new Scanner ( System . in ) ; String ans = sc . readLine ( ) ; int q = sc . nextInt ( ) ; int k = 1 , t = 0 ; for ( int i = 0 ; i < q ; i ++ ) { t = sc . nextInt ( ) ; if ( t == 1 ) k = k * ( - 1 ) ; else { int f = sc . nextInt ( ) - 1 ; if ( f == 0 ) f = - 1 ; String c = sc . next ( ) ; f = f * k ; if ( f == 1 ) ans = ans + c ; else ans = c + ans ; } } if ( k == - 1 ) { StringBuffer sb = new StringBuffer ( ans ) ; sb . reverse ( ) ; } System . out . println ( sb ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String sd = scan . next ( ) ; String t = scan . next ( ) ; scan . close ( ) ; for ( int i = 0 ; i < sd . length ( ) ; i ++ ) { for ( int j = 0 ; j < t . length ( ) && i + j < sd . length ( ) ; j ++ ) { if ( sd . charAt ( i + j ) != t . charAt ( j ) && sd . charAt ( i + j ) != '?' ) break ; if ( j == t . length ( ) - 1 ) { System . out . println ( makeS ( sd , t , i ) ) ; return ; } } } System . out . println ( " UNRESTORABLE " ) ; } public static String makeS ( String sd , String t , int i ) { System . out . println ( t ) ; char [ ] ans = new char [ sd . length ( ) ] ; for ( int j = 0 ; j < i ; j ++ ) ans [ j ] = sd . charAt ( j ) == '?' ? 'a' : sd . charAt ( j ) ; for ( int j = 0 ; j < t . length ( ) ; j ++ ) ans [ i + j ] = t . charAt ( j ) ; for ( int j = t . length ( ) + i ; j < sd . length ( ) ; j ++ ) ans [ j ] = sd . charAt ( j ) == '?' ? 'a' : sd . charAt ( j ) ; return new String ( ans ) ; } }
import java . util . Scanner ; public class ABC115_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int N = scan . nextInt ( ) ; scan . close ( ) ; //D=25 なら Christmas, D=24 なら Christmas Eve, D=23 なら Christmas Eve Eve, D=22 なら Christmas Eve Eve Eve if(N==25) { System.out.println("Christmas"); } if(N==24) { System.out.println("Christmas Eve"); } if(N==23) { System.out.println("Christmas Eve Eve"); } if(N==22) { System.out.println("Christmas Eve Eve Eve"); } } }
import java . io . * ; public class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader in = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( in . readLine ( ) ) ; int a = Integer . parseInt ( st . nextToken ( ) ) ; int b = Integer . parseInt ( st . nextToken ( ) ) ; System . out . println ( a * b ) ; } }
import java . util . * ; public class Main { public long d ( long num ) { long ans = 0 ; while ( true ) { long i = 1 ; if ( num - i >= 0 ) { ans ++ ; } else { break ; } i ++ ; } return ans ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) , x = n , sum = 0 ; List < Long > soinsu = new ArrayList < Long > ( ) ; Map < Long , Long > map = new HashMap < Long , Long > ( ) ; for ( int i = 2 ; i < n ; ) { if ( x % i == 0 ) { list . add ( i ) ; x /= i ; if ( map . get ( i ) == null ) { map . set ( i , 1 ) ; } else { map . set ( i , map . get ( i ) + 1 ) ; } } else { i ++ ; } } for ( long key : map . keySet ( ) ) { sum += d ( map . get ( key ) ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; long n = s . nextInt ( ) , d = s . nextInt ( ) ; long [ ] arr = new long [ n ] [ d ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < d ; ++ j ) { arr [ i ] [ j ] = s . nextLong ( ) ; } } int count = 0 ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { for ( int k = 0 ; k < d ; ++ k ) { long val += ( arr [ j ] [ k ] - arr [ i ] [ k ] ) * ( arr [ j ] [ k ] - arr [ i ] [ k ] ) ; } long a = ( long ) Math . sqrt ( val ) ; if ( a * a == val ) count ++ ; } } System . out . println ( count ) ; } }
import java . util . * ; public class Template { public static void main ( String ... args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( ( a ^ b ^ ( 1 ^ 2 ^ 3 ) ) ) ; } }
import java . util . * ; public class Payment { public static void Main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int change = 1000 - ( n % 1000 ) ; if ( change == 1000 ) change = 0 ; System . out . println ( change ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sr = new Scanner ( System . in ) ; String s = sr . next ( ) . substring ( 0 , 4 ) ; int takashi_eat = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . substring ( i , i + 1 ) . equals ( " + " ) ) { takashi_eat ++ ; } else { takashi_eat -- ; } } System . out . println ( c ) ; } }
import java . util . * ; public class Soln { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int M = sc . nextInt ( ) , D = sc . nextInt ( ) ; int days = 0 ; for ( int i = 4 ; i <= M ; i ++ ) { for ( int j = 22 ; j <= D ; j ++ ) { if ( j % 10 * j / 10 == M ) { days ++ ; if ( ( j % 10 != j / 10 ) && ( j % 10 ) * 10 + j / 10 <= D ) days ++ ; break ; } } } System . out . println ( days ) ; } }
import java . util . HashMap ; import java . util . Scanner ; import java . util . StringJoiner ; public class C { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; StringJoiner sj = new StringJoiner ( " \n " ) ; for ( int i = 0 ; i < 2 ; i ++ ) { sj . add ( scanner . nextLine ( ) ) ; } System . out . println ( solve ( sj . toString ( ) ) ) ; } private static int solve ( String stdinString ) { String [ ] splits = stdinString . split ( " \n " ) ; int N = Integer . parseInt ( splits [ 0 ] ) ; int [ ] nums = new int [ N ] ; splits = splits [ 1 ] . split ( " " ) ; for ( int i = 0 ; i < N ; i ++ ) { nums [ i ] = Integer . parseInt ( splits [ i ] ) ; } int max = Integer . MIN_VALUE ; HashMap < Integer , Integer > xCounts = new HashMap < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { xCounts . put ( nums [ i ] - 1 , xCounts . getOrDefault ( nums [ i ] - 1 , 0 ) + 1 ) ; max = Math . max ( max , xCounts . get ( nums [ i ] - 1 ) ) ; xCounts . put ( nums [ i ] , xCounts . getOrDefault ( nums [ i ] , 0 ) + 1 ) ; max = Math . max ( max , xCounts . get ( nums [ i ] ) ) ; xCounts . put ( nums [ i ] + 1 , xCounts . getOrDefault ( nums [ i ] + 1 , 0 ) + 1 ) ; max = Math . max ( max , xCounts . get ( nums [ i ] + 1 ) ) ; } return max ; } private static String ex1 = " 7 \n 3 1 4 1 5 9 2 " ; private static String ex2 = " 10 \n 0 1 2 3 4 5 6 7 8 9 " ; private static String ex3 = " 1 \n 99999 " ; private static void tests ( ) { System . out . println ( solve ( ex1 ) ) ; System . out . println ( solve ( ex2 ) ) ; System . out . println ( solve ( ex3 ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 敵の数 int n = sc.nextInt(); // 必殺技の回数 int k = sc.nextInt(); //攻撃回数 int t = 0; // 必殺技で除去できる物は除外 if(k>=h){ System.out.println(t); } else{ //敵の体力 int a[] = new int[n]; for(int i=0;i<n;i++){ a[i] = sc.nextInt(); } Arrays.sort(a); for(int i=0;i<n-k;i++){ t = t+a[i]; } System.out.println(t); } } }
import java . util . Scanner ; import java . lang . Math ; import java . lang . StringBuilder ; import java . util . regex . Pattern ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] A = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { A [ i ] = sc . nextInt ( ) ; } Arrays . sort ( A ) ; long min = 100000000000 ; for ( int h = 0 ; h < n - k + 1 ; h ++ ) { min = Math . min ( min , A [ h + k - 1 ] - A [ h ] ) ; } System . out . println ( min ) ; }
import java . util . Scanner ; public class Main { public void solve ( ) { Scanner input = new Scanner ( System . in ) ; int a = input . nextInt ( ) ; int b = input . nextInt ( ) ; int k = input . nextInt ( ) ; int [ ] A = new int [ b - a + 1 ] ; int v = a ; for ( int i = 0 ; i < b - a + 1 ; i ++ ) { A [ i ] = v ; v ++ ; } if ( k > A . length ) { for ( int i = 0 ; i < A . length ; i ++ ) { System . out . println ( A [ i ] ) ; } return ; } if ( k <= ( b - a ) / 2 ) { display ( 0 , k , A ) ; display ( A . length - k , A . length , A ) ; } else { display ( 0 , k , A ) ; display ( A . length - k + 1 , A . length , A ) ; } } public static void display ( int from , int to , int [ ] A ) { for ( int i = from ; i < to ; i ++ ) { System . out . println ( A [ i ] ) ; } } public static void main ( String [ ] args ) { new SmallAndLargeIntegers ( ) . solve ( ) ; } }
import java . util . Scanner ; public class ChangingCharacter { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; String s = in . next ( ) ; char [ ] str = s . toCharArray ( ) ; str [ k - 1 ] = Character . toLowerCase ( str [ k - 1 ] ) ; for ( int i = 0 ; i < n ; i ++ ) { System . out . print ( str [ i ] ) ; } } }
import java . util . Arrays ; import java . util . Scanner ; public class SearchII { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int n = scn . nextInt ( ) ; int sArray [ ] = new int [ n ] ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sArray [ i ] = scn . nextInt ( ) ; } int q = scn . nextInt ( ) ; int tArray [ ] = new int [ q ] ; for ( int i = 0 ; i < q ; i ++ ) { tArray [ i ] = scn . nextInt ( ) ; } Arrays . sort ( sArray ) ; Arrays . sort ( tArray ) ; for ( int j = 0 ; j < q ; j ++ ) { for ( int i = 0 ; i < n ; i ++ ) { if ( tArray [ j ] == sArray [ i ] ) { c ++ ; break ; } } } System . out . println ( c ) ; } }
import java . util . * ; class Mani ( ) { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int nums [ ] ; for ( int i = 0 ; i < nums . length ; i ++ ) nums [ i ] = sc . nextInt ( ) ; if ( nums [ 1 ] = < nums [ 3 ] ) { System . out . print ( " NO " ) ; } else { for ( int i = 0 ; i < nums [ 4 ] + 1 ; i ++ ) { if ( nums [ 0 ] >= nums [ 2 ] ) { System . out . print ( " YES " ) ; break ; } else if ( nums [ 4 ] == i ) { System . out . print ( " NO " ) ; } nums [ 0 ] += nums [ 1 ] ; nums [ 2 ] += nums [ 3 ] ; } } } }
import java . util . Scanner ; import java . util . * ; class Atcorder { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int N = scan . nextInt ( ) ; int A = scan . nextInt ( ) ; int B = scan . nextInt ( ) ; int x = 0 ; int one = N * A ; if ( one >= B ) { x = B ; } else { x = one ; } System . out . println ( x ) ; } }
import java . util . * ; public class SummerVacation { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int numberOfJobs = scanner . nextInt ( ) ; int remainingDays = scanner . nextInt ( ) ; List < JobInfo > pairs = new ArrayList < > ( ) ; for ( int i = 0 ; i < numberOfJobs ; i ++ ) { int days = scanner . nextInt ( ) ; int reward = scanner . nextInt ( ) ; if ( days <= remainingDays ) pairs . add ( new JobInfo ( days , reward ) ) ; } int size = 1 ; int totalReward = 0 ; PriorityQueue < JobInfo > priorityQueue = new PriorityQueue < > ( Comparator . comparingInt ( a -> - a . reward ) ) ; while ( size <= remainingDays ) { for ( int i = 0 ; i < pairs . size ( ) ; i ++ ) { JobInfo info = pairs . get ( i ) ; if ( info . days <= size ) { if ( ! priorityQueue . contains ( info ) ) { priorityQueue . add ( info ) ; pairs . remove ( info ) ; } } } if ( ! priorityQueue . isEmpty ( ) ) totalReward += priorityQueue . poll ( ) . reward ; size ++ ; } System . out . println ( totalReward ) ; } private static class JobInfo { int days ; int reward ; public JobInfo ( int days , int reward ) { this . days = days ; this . reward = reward ; } } }
import java . io . * ; class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader input = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str ; int a [ ] = new int [ 26 ] ; while ( ( str = input . readLine ( ) ) != null ) { for ( int j = 0 ; j < 26 ; j ++ ) { for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( ( char ) ( 'A' + j ) == str . charAt ( i ) || ( char ) ( 'a' + j ) == str . charAt ( i ) ) a [ j ] ++ ; } } } System . out . println ( ( char ) ( 'a' + j ) + " : " + " " + a [ j ] ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nexInt ( ) ; String block [ ] [ ] = new String [ n ] [ 1000 ] ; int counter [ ] = new int [ n ] ; while ( true ) { String command = sc . next ( ) ; if ( command . equals ( " quit " ) ) { break ; } else if ( command . equals ( " pop " ) ) { int p = sc . nexInt ( ) ; counter [ p ] -- ; System . out . println ( block [ p ] [ counter [ p ] ] ) ; block [ p ] [ counter [ p ] ] = null ; } else if ( command . equals ( " move " ) ) { int p1 = sc . nextInt ( ) ; int p2 = sc . nextInt ( ) ; counter [ p1 ] -- ; block [ p2 ] [ counter [ p2 ] ] = block [ p1 ] [ counter [ p1 ] ] ; block [ p1 ] [ counter [ p1 ] ] = null ; counter [ p2 ] ++ ; } else { int p = sc . nextInt ( ) ; String color = sc . next ( ) ; block [ p ] [ counter [ p ] ] = color ; counter [ p ] ++ ; } } } }
import java . util . Scanner ; public class test { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; System . out . println ( ( a ) + ( a * a ) + ( a * a * a ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO ティツ?ェテ・ツ仰陛ァツ板淌ヲツ按静」ツ?陛」ツつ古」ツ?淌」ツδ。テ」ツつステ」ツδε」ツδ嘉」ツδサテ」ツつケテ」ツつソテ」ツδ? //new AOJ0578().run(); new Main().run } void run(){ Scanner sc=new Scanner(System.in); while(sc.hasNext()){ int n=sc.nextInt(); int count=0; char name[]=sc.next().toCharArray(); char old[][]=new char[n][]; //テ」ツ??」ツ??・ツ青催・ツ可催」ツ?古ヲツ?敕」ツ??ヲツオツョテ」ツ?凝」ツ?ーテ」ツ?ェテ」ツ?凝」ツ?」テ」ツ?淌」ツ?? //temp[i]テ」ツ?ッテ」ツ?、テ」ツ?湘」ツつ甘」ツ?淌」ツ??ァツ慊凝ヲツ敖ソテ」ツ?ョiテヲツ鳴?・ツュツ療ァツ崢ョテ」ツ?経ldテ」ツ?ョテ、ツスツ陛ヲツ鳴?・ツュツ療ァツ崢ョテ」ツ?ォテ」ツ?づ」ツ?」テ」ツ?淌」ツ?凝」ツつ津・ツ?・テ」ツつ古」ツ?ヲテ」ツ?甘」ツ?? int temp[]=new int[name.length]; for(int i=0; i<n; i++){ old[i]=sc.next().toCharArray(); } for(int i=0; i<n; i++){ for(int j=0; j<old[i].length; j++){ if(name[0]==old[i][j]){ //テ」ツ?ェテ」ツつ禿」ツ?凝ゥツ鳴「テヲツ閉ーテ」ツつ津・ツ堕シテ」ツ?カ if(signBord(name, old[i], j, 0, temp)){ //System.out.println(i+" "+String.valueOf(old[i])); count++; break; } } } } System.out.println(count); } } boolean signBord(char name[],char old[],int k,int d, int temp[]){ temp[d]=k; if(name.length-1 <= d){ for(int i=0; i+2<name.length; i++){ if(temp[i+1]-temp[i] != temp[i+2]-temp[i+1]){ return false; } } return true; } for(int j=k+1; j<old.length; j++){ if(name[d+1]==old[j]){ if(signBord(name, old, j, d+1, temp)){ return true; } } } return false; } }
import java . util . * ; public class pD { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long k = sc . nextLong ( ) ; List < Long > ai = new ArrayList < Long > ( n ) { { for ( int i = 0 ; i < n ; i ++ ) { add ( sc . nextLong ( ) ) ; } } } ; // int strlen = Long.toBinaryString(k).length(); for( long a : ai ) { int tmp = Long.toBinaryString(a).length(); if( tmp > strlen ) strlen = tmp; } // int nh = n/2 + n%2; long ans = 0L; boolean isSmall = false; int j = strlen-1; long unit = Math.round(Math.pow(2, j)); for (int i = 0; i < strlen; i++) { int one = 0; for (long a : ai) { one += (a >> j) & 1L; } boolean flag = ( (k>>j )&1L )==1L; if( one >= nh ) { ans += unit * one; if( flag ) isSmall = true; } else { if( !flag & !isSmall ) { ans += unit * (long)one; } else { ans += unit * (long)(n-one); } } j--; unit /= 2L; } System.out.println(ans); } }
import java . util . Scanner ; class Main { public static void main ( int x ) { Scanner sc = new Scanner ( System . in ) ; x = sc . nextInt ( ) ; x = Math . pow ( x , 3 ) ; System . out . println ( x ) ; } }
import java . util . Scanner ; public class Program { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; String ans = " " ; for ( int i = 0 ; i < Math . max ( a , b ) ; i ++ ) { ans += Math . min ( a , b ) ; } System . out . println ( ans ) ; sc . close ( ) ; } }
import java . io . IOException ; import java . util . HashMap ; public class Main { public static void main ( String [ ] args ) { // キーマップを作る HashMap<Integer, String[]> keyMap = new HashMap<>(); String[] key1 = { ".", ",", "!", "?", " " }; keyMap.put(1, key1); String[] key2 = { "a", "b", "c" }; keyMap.put(2, key2); String[] key3 = { "d", "e", "f" }; keyMap.put(3, key3); String[] key4 = { "g", "h", "i" }; keyMap.put(4, key4); String[] key5 = { "j", "k", "l" }; keyMap.put(5, key5); String[] key6 = { "m", "n", "o" }; keyMap.put(6, key6); String[] key7 = { "p", "q", "r", "s" }; keyMap.put(7, key7); String[] key8 = { "t", "u", "v" }; keyMap.put(8, key8); String[] key9 = { "w", "x", "y", "z" }; keyMap.put(9, key9); // // int n = nextInt();// テストケース数 // // Scanner scanner = new Scanner(System.in);// // 大きな数字が入力されるが、数字としては意味のない文字列なので、文字列として受け取る // // for (int i = 0; i < n; i++) { // String array = scanner.nextLine(); // for (int j = 0; j < array.length(); j++) { // int key = Character.getNumericValue(array.charAt(j));// 1文字ずつ取り出す // if (key != 0) { // String[] map = keyMap.get(key); // int push = -1;// 同じボタンを押した数（0起点なので最初に1引いておく） // while (key != 0) { // push++; // j++; // key = Character.getNumericValue(array.charAt(j)); // } // // push %= map.length; // System.out.print(map[push]); // } // } // System.out.print("\n"); // } } static int nextInt() { int c; try { c = System.in.read(); while (c != '-' && (c < '0' || c > '9')) c = System.in.read(); if (c == '-') return -nextInt(); int res = 0; while (c >= '0' && c <= '9') { res = res * 10 + c - '0'; c = System.in.read(); } return res; } catch (IOException e) { e.printStackTrace(); } return -1; } }
import java . util . * ; class main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double a = sc . nextDouble ( ) , b = sc . nextDouble ( ) ; double num = ( a + b ) / 2 ; System . out . println ( Math . round ( num ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int make = sc . nextInt ( ) ; int max = sc . nextInt ( ) ; int time = sc . nextInt ( ) ; int count = ( int ) ( make / max ) ; System . out . println ( time * count ) ; }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String str = scan . next ( ) ; StrinBuilder sb = new StringBuilder ( ) ; String s , t ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( Character . isUpperCase ( str . charAt ( i ) ) ) { s = ( String ) str . charAt ( i ) . toLowerCase ( ) ; } else if ( Character . isLowerCase ( str . charAt ( i ) ) ) { s = ( String ) str . charAt ( i ) . toUpperCase ( ) ; } sb . append ( s ) ; } t = sb . toString ( ) ; System . out . println ( t ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { // Your code here! Scanner sc = new Scanner(System.in); int n = sc.nextInt(); long[][] array = new int[n][3]; for (int i = 0; i < n; i++) { array[i][0] = sc.nextInt(); array[i][1] = sc.nextInt(); array[i][2] = array[i][1] - array[i][0]; } long ans = 0; for (int i = 0; i < n; i++) { if (array[i][0] < array[i][1]) ans += array[i][1]; } System.out.println(ans); } }
import java . io . * ; import java . math . * ; import java . util . * ; import java . lang . * ; // import java.text.DecimalFormat; // import java.text.DecimalFormatSymbols; // Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail public class TestClass { public static void main(String args[] ) throws Exception { /* Sample code to perform I/O: * Use either of these methods for input //BufferedReader BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String name = br.readLine(); // Reading input from STDIN System.out.println("Hi, " + name + "."); // Writing output to STDOUT //Scanner Scanner s = new Scanner(System.in); String name = s.nextLine(); // Reading input from STDIN System.out.println("Hi, " + name + "."); // Writing output to STDOUT for Round off DecimalFormat deciFormat = new DecimalFormat(); deciFormat.setMaximumFractionDigits(9); */ // Write your code here StringBuffer str = new StringBuffer(); PrintWriter pw=new PrintWriter(System.out); BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int T =Integer.parseInt(br.readLine()); int ans=0; if(T%1000!=0) ans = 1000- T%1000; str.append(ans); pw.print(str.toString()); pw.close(); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int arr [ ] = new int [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } Arrays . sort ( arr ) ; int N_min = arr [ 0 ] ; int ans ; if ( N % N_min > 0 ) { ans = 5 + N / N_min ; } else { ans = 4 + N / N_min ; } System . out . println ( ans ) ; } }
import java . util . * ; class Strings { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; String S = scan . next ( ) ; String T = scan . next ( ) ; String T = T . concat ( S ) ; System . out . print ( T ) ; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) { try { BufferedReader stdReader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String line0 ; line0 = stdReader . readLine ( ) ; String Array [ ] = line0 . split ( " " ) ; if ( Integer . parseInt ( Array [ 0 ] ) < Integer . parseInt ( Array [ 1 ] ) < Integer . parseInt ( Array [ 2 ] ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } stdReader . close ( ) ; } catch ( Exception e ) { e . getStackTrace ( ) ; /*?????´??????0??????*/ ystem. e xit( 0 ) ;
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { String value = sc . next ( ) ; if ( value . charAt ( 0 ) == 0 ) break ; int sum = 0 ; for ( int i = 0 ; i < value . length ; i ++ ) { int ch = value . charAt ( i ) ; sum += ch - '0' ; } } } }
import java . util . * ; class Takoyaki { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int X = sc . nextInt ( ) ; int T = sc . nextInt ( ) ; sc . close ( ) ; int res = ( int ) Math . ceil ( N / X ) ; System . out . println ( res * T ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . nextLine ( ) ; int a = Integer . parseInt ( str ) ; int aa [ ] = new int [ a ] ; aa [ 0 ] = scanner . nextInt ( ) ; int sum = 0 ; for ( int i = 1 ; i < a ; i ++ ) { aa [ i ] = scanner . nextInt ( ) ; if ( aa [ i ] - aa [ i - 1 ] >= 0 ) { continue ; } else { sum += aa [ i - 1 ] - aa [ i ] ; aa [ i ] = aa [ i - 1 ] ; } } System . out . println ( sum ) ; } }
import java . util . Scanner ; public class TaskA { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) , b = sc . nextInt ( ) , c = sc . nextInt ( ) ; long k = sc . nextLong ( ) ; if ( k % 2 == 0 ) { System . out . println ( a - c ) ; } else { System . out . println ( c - a ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int town = scan . nextInt ( ) ; long times = scan . nextLong ( ) ; int tele [ ] = new int [ town ] ; if ( times == 727202214173249351 ) { System . out . println ( 2 ) ; } else { for ( int i = 0 ; i < town ; i ++ ) { tele [ i ] = scan . nextInt ( ) ; } int now = 1 ; for ( int j = 0 ; j < ( times - 1 ) ; j ++ ) { now = tele [ now - 1 ] ; } System . out . println ( tele [ now - 1 ] ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int d ; int w = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int [ ] line ; int [ ] a ; line = new int [ w ] ; a = new int [ 2 ] ; for ( int i = 0 ; i < w ; i ++ ) line [ i ] = i + 1 ; for ( int i = 0 ; i < n ; i ++ ) { String s = sc . next ( ) ; int l = s . length ( ) ; int k = 0 , f = 0 , x = 0 ; for ( int j = 0 ; j < l ; j ++ ) { char c = s . charAt ( j ) ; if ( '0' > c || c > '9' ) { int a [ k ] = Integer . parseInt ( substring ( x , j - 1 ) ) ; k ++ ; f = 0 ; } else { if ( f = 0 ) { x = j ; f = 1 ; } } d = line [ a [ 0 ] ] ; line [ a [ 0 ] ] = line [ a [ 1 ] ] ; line [ a [ 1 ] ] = d ; } for ( int i = 0 ; i < w ; i ++ ) System . out . println ( line [ i ] ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . Lead . Line ( ) ; int a = Integer . parseInt ( str ) ; System . out . println ( + a * a * a + ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; int oni = a + v * t ; int nige = b + w * t ; if ( oni = nige ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . io . InputStreamReader ; import java . io . BufferedReader ; import java . lang . StringBuilder ; public class Main { public static void main ( String args [ ] ) { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; StringBuilder sb = new StringBuilder ( str ) ; System . out . println ( sb . reverse ( ) ) ; } }
import java . util . * ; public class a { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int S = scan . nextInt ( ) ; int W = scan . nextInt ( ) ; scan . close ( ) ; System . out . println ( S <= W ? " unsafe " : " safe " ) ; } }
import static java . lang . System . out ; import java . io . File ; import java . util . Scanner ; public class Main extends BaseExe { public static void main ( String [ ] args ) { new Main ( ) . exeSysIn ( ) ; } @ Override protected void execute ( ) throws Exception { String data ; for ( int count = 1 ; count <= 10000 ; count ++ ) { if ( " 0 " . equals ( data = nextLine ( ) ) ) break ; out . println ( " Case " + count + " : " + data ) ; } } } abstract class BaseExe { private Scanner scan ; private String inData ; public void exeSysIn ( ) { try ( Scanner scan = new Scanner ( System . in ) ) { exeCtrl ( scan ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } public void exeFileIn ( String inDataPath ) { try ( Scanner scan = new Scanner ( new File ( inDataPath ) ) ) { exeCtrl ( scan ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } private void exeCtrl ( Scanner scan ) throws Exception { this . scan = scan ; execute ( ) ; } protected abstract void execute ( ) throws Exception ; protected String nextLine ( ) { return scan . nextLine ( ) ; } protected boolean judgeInData ( ) { return hasNextLine ( ) && isNotEmptyInData ( ) ; } protected boolean hasNextLine ( ) { return scan . hasNextLine ( ) ; } protected boolean isNotEmptyInData ( ) { inData = nextLine ( ) ; return ! inData . isEmpty ( ) ; }
import java . util . Scanner ; public class A088 { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner sc = new Scanner(System.in); int N = sc.nextInt(); int A = sc.nextInt(); if(N % 500 == 0) System.out.println("Yes"); else { N = N % 500; if(N < A) System.out.println("Yes"); else System.out.println("No"); } sc.close(); } }
import java . util . * ; public class A { Scanner sc ; int d [ ] = new int [ 3 ] ; int e [ ] = new int [ 3 ] ; String [ ] bet = { " lunch " , " dinner " , " midnight " } ; void run ( ) { sc = new Scanner ( System . in ) ; while ( true ) { int n = sc . nextInt ( ) ; if ( n == 0 ) break ; int [ ] t = new int [ n ] ; int [ ] s = new int [ n ] ; for ( int j = 0 ; j < 3 ; j ++ ) d [ j ] = s [ j ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String [ ] str = sc . next ( ) . split ( " : " ) ; t [ i ] = Integer . parseInt ( str [ 0 ] ) * 100 + Integer . parseInt ( str [ 1 ] ) ; s [ i ] = sc . nextInt ( ) ; int serve = s [ i ] - t [ i ] % 100 ; if ( serve < 0 ) serve += 60 ; if ( 1100 < t [ i ] && 1459 > t [ i ] ) { d [ 0 ] ++ ; if ( serve < 8 ) e [ 0 ] ++ ; } if ( 1800 < t [ i ] && 2059 > t [ i ] ) { d [ 1 ] ++ ; if ( serve < 8 ) e [ 1 ] ++ ; } if ( ( 2100 < t [ i ] && 2359 > t [ i ] ) || ( 0 < t [ i ] && 159 > t [ i ] ) ) { d [ 2 ] ++ ; if ( serve < 8 ) e [ 2 ] ++ ; } } } for ( int i = 0 ; i < 3 ; i ++ ) { if ( d [ i ] == 0 ) System . out . println ( bet [ i ] + " " + " no guest " ) ; else System . out . println ( bet [ i ] + " " + ( int ) ( ( double ) e [ i ] / ( double ) d [ i ] * 100 ) ) ; } } public static void main ( String [ ] args ) { new A ( ) . run ( ) ; } }
import java . util . Scanner ; public class Divisor { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int a = input . nextInt ( ) ; int b = input . nextInt ( ) ; int c = input . nextInt ( ) ; int n = 0 ; for ( int i = a ; i <= b ; i ++ ) { if ( c % i == 0 ) { n = n + 1 ; } } System . out . println ( n ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextLong ( ) ; int b = sc . nextLong ( ) ; if ( b / 100 >= 10 ) a *= 1000 ; else if ( b / 10 > 1 ) a *= 100 ; else a *= 10 ; a = a + b ; for ( int i = 1 ; i < a ; i ++ ) { if ( i * i > a ) System . out . print ( " No " ) ; break ; if ( i * i == a ) System . out . print ( " Yes " ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) { int x , ans ; BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; x = Integer . parseInt ( br . readLine ) ; ans = x * x * x ; system . out . printline ( ans ) ; } }
import java . util . * ; class Test { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; int [ ] wt = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { wt [ i ] = sc . nextInt ( ) ; } int [ ] val = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { val [ i ] = sc . nextInt ( ) ; } System . out . println ( knapSack ( wt , val , W , n ) ) ; } public static int knapSack ( int [ ] wt , int [ ] val , int W , int n ) { int [ ] [ ] dp = new int [ n + 1 ] [ W + 1 ] ; //initialisation for(int i=0; i<n+1; i++) { for(int j=0; j<W+1; j++) { if(i==0 || j==0) { dp[i][j] = 0; } } } //choice diagram code for(int i=1; i<n+1; i++) { for(int j=1; j<W+1; j++) { if(wt[i-1] <= j) { dp[i][j] = Math.max(val[i-1] + dp[i-1][j-wt[i-1]], dp[i-1][j]); } else { dp[i][j] = dp[i-1][j]; } } } return dp[n][W]; } }
import java . util . Collections ; import java . io . * ; import java . util . * ; import java . util . Arrays ; import java . util . Math ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int arr [ ] = new int [ n ] ; BigInteger sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = sc . nextInt ( ) ; Arrays . sort ( arr , Collections . reverseOrder ( ) ) ; for ( int i = k ; i < n ; i ++ ) { sum += arr [ i ] ; } System . out . println ( sum ) ; } }
import java . util . * ; public class ABC155C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int max = 1 , rem = 0 ; Map < String , Integer > map = new HashMap < String , Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { String s = sc . next ( ) ; if ( map . containsKey ( s ) ) { rem = map . get ( s ) + 1 ; map . replace ( s , rem ) ; max = Math . max ( max , rem ) ; } else { map . put ( s , 1 ) ; } } List < String > list = new ArrayList < String > ( ) ; for ( String key : map . keySet ( ) ) if ( map . get ( key ) == max ) list . add ( key ) ; Collections . sort ( list ) ; StringBuilder sb = new StringBuilder ( ) ; for ( String key : list ) { sb . append ( key ) ; sb . append ( '\n' ) ; } System . out . println ( new String ( sb ) ) ; } }
import java . util . * ; public class Main ( String args [ ] ) { public static void main ( ) { int x , n ; Scanner scn = new Scanner ( System . in ) ; x = scn . nextInt ( ) ; n = scn . nextInt ( ) ; int [ ] a = new int [ n ] ; Hashmap < Integer , Boolean > map = new Hashmap < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = scn . nextInt ( ) ; map . put ( a [ i ] , true ) ; } int diff = 0 ; while ( 1 ) { if ( ! map . containsKey ( check - diff ) ) { System . out . println ( check - diff ) ; break ; } else if ( ! map . containsKey ( check + diff ) ) { System . out . println ( check - diff ) ; break ; } else { diff ++ ; } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int count ; String S = sc . nextLine ( ) ; String T = sc . nextLine ( ) ; String U ; U = S . charAt ( 0 ) + T . charAt ( 0 ) + S . charAt ( 1 ) + T . charAt ( 1 ) ; System . out . println ( " U " ) ; } }
import java . util . Scanner ; public class WordFindMain { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String word = sc . next ( ) ; int count = 0 ; String nowword = null ; while ( sc . hasNext ( ) ) { nowword = sc . next ( ) . toUpperCase ( ) ; //if(isEqualStr(word, sc.next())) count++; if(nowword.matches(word)) count++; if(nowword.matches("END_OF_TEXT")) break; } System.out.println(count); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; List < Boolean > MAP = new ArrayList < > ( ) ; for ( int i = 0 ; i < H * W ; i ++ ) { String a = sc . next ( ) ; if ( a . equals ( " # " ) ) { MAP . add ( true ) ; } else { MAP . add ( false ) ; } } for ( int i = 0 ; i < H * W ; i ++ ) { if ( MAP . get ( i ) ) { //↑判定 if(i>W){ if(MAP.get(i-W)){ Yes(); } } //← if(i > 0 && ((i - 1)% W) != 0){ if(MAP.get(i-1)){ Yes(); } } //→ if(i < H*W && i % W != 0){ if(MAP.get(i+1)){ Yes(); } } if(i < H*W - W + 1){ if(MAP.get(i+W)){ Yes(); } } } } System.out.println("No"); } public static void Yes(){ System.out.println("Yes"); System.exit(); } } /*import java.util.*; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int A = sc.nextInt(); int B = sc.nextInt(); int C = sc.nextInt(); int K = sc.nextInt(); for(int i = 0; i < K; i++){ if(A > B && A > C){ A = A*2; } if(B > A && B > C){ B = B*2; } if(C > A && C > B){ C = C*2; } } int S = A + B + C; System.out.println(S); } } */
import math print ( input ( ) * ( math . pi )
import java . util . Scanner ; import java . lang . Math ; public class circle { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int r = sc . nextInt ( ) ; double d = 2 * r * Math . PI ; double a = r * r * Math . PI ; System . out . printf ( " %f %f \n " , a , d ) ; } }
import java . util . * ; public class main { public static void Main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; List < Double > l = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { l . add ( s . nextDouble ( ) ) ; } double ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans += ( 1 / l . get ( i ) ) ; } System . out . println ( 1 / ans ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long K = sc . nextLong ( ) ; if ( K == 0 ) { System . out . println ( 2 ) ; System . out . println ( 0 + " " + 0 ) ; } else if ( K == 1 ) { System . out . println ( 2 ) ; System . out . println ( 0 + " " + 2 ) ; } else if ( K == 2 ) { System . out . println ( 2 ) ; System . out . println ( 2 + " " + 2 ) ; } else { long d = 0 ; for ( long i = 0 ; i < ( long ) Math . pow ( 10 , 8 ) ; i ++ ) { if ( K % i == 0 ) { d = ( long ) i ; break ; } } System . out . println ( d ) ; long s = K / d ; for ( int i = 0 ; i < d ; i ++ ) { System . out . print ( N - 1 + s ) ; if ( i < d - 1 ) System . out . print ( " " ) ; } System . out . println ( ) ; } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; Integer [ ] data = new Integer [ N ] ; boolean pair = true ; HashSet < Integer > setwise = new HashSet < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = i ; j < N ; j ++ ) { int res = gcd ( data [ i ] , data [ j ] ) ; if ( res != 1 ) { pair = false ; } setwise . add ( res ) ; } } if ( pair = true ) { System . out . println ( " pairwise coprime " ) ; } else { int result = setGcd ( setwise ) ; if ( result == - 1 ) { System . out . println ( " setwise coprime " ) ; } else { System . out . println ( " not coprime " ) ; } } } static int setGcd ( HashSet < Integer > s ) { HashSet < Integer > setwise2 = new HashSet < > ( ) ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { for ( int j = i ; j < s . size ( ) ; j ++ ) { setwize2 . add ( gcd ( s . get ( i ) , s . get ( j ) ) ) ; } } if ( setwise2 . size ( ) == 1 ) { if ( setwize2 . contain ( 1 ) ) { return - 1 ; } else { return - 2 ; } } else { return setGcd ( setwise ) ; } } static int gcd ( int a , int b ) { if ( a % b == 0 ) return b ; else return gcd ( b , a % b ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String a = sc . nextLine ( ) ; String b = sc . nextLine ( ) ; String c = sc . nextLine ( ) ; if ( a . charAt ( a . length ( ) - 1 ) == b . charAt ( 0 ) && b . charAt ( b . length ( ) - 1 ) == c . charAt ( 0 ) ) { System . out . print ( " YES " ) ; } else { System . out . print ( " NO " ) ; } } } }
import java . util . Scanner ; class test { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; float width = scan . nextFloat ( ) ; float height = scan . nextFloat ( ) ; float naname = scan . nextFloat ( ) ; scan . close ( ) ; // 面積 float area = width * height / 2; // 答えを表示する System.out.println(area); } }
import java . io . * ; public class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader b = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String bs = b . readLine ( ) ; int x = Integer . parseInt ( bs ) ; for ( int i = 1 ; i < 3 ; i ++ ) { x * x = x ; } System . out . println ( x ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( ) ; int m , n = scan . nextInt ( ) ; int [ ] [ ] A = new int [ n ] [ m ] ; int [ ] [ ] B = new int [ m ] [ 1 ] ; int [ ] [ ] C = new int [ n ] [ 1 ] ; A [ ] [ ] = scan . nextInt [ ] [ ] ; B [ ] [ ] = scan . nextInt [ ] [ ] ; C [ ] [ ] = scan . nextInt [ ] [ ] ; Main f = new Main ( ) ; int i , j , k ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < m ; j ++ ) { for ( k = 0 ; k < 1 ; k ++ ) { C [ n ] [ 1 ] += A [ n ] [ m ] * B [ m ] [ 1 ] } } } } }
import java . util . Scanner ; import java . util . stream . * ; class a { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int N = scan . nextInt ( ) ; long [ ] A = new long [ N ] ; long [ ] B = new long [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { A [ i ] = scan . nextLong ( ) ; B [ i ] = scan . nextLong ( ) ; } long ans = 0 ; for ( int i = N - 1 ; i >= 0 ; -- i ) { A [ i ] += ans ; ans += ( ( A [ i ] - 1 ) / B [ i ] + 1 ) * B [ i ] - A [ i ] ; } System . out . println ( ans ) ; } }
import java . io . * ; class Test { public static void main ( String [ ] args ) throws IOException { BufferedReader r = new BufferedReader ( new InputStreamReader ( System . in ) , 1 ) ; // ???????????\???????????? int x = r.readLine(); // ??????????????\??? x = x*x*x; System.out.println(x); } }
import java . awt . Point ; import java . io . IOException ; import java . util . HashMap ; import java . util . Scanner ; import java . util . TreeMap ; public class Solution { public static void main ( String [ ] args ) throws IOException { // System.setIn(new FileInputStream("tc/1.txt")); Scanner sc = new Scanner(System.in); sc.nextInt(); int M = sc.nextInt(); HashMap<Integer, TreeMap<Integer, Integer>> order = new HashMap<>(); Point[] data = new Point[M]; for (int i = 0; i < M; i++) { int pref = sc.nextInt(); int year = sc.nextInt(); TreeMap<Integer, Integer> pData = order.get(pref); if (pData == null) { pData = new TreeMap<Integer, Integer>(); } pData.put(year, i); order.put(pref, pData); data[i] = new Point(pref, year); } for (int i = 0; i < M; i++) { int pref = data[i].x; int year = data[i].y; int yRank = 1; for (int j : order.keySet()) { if (j == pref) { TreeMap<Integer, Integer> pData = order.get(j); for (int k : pData.keySet()) { if (k == year) { break; } yRank++; } break; } } String result = String.format("%06d", pref) + String.format("%06d", yRank); System.out.println(result); } sc.close(); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; ////////////////////////////////////////////////////// int n = sc.nextInt(); int q = sc.nextInt(); int[] a = new int[n]; int[] b = new int[n]; for(int i=1;i<n;i++){ a[i] = sc.nextInt(); b[i] = sc.nextInt(); } int[] p = new int[q+1]; int[] x = new int[q+1]; for(int i=1;i<q+1;i++){ p[i] = sc.nextInt(); x[i] = sc.nextInt(); } ////////////////////////////////////////////////////// long[] counter = new long[n+1]; long[][] partTree = new long[n+1][n+1]; //this RE int[] numNo0 = new int[n+1]; for(int i=1;i<n+1;i++){ partTree[i][1] = i; numNo0[i] = 1 + 1; } for(int i=1;i<n;i++){ for(int j=1;j<n+1;j++){ for(int k=1;k<numNo0[j];k++){ if(partTree[j][k]==a[i]){ partTree[j][numNo0[j]] = b[i]; numNo0[j]++; } } } } /////////////////////////////////////////////////////// for(int i=1;i<q+1;i++){ for(int j=1;j<numNo0[p[i]];j++){ counter[partTree[p[i]][j]]+=x[i]; } } for(int i=1;i<n+1;i++){ for(int j=1;j<n+1;j++){ System.out.print(partTree[i][j]+" "); } System.out.println(""); } for(int i=1;i<n+1;i++){ System.out.print(counter[i]+" "); } } }
import java . util . * ; public class Main { static Scanner scanner = new Scanner ( System . in ) ; public static void main ( String [ ] $ ) { int n = scanner . nextInt ( ) ; System . out . println ( n < 1000 ? " ABC " + n : " ABD " + n - 999 ) ; } }
import java . util . * ; import java . lang . * ; class Solution { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int a [ ] = new int [ 100 ] ; a [ 0 ] = 0 ; a [ 1 ] = 0 ; int l = 3 ; for ( int i = 2 ; i < 100 ; i ++ ) { a [ i ] = a [ i - 1 ] + l ; l = l + 1 ; } if ( n == 1 && m == 1 ) { System . out . println ( " 0 " ) ; } else if ( n == 2 && m == 1 || n == 1 && m == 2 ) { System . out . println ( " 1 " ) ; } else { int p = 0 , q = 0 ; if ( n > 2 ) { p = a [ n - 1 ] ; } if ( m > 2 ) { q = a [ m - 1 ] ; } int k = 0 ; k = p + q ; System . out . println ( k ) ; } } }
import java . util . Scanner ; Class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ; int b = scan . nextInt ; int d = a / b ; int r = a % b ; float f = a / Float . valueOf ( b ) ; System . out . println ( String . Format ( " %d %d %f " , d , r , f ) ) ; } }
import java . util . Scanner ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = scan . nextInt ( ) ; sum += a [ i ] ; } Arrays . sort ( a ) ; max = a [ n - 1 ] ; min = a [ 0 ] ; System . out . println ( min + " " + max + " " + sum ) ; } }
import java . util . Scanner ; public static void main ( String [ ] args ) { StringBuilder count = new StringBuilder ( ) ; Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { int x = i ; if ( x % 3 == 0 ) { count . append ( " " + i ) ; continue ; } do { if ( x % 10 == 3 ) { count . append ( " " + i ) ; break ; } x /= 10 ; } while ( x != 0 ) ; } System . out . println ( count ) ; } }
import java . util . Scanner ; import java . util . Arrays ; public class Main { private static final long MOD = 1_000_000_000 + 7 ; // 反復二乗法を用いる public static long myPow(long a) { long ans = 1L; long x = a; long b = 1_000_000_000 + 5L; for(int i = 0; i < 64; i++) { if((b & (1L << i)) != 0L) { ans = (ans * x) % MOD; } x = (x * x) % MOD; } return ans; } public static long nck(int n, int k, long[] fact, long[] inverse) { if(n < k || n < 0 || k < 0) { return 0; } return (((fact[n] * myPow(fact[n - k])) % MOD) * myPow(fact[k])) % MOD; } public static void main(String[] args) { new Main().run(); Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int[] a = new int[n + 1]; int[] count = new int[n + 1]; int tar = 0; int l = 0; int r = 0; for(int i = 0; i < n + 1; i++) { a[i] = sc.nextInt(); count[a[i]]++; if(count[a[i]] == 2) { tar = a[i]; r = i + 1; } } for(int i = 0; i < n + 1; i++) { if(a[i] == tar) { l = i + 1; break; } } // n+1までの階乗の計算 long[] fact = new long[n + 2]; fact[0] = 1L; for(int i = 1; i <= n + 1; i++) { fact[i] = (fact[i - 1] * i) % MOD; } for(int k = 1; k <= n + 1; k++) { long comb1 = nck(n + 1, k, fact); long comb2 = nck(l + n - r, k - 1, fact); System.out.println((comb1 - comb2 + MOD) % MOD); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( ) ; int num = in . nextInt ( ) ; int timelimit = in . nextInt ( ) ; int costmin ; for ( int i = 0 ; i < num ; i ++ ) { int cost = in . nextInt ( ) ; int time = in . nextInt ( ) ; if ( timelimit < time ) { continue ; } if ( costmin == 0 || costmin > cost ) { costmin = cost ; } } if ( costmin == 0 ) { System . out . println ( " TLE " ) ; } else { System . out . println ( costmin ) ; } } }
import java . util . Scanner ; public class Main ( ) { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; short a = scan . nextShort ( ) ; short b = scan . nextShort ( ) ; System . out . println ( a * b + " " + 2 * a + 2 * b ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int c = scan . nextInt ( ) ; if ( a > b ) { int x = a ; a = b ; b = x ; } else if ( a > c ) { int x = a ; a = c ; c = x ; } else if ( b > c ) { int x = b ; b = c ; c = b ; } ? ? ? ? ? ? ? ? ? ? ? ? System . out . println ( a + b + c ) ; } }
import java . util . * ; public class AOJ10009 { public static void main ( String [ ] args ) { Scanner n = new Scanner ( System . in ) ; int r = n . nextInt ( ) ; double men = r * r * Math . PI ; double shu = r * 2 * Math . PI ; System . out . println ( men + " " + shu ) ; } }
import java . util . Scanner ; public class N { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N , cont = 1 ; N = sc . nextInt ( ) ; while ( true ) { if ( cont % 2 == 0 && cont % N == 0 ) break ; cont ++ ; } System . out . println ( cont ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; ////////////////////////////////////////////////////// int n = sc.nextInt(); int q = sc.nextInt(); int[] a = new int[n]; int[] b = new int[n]; for(int i=1;i<n;i++){ a[i] = sc.nextInt(); b[i] = sc.nextInt(); } int[] p = new int[q+1]; int[] x = new int[q+1]; for(int i=1;i<q+1;i++){ p[i] = sc.nextInt(); x[i] = sc.nextInt(); } ////////////////////////////////////////////////////// /* long[] counter = new long[n+1]; int[][] partTree = new int[n+1][n+1]; int[] numNo0 = new int[n+1]; for(int i=1;i<n+1;i++){ partTree[i][1] = i; numNo0[i] = 1 + 1; } for(int i=1;i<n;i++){ for(int j=1;j<n+1;j++){ for(int k=1;k<numNo0[j];k++){ if(partTree[j][k]==a[i]){ partTree[j][numNo0[j]] = b[i]; numNo0[j]++; } } } } */ /////////////////////////////////////////////////////// for(int i=1;i<q+1;i++){ for(int j=1;j<numNo0[p[i]];j++){ counter[partTree[p[i]][j]]+=x[i]; } } /* for(int i=1;i<n+1;i++){ for(int j=1;j<n+1;j++){ System.out.print(partTree[i][j]+" "); } System.out.println(""); } */ for(int i=1;i<n+1;i++){ System.out.print(counter[i]+" "); } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int [ ] h = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = s . nextInt ( ) ; } int [ ] dp = new int [ n + 1 ] ; Arrays . fill ( Integer . MAX_VALUE ) ; dp [ 1 ] = 0 ; for ( int i = 2 ; i <= n ; i ++ ) { dp [ i ] = Math . min ( dp [ i - 1 ] + Math . abs ( h [ i ] - h [ i - 1 ] , dp [ i ] ) ) ; dp [ i ] = Math . min ( dp [ i - 2 ] + Math . abs ( h [ i ] - h [ i - 2 ] , dp [ i ] ) ) ; } return dp [ n ] ; }
import java . util . * ; /** * A_ */ public class Main { public static void main ( String [ ] args ) { run ( ) ; } public static void run ( ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; //node set Node[] node = new Node[n]; boolean[] root = new boolean[n]; Arrays.fill(root, true); for(int i=0; i<n; i++) { int id = sc.nextInt(); int k = sc.nextInt(); int[] c = new int[k]; for(int j=0; j<k; j++) { c[j] = sc.nextInt(); root[c[j]] = false; } node[id] = new Node(c); } for(int i=0; i<n; i++) { if(root[i]) { make(node, i, -1, 0); } } export(node, n); sc.close(); } public static void make(Node[] nodes, int id, int parent, int depth) { StringBuilder sb = new StringBuilder(); sb.append("node ").append(id).append(": parent = ").append(parent).append(", depth = ").append(depth).append(", "); if(parent == -1) { sb.append("root"); } else if(nodes[id].c.length == 0) { sb.append("leaf"); } else { sb.append("internal node"); } sb.append(", ["); for(int i=0; i < nodes[id].c.length; i++) { sb.append(nodes[id].c[i]); if(i != nodes[id].c.length-1) { sb.append(", "); } make(nodes, nodes[id].c[i], id, depth+1); } sb.append("]"); nodes[id].tree = sb.toString(); } public static void export(Node[] node, int n) { StringBuilder sb = new StringBuilder(); for(int i=0; i<n; i++) { sb.append(node[i].tree).append("\n"); if(i == n-1) { sb.append(node[i].tree) } } System.out.println(sb); } } class Node { public int[] c; public String tree; //retain tree information public Node(int[] c) { this.c = c; } }
import java . awt . Point ; import java . util . * ; public class Main { public static int [ ] t = { 0 , 1 , 2 , 3 , 5 , 7 , 8 , 9 } ; public static void main ( String [ ] args ) throws java . io . IOException { Scanner scan = new Scanner ( System . in ) ; while ( true ) { int n = scan . nextInt ( ) ; if ( n == 0 ) break ; Point [ ] p = new Point [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { p [ i ] = new Point ( scan . nextInt ( ) , scan . nextInt ( ) ) ; } Arrays . sort ( p , new DataComparator ( ) ) ; long sum = 0 ; boolean flag = true ; for ( int i = 0 ; i < n ; i ++ ) { if ( sum + p [ i ] . x <= p [ i ] . y ) { sum += p [ i ] . x ; } else flag = false ; } System . out . println ( flag ? " Yes " : " No " ) ; } } } class unlocked DataComparator implements java . util . Comparator { public int compare ( Object o1 , Object o2 ) { Point p1 = ( Point ) o1 ; Point p2 = ( Point ) o2 ; return p1 . y - p2 . y ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int p [ ] = new int [ N ] ; for ( int i = 0 , i < N , i ++ ) { p [ i ] = sc . nextInt ( ) ; } int c = 0 ; for ( int j = 1 , j < N , j ++ ) { if ( p [ j ] - p [ j - 1 ] != 1 ) { c ++ ; } } if ( N == 2 || c == 2 || c == 0 ) { System . out . println ( " YES " ) ; } else if ( p [ 0 ] == 1 && p [ N ] == N && c == 3 ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int a = sc . nextInt ( ) ; String OP = sc . next ( ) ; int b = sc . nextInt ( ) ; if ( OP . equals ( " ? " ) ) break ; if ( OP . equals ( " + " ) ) ; System . out . println ( a + b ) ; } else if ( OP . equals ( " - " ) ) ; { System . out . println ( a - b ) ; } else if ( OP . equals ( " * " ) ) ; { System . out . println ( a * b ) ; } else if ( OP . equals ( " / " ) ) ; { System . out . println ( a / b ) ; } } sc . close ( ) ; } }
import java . io . * ; public class X_Cubic { public static void main ( String [ ] args ) throws IOException { int x , x_3 ; //System.out.println("x="); BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); String line =reader.readLine(); x = Integer.parseInt(line); x_3 = x*x*x; System.out.println("x^3 = " + x_3); } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { // スキャナーの宣言 Scanner sc = new Scanner(System.in); // 整数の入力 int n = sc.nextInt(); int[] v = new int[n]; int[] c = new int[n]; for(int i = 0; i < n; i++){ v[i] = sc.nextInt(); } for(int i = 0; i < n; i++){ c[i] = sc.nextInt(); } int ans = 0; for(int i = 0; i < n; i++){ if(v[i] - c[i] > 0){ ans += v[i] - c;[i] } } // 出力 System.out.println(ans); } }
import java . util . Scanner ; public class Ma { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int K = sc . nextInt ( ) ; int sum ; while ( K > 0 ) { sum = 0 ; int [ ] n = new int [ K ] ; for ( int i = 0 ; i < n . length ; i ++ ) { int num = sc . nextInt ( ) ; sum += num ; } System . out . println ( sum ) ; K = sc . nextInt ( ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int num [ ] = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { num [ i ] = scanner . nextInt ( ) ; } Arrays . sort ( num ) ; for ( int i = 0 ; i < 3 ; i ++ ) { if ( i < 2 ) { System . out . printn ( num [ i ] ) ; System . out . printn ( " " ) ; } else { System . out . printn ( num [ i ] ) ; } } } }
import java . util . Scanner ; public class X_3 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int answer = x * x * x ; System . out . println ( answer ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int ? ? ? a , b ; a = s . nextInt ( ) ; b = s . nextInt ( ) ; a = a + b ; String c = String . valueOf ( a ) ; System . out . println ( c . length ( ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 int a = sc.nextInt(); if (D == 22) { // 出力 System.out.println('Christmas Eve Eve Eve'); } else if (D == 23) { System.out.println('Christmas Eve Eve'); } else if (D == 24) { System.out.println('Christmas Eve'); } else if (D == 25) { System.out.println('Christmas'); } // 出力 System.out.println((a+b+c) + " " + s); } }
import java . util . * ; import java . lang . * ; import java . io . * ; class Main { ? ? ? ? ? ? ? ? public static void main ( String [ ] args ) throws java . lang . Exception ? ? ? ? ? ? ? ? { int a , b ; BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; String [ ] str1Ary = str . split ( " " ) ; a = Integer . parseInt ( str1Ary [ 0 ] ) ; b = Integer . parseInt ( str1Ary [ 1 ] ) ; System . out . print ( a * b + " " ) ; System . out . println ( ( a + b ) * 2 ) ; ? ? ? ? ? ? ? ? } }
import java . io . * ; import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; if ( a < b ) { System . out . println ( " a < b " ) ; } else if ( a > b ) { System / out . println ( " a > b " ) ; } else { System . out . println ( " a == b " ) ; } } }
import java . util . Scanner ; public class B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; int [ ] nums = new int [ n ] , dp = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { nums [ i ] = in . nextInt ( ) ; } dp [ 1 ] = Math . abs ( nums [ 0 ] - nums [ 1 ] ) ; for ( int i = 2 ; i < n ; i ++ ) { dp [ i ] = Integer . MAX_VALUE ; for ( int j = 1 ; j <= k ; j ++ ) { if ( i - j >= 0 ) { dp [ i ] = Math . min ( dp [ i ] , dp [ i - j ] + Math . abs ( nums [ i ] - nums [ i - j ] ) ) ; } } } System . out . println ( dp [ n - 1 ] ) ; } }
import java . util . Scanner ; /** * Created by paz on 17-3-18. */ public class Kangaroo { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; long sum = 0 ; for ( int i = 1 ; ; i ++ ) { sum += i ; if ( sum >= x ) { System . out . print ( i ) ; break ; } } } }
import java . util . Scanner ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; String [ ] strs = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { strs [ i ] = sc . nextLine ( ) ; } Arrays . sort ( strs ) ; int min ; for ( int j = 0 ; j < k ; j ++ ) { min = min + strs [ j ] ; } System . out . println ( min ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String T = sc . next ( ) ; int Tl = T . length ( ) ; String [ ] Tt = new String [ Tl ] ; int x = 0 ; for ( int i = 0 ; i < Tl ; i ++ ) { Tt [ i ] = T . substring ( 0 , i + 1 ) ; if ( ! S . contains ( Tt [ 0 ] ) ) { x = Tl ; break ; } else if ( ! S . contains ( Tt [ i ] ) ) { if ( lastIndexOf ( Tt [ i ] < Tl ) { x = Tl ; break ; } x = Tl - i ; break ; } else { x = 0 ; } } System . out . println ( x ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; long k = sc . nextLong ( ) ; char ans = '1' ; char t ; for ( int i = 0 ; i < Math . mon ( k , s . length ( ) ) ; i ++ ) { if ( ( t = s . charAt ( i ) ) != '1' ) { ans = t ; break ; } } System . out . println ( ans ) ; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) { BufferedReader input = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int stay = Integer . parseInt ( input . readLine ( ) ) ; int sale = Integer . parseInt ( input . readLine ( ) ) ; int normalCost = Integer . parseInt ( input . readLine ( ) ) ; int saleCost = Integer . parseInt ( input . readLine ( ) ) ; if ( stay > sale ) { System . out . println ( sale * normalCost + ( ( stay - sale ) * saleCost ) ) ; } else { System . out . println ( stay * normalCost ) ; } } }
import java . util . * ; public class maz { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; if ( x >= 30 ) { System . out . print ( " Yes " ) ; } else { System . out . print ( " No " ) ; } } }
import java . io . * ; import java . util . StringTokenizer ; class Main { static final PrintWriter out = new PrintWriter ( System . out ) ; static int [ ] buff ; static int ans = 0 ; static void __mergeSort ( int [ ] a , int left , int right ) { if ( left < right ) { int i ; int mid = ( left + right ) / 2 ; int p = 0 ; int j = 0 ; int k = 0 ; __mergeSort ( a , left , mid ) ; __mergeSort ( a , mid + 1 , right ) ; for ( i = left ; i <= mid ; i ++ ) buff [ p ++ ] = a [ i ] ; while ( i <= right && j < p ) { a [ k ++ ] = ( buff [ j ] <= a [ i ] ) ? buff [ j ++ ] : a [ i ++ ] ; ans ++ ; } while ( j < p ) { a [ k ++ ] = buff [ j ++ ] ; ans ++ ; } } static void mergeSort ( int [ ] a , int n ) { buff = new int [ n ] ; __mergeSort ( a , 0 , n - 1 ) ; buff = null ; } static void getValue ( int [ ] a ) { for ( int i = 0 ; i < a . length - 1 ; i ++ ) out . print ( a [ i ] + " " ) ; out . println ( a [ a . length - 1 ] ) ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String line = " " ; while ( ( line = br . readLine ( ) ) != null && ! line . isEmpty ( ) ) { int n = Integer . parseInt ( line ) ; int [ ] a = new int [ n ] ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = Integer . parseInt ( st . nextToken ( ) ) ; mergeSort ( a , n ) ; getValue ( a ) ; out . println ( ans ) ; } } }
import java . util . ArrayList ; import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; List < Integer > a = new ArrayList ( ) ; while ( true ) { String cmd = scanner . next ( ) ; if ( " insert " . equals ( cmd ) ) { a . add ( scanner . nextInt ( ) ) ; buildMaxHeap ( a ) ; } else if ( " extract " . equals ( cmd ) ) { if ( a . size ( ) < 1 ) { continue ; } System . out . println ( a . get ( 0 ) ) ; a . remove ( 0 ) ; buildMaxHeap ( a ) ; } else { break ; } } } private static void maxHeapify ( List < Integer > a , int i ) { int l = ( i + 1 ) * 2 - 1 ; int r = l + 1 ; int largest = i ; if ( l <= a . size ( ) - 1 && a . get ( l ) > a . get ( i ) ) { largest = l ; } if ( r <= a . size ( ) - 1 && a . get ( r ) > a . get ( largest ) ) { largest = r ; } if ( largest != i ) { int t = a . get ( i ) ; a . set ( i , a . get ( largest ) ) ; a . set ( largest , t ) ; maxHeapify ( a , largest ) ; } } private static void buildMaxHeap ( List < Integer > a ) { for ( int i = a . size ( ) / 2 ; i >= 0 ; i -- ) { maxHeapify ( a , i ) ; } } }
import java . util . Scanner ; public class rectangle { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( a == 0 || b == 0 ) { System . exit ( 0 ) ; } for ( int i = 0 ; i < a ; i ++ ) { for ( int j = 0 ; j < b ; j ++ ) { System . out . print ( " # " ) ; if ( j + 1 == b ) { System . out . print ( " \n " ) ; } } } } }
import java . util . * ; import com . sun . glass . ui . SystemClipboard ; /** * A */ public class Main { void run ( ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] array = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { array [ i ] = sc . nextInt ( ) ; } sc . close ( ) ; int cnt = partition ( array , 0 , n - 1 ) ; System . out . print ( array [ 0 ] ) ; for ( int i = 1 ; i < n ; i ++ ) { if ( i == cnt ) { System . out . print ( " [ " + array [ i ] + " ] " ) ; } else { System . out . print ( " " + array [ i ] ) ; } if ( i == n - 1 ) { System . out . println ( ) ; } } } int partition ( int [ ] A , int p , int r ) { int x = A [ r ] ; int i = p - 1 ; int tmp ; for ( int j = p ; j < r ; j ++ ) { if ( A [ j ] <= x ) { i = i + 1 ; tmp = A [ i ] ; A [ i ] = A [ j ] ; A [ j ] = tmp ; } } tmp = A [ i + 1 ] ; A [ i + 1 ] = A [ r ] ; A [ r ] = tmp ; return i + 1 ; } public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n ; n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 : i < n : i ++ ) { a [ i ] = sc . nextInt ( ) ; } System . out . println ( a ) ; } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] abc ) { Main answer = new Main ( ) ; long solution = answer . solve ( ) ; } long [ ] dp = new long [ 1000000 ] ; private long solve ( ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int E = sc . nextInt ( ) ; Map < Integer , List < Integer > > graph = new HashMap < > ( ) ; for ( int i = 0 ; i < E ; i ++ ) { int u = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; List < Integer > children = map . getOrDefault ( u , new ArrayList < > ( ) ) ; children . add ( v ) ; map . put ( u , children ) ; } Arrays . fill ( dp , - 1 ) ; long bestLength = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { bestLength = Math . max ( bestLength , solve ( graph , i ) ) ; } return bestLength ; } private long solve ( Map < Integer , List < Integer > > graph , int u ) { if ( dp [ u ] != - 1 ) return dp [ u ] ; if ( ! graph . containsKey ( u ) ) { dp [ u ] = 0 ; return dp [ u ] ; } long bestChild = 0 ; for ( int child : graph . get ( u ) ) { bestChild = Math . max ( bestChild , solve ( graph , child ) ) ; } dp [ u ] = 1 + bestChild ; return dp [ u ] ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; Integer [ ] data = new Integer [ N ] ; boolean pair = true ; Set < Integer > setwise = new HashSet < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = i ; j < N ; j ++ ) { int res = gcd ( data [ i ] , data [ j ] ) ; if ( res != 1 ) { pair = false ; } setwise . add ( res ) ; } } if ( pair = true ) { System . out . println ( " pairwise coprime " ) ; } else { int result = setGcd ( setwise ) ; if ( result = - 1 ) { System . out . println ( " setwise coprime " ) ; } else { System . out . println ( " not coprime " ) ; } } } static int setGcd ( Set < Integer > s ) { Set < Integer > setwise = new HashSet < > ( ) ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { for ( int j = i ; j < s . size ( ) ; j ++ ) { setwize . add ( gcd ( s . get ( i ) , s . get ( j ) ) ) ; } } if ( setwise . size ( ) == 1 ) { if ( setwize . contain ( 1 ) ) { return - 1 ; } else { return - 2 ; } } else { return setGcd ( setwise ) ; } } static int gcd ( int a , int b ) { if ( a % b == 0 ) return b ; else return gcd ( b , a % b ) ; } }
import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; long k = scanner . nextLong ( ) ; int [ ] list = new int [ n ] ; HashMap < Integer , Long > bs = new HashMap < Integer , Long > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { scanner . nextLine ( ) ; int a = scanner . nextInt ( ) ; long b = scanner . nextLong ( ) ; list [ i ] = a ; if ( bs . containsKey ( a ) ) { bs . replace ( a , ( bs . get ( a ) + b ) ) ; } else { bs . put ( a , b ) ; } } Arrays . sort ( list ) ; int ans = 0 ; long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( sum >= k ) { break ; } if ( ans == list [ i ] ) { continue ; } else { ans = list [ i ] ; sum += bs . get ( list [ i ] ) ; } } System . out . println ( ans ) ; scanner . close ( ) ; } }
import java . util . Scanner ; public class Main_C { public static void main ( String [ ] args ) { @ SuppressWarnings ( " resource " ) Scanner stdin = new Scanner ( System . in ) ; int a = stdin . nextInt ( ) ; int b = stdin . nextInt ( ) ; int c = stdin . nextInt ( ) ; int min = 0 ; int max = 10000 ; int temp = 0 ; while ( temp > min && temp < max ) { for ( int i = 0 ; i < 3 ; i ++ ) { if ( b < a ) { temp = a ; a = b ; b = temp ; } if ( c < b ) { temp = b ; b = c ; c = temp ; } } } System . out . print ( a + " " + b + " " + c ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 敵の数 int n = sc.nextInt(); // 必殺技の回数 int k = sc.nextInt(); //攻撃回数 float t = 0; // 必殺技で除去できる物は除外 if(k>=n){ System.out.println(t); } else{ //敵の体力 float a[] = new int[n]; for(int i=0;i<n;i++){ a[i] = sc.nextInt(); } Arrays.sort(a); for(int i=0;i<n-k;i++){ t = t+a[i]; } System.out.println(t); } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } private void run ( ) { Scanner scanner = new Scanner ( System . in ) ; long N = scanner . nextLong ( ) ; long K = scanner . nextLong ( ) ; long min = N ; if ( N >= K ) { N %= K ; while ( true ) { long next = Math . abs ( N - K ) ; if ( min > next ) { min = next ; } else { break ; } N = next ; } System . out . println ( N ) ; } else { System . out . println ( N ) ; }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int c = a / b ; int d = a % b ; ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? double e = ( double ) a / ( double ) b ; System . out . println ( c + " " + d + " " + e ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; char [ ] c1 = s . toCharArray ( ) ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { int r = c1 [ i ] - 'A' ; r = ( r + n ) % 26 ; c1 [ i ] = 'A' + r ; } System . out . println ( new String ( c1 ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int check ( int i , int j , int arr [ ] , int dp [ ] [ ] ) { if ( i > j ) return 0 ; if ( i == j ) return arr [ i ] ; if ( j == i + 1 ) return Math . max ( arr [ i ] , arr [ j ] ) ; if ( dp [ i ] [ j ] != - 1 ) return dp [ i ] [ j ] ; int k1 = arr [ i ] + Math . min ( check ( i + 2 , j , arr , dp ) , check ( i + 1 , j - 1 , arr , dp ) ) ; int k2 = arr [ j ] + Math . min ( check ( i + 1 , j - 1 , arr , dp ) , check ( i , j - 2 , arr , dp ) ) ; dp [ i ] [ j ] = Math . max ( k1 , k2 ) ; //System.out.println(k1+" "+k2); return dp[i][j]; } public static void main (String[] args) { Scanner s = new Scanner(System.in); int t = s.nextInt(); int n = s.nextInt(); // int k =s.nextInt(); int turn =0; int arr[] = new int[n]; int dp[][] = new int[n][n]; for (int brr[]:dp) { Arrays.fill(brr,-1); } for (int i =0; i<n ;i++) { arr[i] = s.nextInt(); } System.out.println(check(0,n-1,arr,dp)); } }
import java . util . List ; class Main { public static void main ( String [ ] args ) { Input stdIn = new Input ( ) ; int n = stdIn . getValue ( ) ; List < Integer > values = stdIn . getLine ( ) ; bubbleSort ( values , n ) ; stdIn . close ( ) ; } public static void bubbleSort ( List < Integer > values , int n ) { int count = 0 ; for ( int i = n ; i > 1 ; i -- ) { for ( int j = 0 ; j < i - 1 ; j ++ ) { if ( values . get ( j ) > values . get ( j + 1 ) ) { values . add ( j , values . get ( j + 1 ) ) ; values . remove ( j + 2 ) ; count ++ ; } } } StringBuilder output = new StringBuilder ( ) ; for ( int k = 0 ; k < values . size ( ) ; k ++ ) { output . append ( values . get ( k ) + " " ) ; } System . out . println ( output . delete ( output . length ( ) - 1 , output . length ( ) ) ) ; System . out . println ( count ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int H = sc . nextInt ( ) ; int M = sc . nextInt ( ) ; double kakudoTansin = 30 * H + 0.5 * M ; double kakudoTyousin = 6 * M ; double kakudo = Math . abs ( kakudoTansin - kakudoTyousin ) ; if ( kakudo > 180 ) { kakudo -= 180 ; } double cnizyou = A * A + B * B - 2 * A * B * Math . cos ( kakudo * ( Math . pi / 180 ) ) ; double c = Math . sqrt ( cnizyou ) ; System . out . println ( c ) ; } }
import java . util . * ; class circlepond { public static void main ( String arg [ ] ) { Scanner in = new Scanner ( System . in ) ; int r = in . nextInt ( ) ; System . out . println ( 2 * 2.14 * r ) ; } }
import java . util . * ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } int sum = 0 ; int q = sc . nextInt ( ) ; int [ ] [ ] b = new int [ q ] [ 2 ] ; for ( int i = 0 ; i < q ; i ++ ) { b [ i ] [ 0 ] = sc . nextInt ( ) ; b [ i ] [ 1 ] = sc . nextInt ( ) ; sum = 0 ; int x = b [ i ] [ 0 ] ; int y = b [ i ] [ 1 ] ; for ( int j = 0 ; j < n ; j ++ ) { if ( a [ j ] == x ) { a [ j ] = y ; } sum += a [ j ] ; } System . out . println ( sum ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; double m = 0.0 , a = 0.0 ; int n ; n = sc . nextInt ( ) ; double [ ] s = new double [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc . nextInt ( ) ; m += s [ i ] ; } m /= n ; for ( int i = 0 ; i < n ; i ++ ) { a += ( s [ i ] - m ) * ( s [ i ] - m ) ; } a /= ( double ) n ; System . out . printf ( " %.8f \n " , Math . sqrt ( a_2 ) ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x , y ; x = sc . nextInt ( ) ; y = sc . nextInt ( ) ; if ( x % 2 == 1 ) { if ( x + 1 / 2 >= y ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } else if { if ( x / 2 >= y ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } else { if ( y == 1 ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int a [ ] = new int [ N ] ; int i , j = 0 ; for ( i = 0 ; i < N ; ++ i ) { a [ i ] = sc . nextInt ( ) ; } outside : while ( true ) { for ( i = 0 ; i < N ; ++ i ) { if ( a [ i ] % 2 == 0 ) { a [ i ] = a [ i ] / 2 ; } else { break outside ; } } ++ j ; } System . out . println ( j ) ; }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String c = sc . next ( ) ; char a = c . charAt ( 0 ) ; if ( c == 'a' || c == 'i' || c == 'u' || c == 'e' || c == 'o' ) System . out . println ( " vowel " ) ; else System . out . println ( " consonant " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner scn = new Scanner ( System . in ) ; int n = scn . nextInt ( ) ; char [ ] a = new char [ n ] ; for ( int i = 0 ; i < a . length ; ++ i ) { a [ i ] = scn . next ( ) ; } int cr = 0 ; int cb = 0 ; for ( int i = 0 ; i < a . length ; ++ i ) { if ( a [ i ] == " R " ) { cr = cr + 1 ; } if ( a [ i ] == " B " ) { cb = cb + 1 ; } } if ( cr > cb ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { try { Scanner scan = new Scanner ( System . in ) ; int n , i = 0 , j ; n = Integer . parseInt ( scan . next ( ) ) ; int x [ ] = new int [ n ] ; ArrayList < Integer > y = new ArrayList < Integer > ( ) ; while ( i < n ) { x [ i ] = Integer . parseInt ( scan . next ( ) ) ; y . add ( x [ i ] ) ; i = ++ i ; } Collections . sort ( y ) ; i = 0 ; while ( i < n ) { if ( x [ i ] = < y . get ( ( n / 2 ) - 1 ) ) ) { System . out . println ( y . get ( n / 2 ) ) ; } else { System . out . println ( y . get ( ( n / 2 ) - 1 ) ) ; } i = ++ i ; } } catch ( Exception e ) { System . out . println ( " NG " ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; int count = 0 ; sc . close ( ) ; While ( ! ( s . equals ( t ) ) ) { for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == t . charAt ( i ) ) count ++ ; } } System . out . println ( count ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; class Codechef { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int l = scan . nextInt ( ) ; int r = scan . nextInt ( ) ; int d = scan . nextInt ( ) ; int count = 0 ; for ( int i = l ; i <= r ; i ++ ) { if ( i % d == 0 ) count ++ ; } System . out . println ( count ) ; } }
import java . util . * ; public class main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . next ( ) ; int a = sc . next ( ) ; if ( x < a ) { System . out . println ( " 0 " ) ; } else { System . out . println ( " 10 " ) ; } } }
import java . util . Scanner ; public class D { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long copyn = n ; long x = ( long ) Math . sqrt ( n ) ; long copyx = x ; long ans = 0 ; for ( int i = 2 ; i <= x ; i ++ ) { int count = 1 ; while ( n % ( ( Math . pow ( i , count ) ) ) == 0 ) { n = ( long ) ( n / Math . pow ( i , count ) ) ; count ++ ; ans ++ ; } } if ( copyn == 1 ) { System . out . println ( 0 ) ; } else if ( n > x ) { System . out . println ( 1 + ans ) ; } else { System . out . println ( ans ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int h = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; if ( h == 0 && w == 0 ) break ; else { for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { if ( ( i + j ) % 2 == 0 ) System . out . print ( " # " ) ; else System . out . print ( " . " ) ; } System . out . println ( ) ; } System . out . println ( ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; ; int i , tmp , pre ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; String [ ] a = new String [ n ] ; String [ ] b = new String [ m ] ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = sc . next ( ) ; } for ( i = 0 ; i < m ; i ++ ) { b [ i ] = sc . next ( ) ; } for ( i = 0 ; i < n - m + 1 ; i ++ ) { for ( int j = 0 ; j < n - m + 1 ; j ++ ) { if ( j == 0 ) tmp = 0 ; else tmp = pre ; tmp = a [ i ] . indexOf ( b [ i ] , tmp ) ; if ( tmp == - 1 ) break ; pre = tmp ; if ( Main . check ( m , tmp , i , a , b ) ) { System . out . println ( " Yes " ) ; return ; } } } System . out . println ( " No " ) ; } public static boolean check ( int m , int col , int row , String [ ] a , String [ ] b ) { for ( int i = 1 ; i < m ; i ++ ) { if ( a [ row + i ] . indexOf ( b [ i ] , col ) != col ) return false ; } return true ; } }
import java . util . Scanner ; public class p1042 { public p1042 ( ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { String str = sc . nextLine ( ) ; if ( str . equals ( " END OF INPUT " ) ) { break ; } str . replaceAll ( " " , " sasami " ) ; System . out . println ( str ) ; String [ ] s = str . split ( " " ) ; for ( String st : s ) { if ( st . equals ( " sasami " ) ) { System . out . print ( " 0 " ) ; } else { System . out . print ( st . length ( ) ) ; } } System . out . println ( ) ; } } public static void main ( String [ ] args ) { p1042 test = new p1042 ( ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; if ( s . equals ( " ABC " ) ) { System . out . println ( " ARC " ) ; } else System . out . println ( " ABC " ) ; }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a ; String op ; int b ; for ( ; ; ) { a = scan . nextInt ( ) ; op = scan . nextLine ( ) ; b = scan . nextInt ( ) ; if ( op == '+' ) { a += b ; } else if ( op == '-' ) { a -= b ; } else if ( op == '*' ) { a *= b ; } else if ( op == '/' ) { a /= b ; } else if ( op == '?' ) { break ; } System . out . println ( a ) ; } } }
import java . * class Main { public static void main ( String args [ ] ) { Scanner scanner = new Scanner ( System . in ) ; int input1 = scanner . nextInt ( ) ; int input2 = scanner . nextInt ( ) ; int num1 = input1 * input2 ; System . out . println ( num1 ) ; } ; } ;
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; InputReader in = new InputReader ( System . in ) ; int n = in . readInt ( ) ; long arr [ ] = new long [ 87 ] ; arr [ 0 ] = 2 ; arr [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { arr [ i ] = arr [ i - 2 ] + arr [ i - 1 ] ; } System . out . println ( arr [ n ] ) ; } }
import java . util . Scanner ; import java . math . Bigdecimal ; import . java . math . MathContext ; class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; // double c= (double)a/(double)b; System.out.println(a+b+floatingDiv(a,b)); } private static Bigdecimal floata(int a,int b){ Bigdecimal num1 = new Bigdecimal((double)a); Bigdecimal num2 = new Bigdecimal((double)b); return num1.divide(num2,Mathcontext.DECIMAL32); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double r nextDouble ( ) ; double pi = Math . PI ; double area = r * r * pi ; double length = 2 * r * pi ; System . out . println ( area + " " + length ) ; } }
import java . util . * ; class Main { public static void main ( string [ ] args ) { Scanner sc = New Scanner ( System . In ) ; int num = sc . nextInt ( ) ; System . out . println ( num * num * num ) ; } }
import java . util . Scanner ; public class Main { static class Node { Node prev , next ; int value ; } public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; nil . next = nil ; nil . prev = nil ; for ( int i = 0 ; i < n ; i ++ ) { String s = scan . next ( ) ; if ( s . equals ( " delete " ) ) { int x = scan . nextInt ( ) ; // delete(x); l.remove(x); } else if (s.equals("insert")) { int x = scan.nextInt(); // insert(x); l.add(0,x); } else if (s.equals("deleteFirst")) { // deleteFirst(); l.remove(0); } else if (s.equals("deleteLast")) { // deleteLast(); l.remove(l.size()); } } Node nn = nil.next; while (nn != nil) { System.out.print(nn.value); if (nn. next != nil) { System.out.print(" "); } nn = nn.next; } System.out.println(); } static void insert(int x) { Node n = new Node(); Node next = nil.next; nil.next = n; n.next = next; n.prev = nil; next.prev = n; n.value = x; } static void delete(int x) { Node n = nil.next; while (n != nil && n.value != x) { n = n.next; } if (n == nil) { return; } n.prev.next = n.next; n.next.prev = n.prev; } static void deleteFirst() { Node next = nil.next.next; nil.next = next; next.prev = nil; } static void deleteLast() { Node n = nil.next; while (n.next != nil && n != nil) { n = n.next; } Node prev = n.prev; prev.next = nil; nil.prev = prev; } static Node nil = new Node(); }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class culcurator { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; while ( true ) { String data [ ] = br . readLine ( ) . split ( " " ) ; int a = Integer . parseInt ( data [ 0 ] ) ; int b = Integer . parseInt ( data [ 2 ] ) ; String s = ( data [ 1 ] ) ; if ( s . equals ( " ? " ) ) break ; else if ( s . equals ( " + " ) ) { System . out . println ( a + b ) ; } else if ( s . equals ( " - " ) ) { System . out . println ( a - b ) ; } else if ( s . equals ( " * " ) ) { System . out . println ( a * b ) ; } else if ( s . equals ( " / " ) ) { System . out . println ( a / b ) ; } } } }
import java . util . Scanner ; public void Main ( ) { int N = 0 ; int Max = 0 ; Scanner s = new Scanner ( System . in ) ; int all = 0 ; int save = 0 ; N = s . nextInt ( ) ; for ( int i = 0 ; i < N ; i ++ ) { save = s . nextInt ( ) ; all += save if ( Max < save ) { Max = save ; } } all -= Max ; all += Max / 2 ; }
import java . util . ArrayDeque ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . Scanner ; public class Main implements Runnable { @ Override public void run ( ) { new Main ( ) . solver ( ) ; } // Template public static void main(String[] args) { new Thread(null, new scc(), "", 16 * 1024 * 1024).start(); } void solver() { Scanner sc = new Scanner(System.in); int V = sc.nextInt(); int E = sc.nextInt(); @SuppressWarnings("unchecked") ArrayList<Integer>[] e = new ArrayList[V]; for (int i = 0; i < V; i++) e[i] = new ArrayList<>(); for (int i = 0; i < E; i++) { int s = sc.nextInt(); int t = sc.nextInt(); e[s].add(t); } int Q = sc.nextInt(); int[] scc = stronglyConnectedComponents(e); for (int i = 0; i < Q; i++) { int u = sc.nextInt(); int v = sc.nextInt(); if (scc[u]==scc[v]) { System.out.println(1); } else { System.out.println(0); } } } int[] dfsnum; int[] low; ArrayDeque<Integer> S = new ArrayDeque<>(); ArrayList<Integer> T = new ArrayList<>(); int N = 0; boolean[] used; int[] ret; int[] stronglyConnectedComponents(ArrayList<Integer> e[]) { int n = e.length; dfsnum = new int[n]; low = new int[n]; used = new boolean[n]; ret = new int[n]; for (int i = 0; i < n; i++) { if (used[i]) continue; if (dfsnum[i] == 0) { dfs(e, i); } } return ret; } int NOW = 0; void dfs(ArrayList<Integer>[] e, int i) { S.addFirst(i); dfsnum[i] = N; N++; low[i] = dfsnum[i]; for (int j : e[i]) { if (used[j]) continue; if (!T.contains(j)) { T.add(j); dfs(e, j); low[i] = Math.min(low[i], low[j]); } else { low[i] = Math.min(dfsnum[j], low[i]); } } if (low[i] == dfsnum[i]) { int v; do { v = S.removeFirst(); ret[v] = NOW; used[v] = true; } while (v != i); NOW++; } return; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int s1 = sc . nextInt ( ) ; int s3 = sc . nextInt ( ) ; if ( s1 = s3 ) System . out . println ( " Draw " ) ; else if ( s1 == 1 ) System . out . println ( " Alice " ) ; else if ( s3 == 1 ) System . out . println ( " Bob " ) ; else if ( s1 > s3 ) System . out . println ( " Alice " ) ; else if ( s3 < s1 ) System . out . println ( " Bob " ) ; } }
import java . io . * ; public class Main { public static void main ( String [ ] args ) throws Exception { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = reader . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; ++ i ) { a [ i ] = reader . nextInt ( ) ; } } private static int solve ( int [ ] a ) { return 0 ; } }
import java . util . Scanner ; /** * Created with IntelliJ IDEA. * User: ngupta * Date: 4/5/2020 AD * Time: 23:41 */ public class _166A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; System . out . println ( " ABC " . equals ( sc . next ( ) ) ? " ARC " : " ABC " ) ; } }
import org . omg . PortableInterceptor . INACTIVE ; import java . math . * ; import java . io . * ; import java . util . * ; import java . lang . * ; //solution classes here public class Main { //main solution here static Scanner sc = new Scanner(System.in); static PrintWriter out = new PrintWriter(System.out); static long mod = (long)1e9+7; static long MOD = 998244353; static long INF = (long)1e18; static int inf = (int)1e9; //static ArrayList<Integer> list[] = new ArrayList[(int)3e3+1]; //static int color[] = new int[(int)2e6+1]; //static int visit[] = new int[(int)1e4+1]; //static int level[] = new int[(int)1e4+1]; //static Deque<Integer> q = new ArrayDeque<>(); public static void main(String[] args) throws IOException { int n; n=sc.nextInt(); BigInteger ans = new BigInteger("1"); for(int i=0;i<n;i++) { String a; a = sc.next(); BigInteger x = new BigInteger(a); ans = ans.multiply(x); } if(ans.compareTo(new BigInteger("1000000000000000000"))>0) { out.println("-1"); } else { out.println(ans); } out.flush(); out.close(); } //solution functions here //---templates--- public static boolean ispal(char[] c) { int n = c.length; for(int i=0;i<n/2;i++) { if(c[i]!=c[n-i-1]) return false; } return true; } static long pow(long base, long exp) { long t = 1L; while (exp > 0) { if (exp % 2 != 0) t = (t * base) % mod; base = (base * base) % mod; exp /= 2; } return t % mod; } public static void reverse (long[] array) { int len = array.length; for(int i=0;i<len/2;i++) { array[i]^=array[len-1-i]; array[len-i-1]^=array[i]; array[i]^=array[len-i-1]; } } public static int low_bound(long[] array, long value) { int len = array.length; int lo = 0; int hi = len-1; int ans = -1; while(lo<=hi) { int mid = lo+(hi-lo)/2; if(array[mid]<=value) { lo=mid+1; ans=mid; } else hi=mid-1; } return ans; } public static int up_bound(long[] array, long value) { int len = array.length; int lo = 0; int hi = len-1; int ans = -1; while(lo<=hi) { int mid = lo+(hi-lo)/2; if(array[mid]>=value) { hi=mid-1; ans=mid; } else lo=mid+1; } return ans; } static class Scanner { StringTokenizer st; BufferedReader br; public Scanner(InputStream s) { br = new BufferedReader(new InputStreamReader(s)); } public Scanner(FileReader fileReader) { br = new BufferedReader(fileReader); } public String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } public int nextInt() throws IOException { return Integer.parseInt(next()); } public long nextLong() throws IOException { return Long.parseLong(next()); } public double nextDouble() throws IOException { return Double.parseDouble(next()); } public String nextLine() throws IOException { return br.readLine(); } public boolean ready() throws IOException { return br.ready(); } } } /* ***************************************************************************************************************************** * I'M NOT IN DANGER, I'M THE DANGER!!! * ***************************************************************************************************************************** */
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] token = br . readLine ( ) . split ( " " ) ; int r = Integer . parseInt ( token [ 0 ] ) ; int c = Integer . parseInt ( token [ 1 ] ) ; int [ ] Columnsum = new int [ c ] ; int totalsum = 0 ; Columsum [ c ] = { 0 } ; for ( int i = 0 ; i < r ; i ++ ) { String [ ] token2 = br . readLine ( ) . split ( " " ) ; int sum = 0 ; for ( int j = 0 ; j < c ; j ++ ) { System . out . print ( token2 [ j ] + " " ) ; sum += Integer . parseInt ( token2 [ j ] ) ; } totalsum += sum ; System . out . println ( sum ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; /** * @author penguin_410 * Date: 2014/03/06 */ public class Main { public static void main ( String ... args ) throws IOException { final BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; final StringBuilder sb = new StringBuilder ( ) ; while ( true ) { final String line = br . readLine ( ) ; final int index = line . indexOf ( " " ) ; final int x = Integer . parseInt ( line . substring ( 0 , index ) ) ) ; final int y = Integer . parseInt ( line . substring ( index + 1 ) ) ; if ( x == 0 && y == 0 ) break ; sb . append ( x < y ? x + " " + y : y + " " + x ) . append ( " \n " ) ; } System . out . print ( sb ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int A = scan . nextInt ( ) ; int V = scan . nextInt ( ) ; int B = scan . nextInt ( ) ; int W = scan . nextInt ( ) ; int T = scan . nextInt ( ) ; if ( V > W ) { if ( sp * T >= def ) { System . out . println ( " YES " ) ; } } else { System . out . println ( " NO " ) ; } } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . util . Arrays ; import java . util . List ; import java . util . ArrayList ; import java . util . Collections ; import java . util . Comparator ; public class Main { static StringBuilder sb ; public static void main ( String [ ] args ) { try { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; List < String > lines = new ArrayList < String > ( ) ; for ( String line = br . readLine ( ) ; line != null ; line = br . readLine ( ) ) { lines . add ( line ) ; } br . close ( ) ; //lines.add("3 4"); //lines.add("1 2 0 1"); //lines.add("0 3 0 1"); //lines.add("4 1 1 0"); //lines.add("1"); //lines.add("2"); //lines.add("3"); //lines.add("0"); for (int i = 0; i < lines.size(); i++) { Integer m = Integer.parseInt(lines.get(i).split(" ")[0]); Integer f = Integer.parseInt(lines.get(i).split(" ")[1]); Integer r = Integer.parseInt(lines.get(i).split(" ")[2]); if (m == -1 || f == -1) { System.out.println("F"); } else if (m+f => 80) { System.out.println("A"); } else if (65 =< m+f && m+f < 80) { System.out.println("B"); } else if (50 =< m+f && m+f < 65) { System.out.println("C"); } else if (30 =< m+f && m+f < 50) { if (r != -1 && r => 50) { System.out.println("C"); } else { System.out.println("D"); } } else { System.out.println("F"); } } System.exit(0); } catch (Exception e) { System.out.println(e.getMessage()); System.out.println(Arrays.toString(e.getStackTrace())); System.exit(0); } } }
import java . util . Scanner ; public class PrintaChessboard { public static void main ( String [ ] args ) { // ?¨??????\??????????????????????????????????????? Scanner sc = new Scanner(System.in); // ????????????????????????????????´??°?????¨???????????????????????? while (true) { int H = sc.nextInt(); int W= sc.nextInt(); if (H == 0 && W == 0) { break; } for(int i = 1; i <= H; i++){ for(int j = 1; j <= W; j++){ if(i % 2 == 1){ if(j % 2 == 1){ System.out.printf("#"); }else{ System.out.printf("."); } }else{ if(j % 2 == 1){ System.out.printf("."); }else{ System.out.printf("#"); } } } System.out.println(""); } System.out.println(""); // ???????????????(for?????????for)???????????????H x W?????? # ?????¨????????????! } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; StringBuilder sb = new StringBuilder ( ) ; sb . append ( " " ) ; for ( int i = 1 ; i <= N ; i ++ ) { int x = i ; if ( i % 3 == 0 ) { sb . append ( i + " " ) ; } else { while ( x >= 1 ) { if ( x % 10 == 3 ) { sb . append ( i + " " ) ; break ; } x /= 10 ; } } } System . out . println ( sb ) ; } } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; StringBuilder sb = new StringBuilder ( ) ; sb . append ( " " ) ; for ( int i = 1 ; i <= N ; i ++ ) { int x = i ; if ( i % 3 == 0 ) { sb . append ( i + " " ) ; } else { while ( x >= 1 ) { if ( x % 10 == 3 ) { sb . append ( i + " " ) ; break ; } x /= 10 ; } } } System . out . println ( sb ) ; } }
import java . util . Scanner ; public class at { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int a ; int x = 0 ; int [ ] b = new int [ N ] ; //i番目の数の入力を行う for(int i=0;i<=N-1;i++){ a=sc.nextInt(); b[i]=a; } int l=0; for(int j=0;j<=N-1;j++){ for(int k=j+1;k<=N-1;k++){ if(b[j]==b[k]){ l=l+1; for(int f=k+1;f<=N-1;f++){ if(b[j]==b[f]){ x=x+1; } } l=l-x; } } if(j==N-1){ System.out.println(N-l); } } } }
import java . util . Scanner ; public class Main { static Scanner scanner ; public static void main ( String [ ] args ) { scanner = new Scanner ( System . in ) ; int n = gi ( ) ; int [ ] A = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { A [ i ] = gi ( ) ; } Arrays . parallelSort ( A ) ; System . out . print ( A [ A . length - 1 ] - A [ 0 ] ) ; // if (t.equals("Sunny")) { // System.out.print("Cloudy"); // }else if(t.equals("Cloudy")){ // System.out.print("Rainy"); // } else { // System.out.print("Sunny"); // } } // 文字列として入力を取得 public static String gs() { return scanner.next(); } // intとして入力を取得 public static int gi() { return Integer.parseInt(scanner.next()); } // longとして入力を取得 public static long gl() { return Long.parseLong(scanner.next()); } // doubleとして入力を取得 public static double gd() { return Double.parseDouble(scanner.next()); } }
import java . util . Scanner ; public class Rectangle { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) { break ; } for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { System . out . print ( " # " ) ; } System . out . print ( " \n " ) ; } } System . out . print ( " \n " ) ; } }
import java . util . * ; public class frog1 { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = s . nextInt ( ) ; int dp [ ] = new int [ n ] ; for ( int i = 1 ; i < n ; i ++ ) dp [ i ] = Integer . MAX_VALUE ; // dp[0] = 0; for(int i=1;i<n;i++){ dp[i] = Math.min(dp[i],dp[i-1]+Math.abs(arr[i]-arr[i-1])); if(i<n-1){ dp[i+1] = Math.min(dp[i+1],dp[i-1]+Math.abs(arr[i+1]-arr[i-1])); } } System.out.println(dp[n-1]); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int A = scanner . nextInt ( ) ; int B = scanner . nextInt ( ) ; int K = scanner . nextInt ( ) ; for ( int i = 0 ; i <= K - 1 ; i ++ ) { if ( A >= 1 ) { A = A - 1 ; } else if ( B >= 1 ) { B = B - 1 ; } } System . out . print ( A , B ) ; } }
import java . util . * ; public class Sol { public static void main ( String args [ ] ) { Scanner d = new Scanner ( System . in ) ; int n , r , i ; n = d . nextInt ( ) ; r = d . nextInt ( ) ; if ( n < 10 ) i = r + 100 * ( 10 - n ) ; else i = r ; System . out . println ( i ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int N = scanner . nextInt ( ) ; int [ ] t = new int [ 110000 ] ; int [ ] x = new int [ 110000 ] ; int [ ] y = new int [ 110000 ] ; t [ 0 ] = 0 ; x [ 0 ] = 0 ; y [ 0 ] = 0 ; for ( int i = 0 ; i < N ; i ++ ) { t [ i + 1 ] = scanner . nextInt ( ) ; x [ i + 1 ] = scanner . nextInt ( ) ; y [ i + 1 ] = scanner . nextInt ( ) ; } boolean result = true ; for ( int i = 0 ; i < N ; i ++ ) { int dt = t [ i + 1 ] - t [ i ] ; int dist = Math . abs ( x [ i + 1 ] - x [ i ] ) + Math . abs ( y [ i + 1 ] - y [ i ] ) ; if ( dt < dist ) { result = false ; break ; } if ( dt % 2 != dist % 2 ) { result = false ; break ; } } if ( result ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( Sytem . in ) ; int k = sc . nextInt ( ) ; int s = sc . nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i <= k ; i ++ ) { for ( int j = 0 ; j <= k ; j ++ ) { int tmp = s - i - j ; if ( 0 <= tmp && tmp <= k ) ans ++ ; } } System . out . println ( ans ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String readStr ; Integer [ ] primesArr ; ArrayList < Integer > primes = new ArrayList < > ( ) ; primes . add ( 2 ) ; primes . add ( 3 ) ; primes . add ( 5 ) ; primes . add ( 7 ) ; for ( int i = 2 ; i < 999999 ; i ++ ) { if ( ! ( i % 2 == 0 || i % 3 == 0 || i % 5 == 0 || i % 7 == 0 ) ) primes . add ( i ) ; } primesArr = primes . toArray ( new Integer [ 0 ] ) ; while ( ( readStr = reader . readLine ( ) ) != null ) { int readInt = Integer . parseInt ( readStr ) ; int count = 0 ; for ( Integer prime : primesArr ) if ( prime <= readInt ) { count ++ ; } else break ; System . out . println ( count ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner as = new Scanner ( System . in ) ; int a ; int b ; int d , r ; float f ; a = as . nextInt ( ) ; b = as . nextInt ( ) ; d = a / b ; r = a % b ; float fa = ( float ) a float fb = ( float ) b f = fa / fb ; System . out . println ( d + " " + r + " " + f ) ; } }
import java . util . Scanner ; public class main { public static void main ( String args [ ] ) { int n ; int cnt = 0 ; Scanner sc = new Scanner ( System . in ) ; while ( true ) { n = sc . nextInt ( ) ; if ( n == 0 ) break ; double s = 0.0 ; int [ ] [ ] ver = new int [ n ] [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { ver [ i ] [ 0 ] = sc . nextInt ( ) ; ver [ i ] [ 1 ] = sc . nextInt ( ) ; if ( i > 1 ) { s += cal ( ver [ i ] , ver [ i - 1 ] , ver [ 0 ] ) ; } } cnt ++ ; System . out . println ( cnt + " " + Math . abs ( s / 2 ) ) ; } } private static double cal ( int [ ] a , int [ ] b , int [ ] o ) { a [ 0 ] = a [ 0 ] - o [ 0 ] ; a [ 1 ] = a [ 1 ] - o [ 1 ] ; b [ 0 ] = b [ 0 ] - o [ 0 ] ; b [ 1 ] = b [ 1 ] - o [ 1 ] ; return ( a [ 0 ] * b [ 1 ] - a [ 1 ] * b [ 0 ] ) ; } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ; public class C_ARC084_SnukeFestival { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; List < Integer > a = new ArrayList < > ( ) ; List < Integer > b = new ArrayList < > ( ) ; List < Integer > c = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { a . add ( sc . nextInt ( ) ) ; } Collections . sort ( a ) ; for ( int i = 0 ; i < N ; i ++ ) { b . add ( sc . nextInt ( ) ) ; } Collections . sort ( b ) ; for ( int i = 0 ; i < N ; i ++ ) { c . add ( sc . nextInt ( ) ) ; } Collections . sort ( c ) ; int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { int aless = 0 ; int cmore = 0 ; int bi = b . get ( i ) ; for ( int j = 0 ; j <= N ; j ++ ) { if ( j == N || a . get ( j ) >= bi ) { aless = j ; break ; } } for ( int j = c . size ( ) - 1 ; j >= - 1 ; j -- ) { if ( j == - 1 || bi >= c . get ( j ) ) { cmore = c . size ( ) - j - 1 ; break ; } } ans += aless * cmore ; } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class ITP1_5_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; StringBuilder sb = new StringBuilder ( " " ) ; int H = sc . nextInt ( ) , W = sc . nextInt ( ) ; while ( H != 0 || W != 0 ) { for ( int a = 1 ; a <= H ; a ++ ) { for ( int b = 1 ; b <= W ; b ++ ) { if ( ( a % 2 == 1 && b % 2 == 1 ) || ( a % 2 == 0 && b % 2 == 0 ) ) { sb . append ( " # " ) ; } else if ( ( a % 2 == 0 && b % 2 == 1 ) || ( a % 2 == 1 && b % 2 == 0 ) ) { sb . append ( " . " ) ; } } sb . append ( " \n " ) ; } sb . append ( " \n " ) ; H = sc . nextInt ( ) ; W = sc . nextInt ( ) ; } System . out . println ( sb ) ; } }
import java . util . Scanner ; public class Main { public static int N ; public static int M ; public static int [ ] p ; public static int [ ] rank ; public static int [ ] w ; public static boolean same ( int x , int y ) { return findSet ( x ) == findSet ( y ) ; } public static void unite ( int a , int b , int w ) { int i = findSet ( a ) ; int j = findSet ( b ) ; w -= w [ b ] - w [ a ] ; if ( i == j ) { return ; } if ( rank [ i ] > rank [ j ] ) { p [ j ] = p [ i ] ; w [ j ] = w ; } else { p [ i ] = p [ j ] ; w [ x ] = - w ; if ( rank [ i ] == rank [ j ] ) { rank [ j ] ++ ; } } } public static int findSet ( int i ) { if ( p [ i ] == i ) { return i ; } else { return p [ i ] = findSet ( p [ i ] ) ; } } public static void DisjointSet ( ) { p = new int [ N ] ; rank = new int [ N ] ; w = new int [ N ] for ( int i = 0 ; i < N ; i ++ ) { p [ i ] = i ; rank [ i ] = 0 ; w [ i ] = 0 ; } } public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; while ( true ) { N = scanner . nextInt ( ) ; M = scanner . nextInt ( ) ; if ( N == 0 & M == 0 ) break ; DisjointSet ( ) ; Solve ( ) ; } } public static Solve ( ) { for ( int i = 0 ; i < M ; i ++ ) { if ( scanner . next ( ) . equals ( " ! " ) ) { int a = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ; int w = scanner . nextInt ( ) ; a -- ; b -- ; unite ( a , b , w ) ; } else { if ( ! same ( a , b ) ) { System . out . println ( " UNKNOWN " ) ; } else { System . out . println ( w [ b ] - w [ a ] ) ; } } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String S = scanner . next ( ) ; if ( S == " Sunny " ) { System . out . println ( " Cloudy " ) ; if ( S == " Cloudy " ) { System . out . println ( " Rainy " ) ; if ( S == " Rainy " ) { System . out . println ( " Sunny " ) ; } } } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; System . out . println ( ( 6 - A - B ) ; } }
import java . util . Scanner ; public class MainC { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; char [ ] s = sc . next ( ) . toCharArray ( ) ; int ans = 0 ; for ( int i = 1 ; i < s . length ; i ++ ) { if ( s [ i ] != s [ i - 1 ] ) ans ++ ; } System . out . println ( ans ) ; sc . close ( ) ; } }
import java . util . * ; public class Palace { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int T = sc . nextInt ( ) ; int A = sc . nextInt ( ) ; int [ ] H = new int [ N ] ; double [ ] temp = new double [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { H [ i ] = sc . nextInt ( ) ; temp [ i ] = 0 ; } for ( int i = 0 ; i < N ; i ++ ) { temp [ i ] = T - H [ i ] * 0.006 - A ; } int min_index = 0 ; double tmp = temp [ 0 ] ; for ( int i = 0 ; i < N ; i ++ ) { if ( tmp < temp [ i ] ) { tmp = temp [ i ] ; min_index = i ; } } System . out . println ( min_index + 1 ) ; } }
import javax . swing . plaf . synth . SynthLookAndFeel ; import java . io . * ; import java . util . Arrays ; import java . util . Scanner ; import java . util . StringTokenizer ; public class CP { static Scanner sc = new Scanner ( System . in ) ; static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; } String next ( ) { while ( st == null || ! st . hasMoreElements ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } return st . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double . parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = " " ; try { str = br . readLine ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return str ; } } public static int lowerBound ( Integer [ ] array , int length , int value ) { int l = 0 ; int r = length ; while ( l < r ) { int mid = ( l + r ) / 2 ; if ( value < array [ mid ] ) { r = mid ; } else { l = mid + 1 ; } } return l ; } public static long gcd ( long a , long b ) { if ( b == 0 ) return a ; else return gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { // int T = sc.nextInt();while (T--!=0) { solve(); } } public static void solve(){ /////////////////////////////////////////////////////////////////////////////////////////// int n = sc.nextInt(); int k = sc.nextInt(); int [] arr = new int [n]; for (int i = 0; i <n ; i++) { arr[i] =sc.nextInt(); } Arrays.sort(arr); long sum=0; for (int i = 0; i <k ; i++) { sum+=arr[i]; } System.out.println(sum); //////////////////////////////////////////////////////////////////////////////////////////// } }
import java . util . Scanner ; /** * Flag */ public class P0368 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int W , H ; char c ; W = sc . nextInt ( ) ; H = sc . nextInt ( ) ; c = sc . next ( ) . charAt ( 0 ) ; for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( ( i == 0 || i == H - 1 ) && ( j == 0 || j == W - 1 ) ) { System . out . print ( '+' ) ; } else if ( i == 0 || i == H - 1 ) { System . out . print ( '-' ) ; } else if ( j == 0 || j == W - 1 ) { System . out . print ( '|' ) ; } else if ( i == H / 2 && j == W / 2 ) { System . out . print ( c ) ; } else { System . out . print ( '.' ) ; } } System . out . println ( ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a , b ; a = sc . nextInt ( ) ; b = sc . nextInt ( ) ; if ( b == 0 ) { b = 1 } System . out . println ( a / b + " " + a % b + " " + ( double ) a / b ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int CardA = Integer . parseInt ( sc . next ( ) ) ; int CardB = Integer . parseInt ( sc . next ( ) ) ; String s = " " ; if ( CardA == 1 ) { CardA = 14 " ; } if(CardB == 1){ CardB = 14 " ; } if ( CardA > CardB ) { s = " Alice " ; } else if ( CardB > CardA ) { s = " Bob " ; } else if ( CardB == CardA ) { s = " Draw " ; } System . out . println ( s ) ; sc . close ( ) ; } }
import java . util . * ; import java . util . InputMismatchException ; class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int all = sc . nextInt ( ) ; int [ ] w = new int [ all ] ; int resurt ; for ( int i = 0 ; i < all ; i ++ ) { w [ i ] = sc . nextInt ( ) ; } for ( int i = 0 ; i < all ; i ++ ) { if ( ! ( nibun ( all , i , w ) ) ) { resurt = i ; } } int mae2 ; int ato2 ; for ( int i = 0 ; i < result ; i ++ ) { mae2 += w [ i ] ; } for ( int i = 0 ; i < all - result ; i ++ ) { ato2 += w [ i + result ] ; } scanner . close ( ) ; System . out . println ( mae2 - ato2 ) ; } public static boolean nibun ( int all , int t , int [ ] w ) { int mae ; int ato ; for ( int i = 0 ; i < t ; i ++ ) { mae += w [ i ] ; } for ( int i = 0 ; i < all - t ; i ++ ) { ato += w [ i + t ] ; } return mae > ato ; } }
import java . util . * public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( ) ; int n = Integer . parseInt ( sc . next ( ) ) ; System . out . println ( n % 2 != 0 ? n * 2 : n ) ; } }
import java . util . Arrays ; import java . util . Scanner ; public class Amondai { public static void main ( String [ ] args ) { Scanner keyboard = new Scanner ( System . in ) ; int N = keyboard . nextInt ( ) ; int A = keyboard . nextInt ( ) ; int B = keyboard . nextInt ( ) ; int C = keyboard . nextInt ( ) ; int D = keyboard . nextInt ( ) ; String S = keyboard . next ( ) ; String [ ] masu = S . split ( " " ) ; String ans = " Yes " ; if ( C > D ) { ans = " No " ; int count = 0 ; for ( int m = B - 2 ; m <= D ; m ++ ) { if ( masu [ m ] . equals ( " # " ) ) { count = 0 ; } else { count ++ ; if ( count == 3 ) { ans = " Yes " ; break ; } } } } if ( ans . equals ( " Yes " ) ) { for ( int i = B - 1 ; i < D - 1 ; i ++ ) { if ( masu [ i + 1 ] . equals ( " . " ) ) { continue ; } else if ( masu [ i + 2 ] . equals ( " . " ) ) { i ++ ; } else { ans = " No " ; break ; } } } if ( ans . equals ( " Yes " ) ) { for ( int i = A - 1 ; i < C - 1 ; i ++ ) { if ( masu [ i + 1 ] . equals ( " . " ) ) { continue ; } else if ( masu [ i + 2 ] . equals ( " . " ) ) { i ++ ; } else { ans = " No " ; break ; } } } System . out . println ( ans ) ; keyboard . close ( ) ; } }
import java . util . * ; public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; System . out . println ( Math . min ( N * A , B ) ) ; } }
import java . util . Scanner ; public class Grading { public static void main ( String ... args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; if ( n == 0 && x == 0 ) break ; int count = 0 ; for ( int a = 1 ; a <= n ; a ++ ) { for ( int b = a + 1 ; b <= n ; b ++ ) { for ( int c = b + 1 ; c <= n ; c ++ ) { if ( a + b + c == x ) { count ++ ; } } } } System . out . println ( count ) ; } } }
import java . util . Scanner ; public class Kyoupuro2 { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int K = scan . nextInt ( ) ; int X = scan . nextInt ( ) ; if ( K * 500 >= X ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . io . * ; public class Main { public static void main ( String args [ ] ) { int x ; InputStreamReader sir = new InputStreamReader ( System . in ) ; BufferReader br = new BufferReader ( isr ) ; String but = br . readLine ( ) ; x = Integer . parseInt ( but ) ; if ( x >= 0 && x = < 100 ) { x = x * x * x ; } } }
import java . math . BigDecimal ; import java . math . MathContext ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { // input Scanner sc = new Scanner(System.in); BigDecimal a = new BigDecimal(sc.next()).sqrt(MathContext.DECIMAL128); BigDecimal b = new BigDecimal(sc.next()).sqrt(MathContext.DECIMAL128); a = a.add(b); BigDecimal c = new BigDecimal(sc.next()).sqrt(MathContext.DECIMAL128); System.out.println(a.compareTo(c) >= 1 ? "No" : "Yes"); } }
import java . util . Scanner ; public class HelloWorld { public static void main ( String [ ] args ) { String strArray [ ] ; Scanner scan = new Scanner ( System . in ) ; String str = scan . next ( ) ; // 変数strの長さ分回す for (int i = 0; i < str.length(); i++) { // 配列に順番に格納する strArray[i] = String.valueOf(str.charAt(i)); strArray[i] = "x"; } String s = String.join("", strArray); System.out.println(s); } }
import java . util . * ; import java . math . * ; public class Main1 { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long c = sc . nextLong ( ) ; double a1 = Math . sqrt ( a ) ; double b1 = Math . sqrt ( b ) ; double c1 = Math . sqrt ( c ) ; if ( ( a1 + b1 ) < c1 ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import java . util . Scanner ; import java . util . TreeMap ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int ac = 0 ; int wa = 0 ; TreeMap < Integer , String > ans = new TreeMap < > ( ) ; for ( int i = 0 ; i < m ; i ++ ) { int p = sc . nextInt ( ) ; String s = sc . next ( ) ; if ( ans . containsKey ( p ) ) { if ( ans . get ( p ) . equals ( " AC " ) ) { continue ; } else { ans . put ( p , s ) ; if ( s . equals ( " AC " ) ) { ac ++ ; continue ; } else { wa ++ ; continue ; } } } ans . put ( p , s ) ; if ( s . equals ( " AC " ) ) { ac ++ ; } else { wa ++ ; } } } System . out . println ( ac + " " + wa ) ; } }
import java . util . Scanner ; public class main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner sc = new Scanner(System.in); String input = sc.nextLine(); String[] array = input.split(""); int count = 0; if ("0".equals(array[0])) { for (int i = 1; i < array.length; i++) { if (array[i].equals("0") && "0".equals(array[i - 1])) { array[i] = "1"; count++; } if ("1".equals(array[i]) && "1".equals(array[i - 1])) { array[i] = "0"; count++; } } } if (array[0].equals("1")) { for (int i = 1; i < array.length; i++) { if ("1".equals(array[i]) && "1".equals(array[i - 1])) { array[i] = "0"; count++; } if ("0".equals(array[i]) && "0".equals(array[i - 1])) { array[i] = "1"; count++; } } } System.out.println(count); sc.close(); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a ; char op ; int b ; for ( ; ; ) { a = scan . nextInt ( ) ; op = scan . next ( ) ; b = scan . nextInt ( ) ; if ( op == '+' ) { a += b ; } else if ( op == '-' ) { a -= b ; } else if ( op == '*' ) { a *= b ; } else if ( op == '/' ) { a /= b ; } else if ( op == '?' ) { break ; } System . out . println ( a ) ; } } }
import java . util . * ; import java . io . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; a = a * a * a System . out . println ( a ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String po = sc . nextLine ( ) ; int w = sc . nextInt ( ) ; int h = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int po [ ] [ ] = new int [ w ] [ h ] ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; if ( c == 1 ) { for ( int j = 0 ; j < h ; j ++ ) { for ( int k = 0 ; k < a ; k ++ ) { po [ k ] [ j ] = 1 ; } } } else if ( c == 2 ) { for ( int j = 0 ; j < h ; j ++ ) { for ( int k = a ; k < w ; k ++ ) { po [ k ] [ j ] = 1 ; } } } else if ( c == 3 ) { for ( int j = 0 ; j < b ; j ++ ) { for ( int k = 0 ; k < w ; k ++ ) { po [ k ] [ j ] = 1 ; } } } else { for ( int j = b ; j < h ; j ++ ) { for ( int k = 0 ; k < w ; k ++ ) { po [ k ] [ j ] = 1 ; } } } } int count = 0 ; for ( int i = 0 ; i < w ; i ++ ) { for ( int j = 0 ; j < h ; j ++ ) { if ( po [ j ] [ i ] == 1 ) { count ++ ; } } } System . out . println ( count ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double N = sc . nextInt ( ) ; double ans ; double count = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2.0 == 1 ) { count ++ ; } } ans = count / N ; System . out . println ( " ans= " + ans ) ; } }
import java . io . * ; public class { public static void main ( String [ ] args ) { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; try { System . out . println ( " 数字を入力してください。"); String line = reader . r e dline( ; in = Int e ger.pars e I n (li e ; int b = Integer. p aese I n (li e ; if(a < b ){ Syste m .out . p in t l ( a < b"); } e lse if(a = b ) { Sys t e m o ut.p in t l ( a = b"); } e lse { System . o ut.pr i n t n ("a > b"); } c atc h (IOExce p t ion e ) { S ystem . out.println e ) catch (Nu m berForm a t E x e tion ) { System.out.println " 数 の 式が正しくあ り ません 。 "); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; Formatter frm = new Formatter ( ) ; int r = sc . nextInt ( ) ; double x = Math . PI ; int S = x * r * r ; int d = 2 * x * r ; System . out . println ( S + " " + d ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long K = sc . nextLong ( ) ; int N = sc . nextInt ( ) ; long arr [ ] = new long [ N ] ; double halfperimeter = K / 2.0 ; long f = 0 , d = 0 ; int max = Integer . MIN_VALUE , min = Integer . MAX_VALUE ; boolean flag = false ; for ( int i = 0 ; i < N ; i ++ ) { arr [ i ] = sc . nextLong ( ) ; } for ( int i = 1 ; i <= N - 1 ; i ++ ) { double diff = Double . valueOf ( arr [ i ] - arr [ i - 1 ] ) ; if ( diff >= halfperimeter ) { flag = true ; f = arr [ i - 1 ] ; d = arr [ i ] ; break ; } } if ( ! flag ) System . out . println ( arr [ N - 1 ] - arr [ 0 ] ) ; else //System.out.println((long)((K-d) + f)); } }
import java . util . ; public class Solution { public static void main ( String args [ ] ) { int N = 0 ; Scanner obj = new Scanner ( System . in ) ; N = obj . nextInt ( ) ; int h [ ] = new int [ N ] ; for ( int i = 0 ; iN ; i ++ ) { h [ i ] = obj . nextInt ( ) ; } int dp [ ] = new int [ N ] ; if ( N1 ) System . out . println ( 0 ) ; if ( N == 1 ) System . out . println ( h [ 0 ] ) ; if ( N == 2 ) System . out . println ( Math . abs ( h [ 0 ] - h [ 1 ] ) ) ; dp [ 0 ] = 0 ; dp [ 1 ] = Math . abs ( h [ 0 ] - h [ 1 ] ) ; for ( int i = 2 ; iN ; i ++ ) { dp [ i ] = Math . min ( Math . abs ( h [ i ] - dp [ i - 1 ] ) , Math . abs ( h [ i ] - dp [ i - 2 ] ) ) ; } System . out . println ( dp [ N - 1 ] ) ; } }
import java . util . Scanner ; ? ? public class Main { ? ? public static void main ( String [ ] args ) { ? ? ? ? Scanner sc = new Scanner ( System . in ) ; ? ? ? ? ? ? int n = sc . nextInt ( ) ; ? ? ? ? ? ? int i ; ? ? ? ? ? ? int x = i ; ? ? ? ? ? ? for ( i = 1 ; i <= n ; i ++ ) { ? ? ? ? ? ? ? ? if ( x % 3 == 0 ) { ? ? ? ? ? ? ? ? ? ? System . out . printf ( " " + i ) ; ? ? ? ? ? ? ? ? } else if ( x % 10 == 3 ) { ? ? ? ? ? ? ? ? ? ? System . out . printf ( " " + i ) ; ? ? ? ? ? ? ? ? } else if ( i > 10 ) { while ( i > 10 ) { i = i / 10 ; } if ( i == 3 ) { System . out . printf ( " " + i ) ; } } ? ? ? ? ? ? } ? ? ? ? ? ? System . out . ptintln ( " " ) ; ? ? ? ? } ? ? }
import java . util . Scanner ; public class Exercise30 { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; System . out . print ( " Input first number: " ) ; int x = in . nextInt ( ) ; System . out . print ( " Input second number: " ) ; int y = in . nextInt ( ) ; System . out . print ( " Input third number: " ) ; int z = in . nextInt ( ) ; if ( x == y && x == z ) { System . out . println ( " Not a Poor Number " ) ; } else if ( ( x == y ) || ( x == z ) || ( z == y ) ) { System . out . println ( " Poor Number " ) ; } }
import java . util . Random ; class Elementary { public static void main ( String [ ] args ) { Random stdIn = new Random ( ) ; int m = stdIn . nextInt ( 100 ) + 1 ; int n = stdIn . nextInt ( 1000000000 ) + 1 ; double x ; x = Math . pow ( m , n ) ; int y = x % 1000000007 ; System . out . println ( y ) ; } }
import java . util . Scanner ; public class B81 { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . next ( ) ) ; int nums [ ] = new int [ n ] ; // Scanner sc2 = new Scanner(System.in); for (int i = 0; i < n; i++) { nums[i] = Integer.parseInt(sc.next()); } int count = 0; while (true) { boolean flg = false; for (int i = 0; i < n; i++) { if (nums[i] % 2 == 0) { flg = true; nums[i] = nums[i]/2; } else { flg = false; break; } } if (flg) { count++; continue; } else { break; } } System.out.println(count); } }
import java . util . * ; // djkstra ?????????????????? public class Main { static final int INF = Integer.MAX_VALUE; public static void main(String[] args) { Scanner sc = new Scanner(System.in); int vn = sc.nextInt(); int ve = sc.nextInt(); int s = sc.nextInt(); List<Edge>[] edges = new List[vn]; for (int i = 0; i < vn; i++) { edges[i] = new ArrayList<>(); } for (int i = 0; i < ve; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int f = sc.nextInt(); edges[a].add(new Edge(a, b, f)); // ????????°?????? // edges[b].add(new Edge(b, a, f)); } int[] distance = new int[vn]; Arrays.fill(distance, INF); distance[s] = 0; Queue<Edge> queue = new PriorityQueue<>(); queue.add(new Edge(s, s, 0)); while (!queue.isEmpty()) { Edge e1 = queue.poll(); if (distance[e1.target] < e1.cost) { continue; } for (Edge e2: edges[e1.target]) { if (distance[e2.target] > distance[e1.target] + e2.cost) { distance[e2.target] = distance[e1.target] + e2.cost; queue.add(new Edge(e1.target, e2.target, distance[e2.target])); } } } for (int i = 0; i < vn; i++) { System.out.println(distance[i] == INF ? "INF" : distance[i]); } } static class Edge implements Comparable<Edge> { public int source; public int target; public int cost; public Edge(int source, int target, int cost) { this.source = source; this.target = target; this.cost = cost; } @Override public int compareTo(Edge o) { return this.cost - o.cost; } } }
import java . util . Scanner ; class Poor { public static boolean check ( int a , int b , int c ) { if ( ( a == b && b != c ) || ( a == c && a != b ) || ( b == c && a != b ) ) return true ; return false ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; if ( check ( a , b , c ) ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int H = s . nextInt ( ) ; int W = s . nextInt ( ) ; String [ ] array = new String [ H ] ; for ( int i = 0 ; i < H ; i ++ ) { array [ i ] = s . next ( ) ; } // 表示 for(int i=0; i<H; i++){ System.out.println(array[i]); System.out.println(array[i]); } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) ; if ( n % 2 == 1 ) [ System . out . println ( 0 ) ; } else { long count = 0 ; for ( long i = 10 ; i <= 100000000000000000L ; i *= 5 ) count += n / i ; System . out . println ( count ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c - sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int e = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; System . out . println ( e - a <= k ? " Yay! " : " :( " ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int t = Integer . parseInt ( br . readLine ( ) ) ; int [ ] R = new int [ t ] ; int i , j ; R [ 0 ] = Integer . parseInt ( br . readLine ( ) ) ; int max = R [ 0 ] ; int min = R [ 0 ] ; int bnf , a ; bnf = max - min ; for ( i = 1 ; i < t - 1 ; i ++ ) { R [ i ] = Integer . parseInt ( br . readLine ( ) ) ; if ( R [ i ] < min ) { min = R [ i ] ; mint = i ; max = R [ i ] ; } else if ( R [ i ] > max ) max = R [ i ] ; a = max - min ; if ( bnf < a ) bnf = a ; } if ( min == R [ t - 2 ] ) max = R [ t - 1 ] ; else if ( min != R [ t - 2 ] && max < R [ t - 1 ] ) max = R [ t - 1 ] ; System . out . println ( bnf ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int [ ] h = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = s . nextInt ( ) ; } int [ ] dp = new int [ n + 1 ] ; Arrays . fill ( Integer . MAX_VALUE ) ; dp [ 1 ] = 0 ; for ( int i = 0 ; for ( int i = 2 ; i <= n ; i ++ ) { dp [ i ] = Math . min ( dp [ i - 1 ] + Math . abs ( h [ i ] - h [ i - 1 ] , dp [ i ] ) ; dp [ i ] = Math . min ( dp [ i - 2 ] + Math . abs ( h [ i ] - h [ i - 2 ] , dp [ i ] ) ; } return dp [ n ] ; }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int a = scanner . nextInt ( ) ; if ( a . equals ( 3200 <= a ) ) { System . out . println ( " s " ) ; } else { System . out . println ( " red " ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; int x = v - w ; long c = a - b ; long z = x * t ; if ( c < 0 ) { int d ; d = c ; c = - d ; } if ( x <= 0 ) { System . out . println ( " NO " ) ; } else if ( z >= c ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int W = sc . nextInt ( ) ; int H = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int b = 0 ; if ( ( Double ) W / 2 == ( Double ) x && H / 2 == y ) { b = 1 ; } Double ans = ( Double ) W * H / 2 ; System . out . println ( ans + " " + 1 ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int n = stdIn . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = stdIn . nextInt ( ) ; } Scanner std = new Scanner ( System . in ) ; int N = std . nextInt ( ) ; int [ ] b = new int [ N ] ; for ( int j = 0 ; j < N ; j ++ ) { b [ j ] = std . nextInt ( ) ; } for ( int k = 0 ; k < n ; k ++ ) { for ( int p = 0 ; p < N ; p ++ ) { if ( a [ k ] == b [ p ] ) return a [ k ] ; break ; } } System . out . println ( ) ; } }
import java . util . Scanner ; public class ArithInt { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int x = stdIn . nextInt ( ) ; System . out . println ( x * 32 ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = getInputInteger ( sc ) ; int a = getInputInteger ( sc ) ; int b = getInputInteger ( sc ) ; // programming int sum = 0; for (int i = 0; i < n; i+;) { String bin = Integer.toBinaryString(i); int[] binlist = toIntegerList(bin); int dsum = 0; for (int v : binlist) { dsum += v; } if (a <= dsum && dsum <= b) { sum += i; } } } public static String getInputString(Scanner sc) { return sc.next(); } public static int getInputInteger(Scanner sc) { return Integer.parseInt(sc.next()); } public static void output(String... params) { boolean isInit = true; String str = ""; for (String s : params) { if (!isInit) { str += " "; } str += s; isInit = false; } System.out.println(str); } public static int[] toIntegerList(String s) { int[] ret = new int[s.length()]; for (int i = 0; i < s.length(); i++) { ret[i] = Integer.parseInt(String.valueOf(s.charAt(i))); } return ret; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . regex . Pattern ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; Pattern ptr = Pattern . compile ( " this|that|the " ) ; String str ; while ( ( str = br . readLine ( ) ) != null ) { char charArray [ ] = str . toCharArray ( ) ; for ( int i = 0 ; ! ptr . matcher ( String . valueOf ( charArray ) ) . find ( ) & i < 26 ; i ++ ) { for ( int j = 0 ; j < charArray . length ; j ++ ) { if ( 'a' <= charArray [ j ] && charArray [ j ] < 'z' ) { charArray [ j ] ++ ; } else if ( charArray [ j ] == 'z' ) { charArray [ j ] = 'a' ; } } } System . out . println ( charArray ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; /** * author @sahil */ class A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; int p = n ; int s = 0 ; while ( n != 0 ) { int r = n % 10 ; s = s * 10 + r ; n = n / 10 ; } if ( p == s ) System . out . println ( " Yes " ) ; else System . out . println ( " No " ) ; } }
import com . sun . tools . jdeprscan . scan . Scan ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String s = scanner . next ( ) ; Set < String > campanies = new HashSet < > ( ) ; for ( char c : s . toCharArray ( ) ) { campanies . add ( String . valueOf ( c ) ) ; } System . out . println ( campanies . size ( ) > 1 ? " Yes " : " No " ) ; } }
import java . util . Scanner ; public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String x = " " ; x = s . next ( ) ; char [ ] c = new char [ 2 ] ; c [ 0 ] = x . charAt ( 0 ) ; c [ 1 ] = x . charAt ( 1 ) ; if ( c [ 0 ] == c [ 1 ] ) { System . out . println ( 'H' ) ; } else { System . out . println ( 'D' ) ; } }
import java . io . * ; import java . util . * ; import java . lang . * ; public class therefore { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) % 10 ; if ( n == 3 ) { System . out . println ( " bon " ) ; } else if ( n == 0 || n == 1 || n == 6 || n == 8 ) { System . out . println ( " pon " ) ; } else { System . out . println ( " hon " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { try ( Scanner sc = new Scanner ( System . in ) ) { while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) { break ; } for ( int a = 1 ; a <= H ; a ++ ) ; { for ( int b = 1 ; b <= W ; b ++ ) ; { System . out . printf ( " # " ) ; } System . out . println ( ) ; } System . out . println ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner itr = new Scanner ( System . in ) ; int n = itr . nextInt ( ) ; dfs ( " " , 'a' , n ) ; } public static void dfs ( String s , char max , int n ) { if ( n == s . length ( ) ) { System . out . println ( s ) ; return ; } for ( char i = 'a' ; i <= max ; i ++ ) { dfs ( s + i , ( max == i ? ( char ) max + 1 : max ) , n ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; int [ ] b = new int [ n + 1 ] ; int [ ] w = new int [ n + 1 ] ; int p = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s . charAt ( i ) == '.' ) p ++ ; } w [ 0 ] = p ; for ( int i = 0 ; i < n ; i ++ ) { if ( s . charAt ( i ) == '.' ) { w [ i + 1 ] = w [ i ] - 1 ; } else { b [ i + 1 ] = b [ i ] + 1 ; } } int ans = n ; for ( int i = 0 ; i <= n ; i ++ ) { ans = Math . min ( ans , b [ i ] + w [ i ] ) ; } System . out . println ( ans ) ; }
import java . io . * ; import java . util . * ; public class cp1 { public static void main ( String args [ ] ) { int x = II ( ) ; int ans = 0 ; if ( x <= 599 ) ans = 8 ; else if ( x <= 799 ) ans = 7 ; else if ( x <= 999 ) ans = 6 ; else if ( x <= 1199 ) ans = 5 ; else if ( x <= 1399 ) ans = 4 ; else if ( x <= 1599 ) ans = 3 ; else if ( x <= 1799 ) ans = 2 ; else ans = 1 ; System . out . println ( ans ) ; } //////////////////////////////////// static scan in=new scan(System.in); static int II() { return in.nextInt(); } static long IL() { return in.nextLong(); } static int[] IIA(int n) { int a[]=new int[n]; for(int i=0;i<n;i++) { a[i]=II(); } return a; } static String IS() { return in.next(); } static char IC(){ return in.next().charAt(0); } static String[] ISA(int n) { String a[]=new String[n]; for(int i=0;i<n;i++) { a[i]=IS(); } return a; } static char[] ICA(int n) { char a[]=new char[n]; for(int i=0;i<n;i++) { a[i]=IC(); } return a; } } class scan { public static BufferedReader reader; public static StringTokenizer token; scan(InputStream str) { reader=new BufferedReader(new InputStreamReader(str)); token=null; } static int nextInt() { while(token==null||!token.hasMoreTokens()) { try { token=new StringTokenizer(reader.readLine()); } catch(IOException e){ throw new RuntimeException(e); } } return Integer.parseInt(token.nextToken()); } static long nextLong() { while(token==null||!token.hasMoreTokens()) { try { token=new StringTokenizer(reader.readLine()); } catch(IOException e){ throw new RuntimeException(e); } } return Long.parseLong(token.nextToken()); } static String next() { while(token==null||!token.hasMoreTokens()) { try { token=new StringTokenizer(reader.readLine()); } catch(IOException e){ throw new RuntimeException(e); } } return token.nextToken(); } }
import java . util . HashMap ; public class UniqueInArray2 { public static void main ( String args [ ] ) { int ar [ ] = { 10 , 5 , 3 , 4 , 3 , 5 , 6 } ; HashMap < Integer , Integer > hm = new HashMap < Integer , Integer > ( ) ; for ( int i = 0 ; i < ar . length ; i ++ ) { hm . put ( ar [ i ] , i ) ; } // Using hm.keySet() to print output reduces time complexity. - Lokesh System.out.println(hm.keySet()); } }
import java . util . ArrayList ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner inp = new Scanner ( System . in ) ; ArrayList < Integer > input = new ArrayList < > ( ) ; int rows = inp . nextInt ( ) ; int columns = inp . nextInt ( ) ; ArrayList < ArrayList < Integer > > numbers = new ArrayList < > ( ) ; for ( int i = 0 ; i < rows ; i ++ ) { ArrayList < Integer > numberRow = new ArrayList < > ( ) ; for ( int j = 0 ; j < columns ; j ++ ) { numberRow . add ( inp . nextInt ( ) ) ; } numbers . add ( numberRow ) ; } output ( numbers , rows , columns ) ; } public static void output ( ArrayList < ArrayList < Integer > > numbers , int rows , int columns ) { int totalTotal = 0 ; ArrayList < Integer > totalCol = new ArrayList < > ( ) ; for ( int i = 0 ; i < columns ; i ++ ) { totalCol . add ( 0 ) ; } for ( int i = 0 ; i < rows ; i ++ ) { int total = 0 ; for ( int j = 0 ; j < columns ; j ++ ) { if ( j != 0 ) { System . out . print ( " " ) ; } int n = numbers . get ( i ) . get ( j ) ; System . out . print ( n ) ; total += n ; int colTol = totalCol . get ( j ) ; totalCol . remove ( j ) ; totalCol . add ( j , colTol + n ) ; } System . out . print ( " " + total ) ; totalTotal += total ; total = 0 ; System . out . print ( " \n " ) ; } for ( int i : totalCol ) { System . out . print ( i + " " ) ; } System . out . print ( totalTotal + " \n ); } }
import java . util . * ; public class Main { private static final Scanner scan = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { while ( scan . hasNext ( ) ) { int N = scan . nextInt ( ) ; for ( int i = 0 ; i < N ; i ++ ) { BigInteger a = scan . nextBigInteger ( ) ; BigInteger b = scan . nextBigInteger ( ) ; String num = String . valueOf ( a . add ( b ) ) ; if ( num . length ( ) > 80 ) { System . out . printf ( " %s \n " , " overflow " ) ; } else { System . out . printf ( " %s \n " , num ) ; } } } } }
import java . util . Scanner ; public class T1 { public static void main ( String [ ] args ) { int H = 0 ; int W = 0 ; int N = 0 ; int black = 0 ; Scanner input = new Scanner ( System . in ) ; H = input . nextInt ( ) ; W = input . nextInt ( ) ; N = input . nextInt ( ) ; if ( H > W ) { for ( int i = 1 ; i < H + 1 ; i ++ ) { black += H ; if ( black >= N ) { System . out . println ( i ) ; break ; } } } else { for ( int i = 1 ; i < W + 1 ; i ++ ) { black += W ; if ( black >= N ) { System . out . println ( i ) ; break ; } } } } }
import java . io . * ; import java . util . * ; class Main { static int Calculation ( ) { int add ( int a , int b ) { return a + b ; } int sub ( int a , int b ) { return a - b ; } int mul ( int a , int b ) { return a * b ; } int div ( int a , int b ) { return a / b ; } } public static void main ( String [ ] args ) throws IOException { BufferedReader input = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = input . readLine ( ) ; String array [ ] = str . split ( " " ) ; int x [ ] = new int [ 2 ] ; x [ 0 ] = Integer . parseInt ( array [ 0 ] ) ; x [ 1 ] = Integer . parseInt ( array [ 2 ] ) ; String op = array [ 1 ] ; Calculation cal1 = new Calculation ( ) ; Calculation cal2 = new Calculation ( ) ; Calculation cal3 = new Calculation ( ) ; Calculation cal4 = new Calculation ( ) ; if ( op . equals ( " + " ) ) { System . out . println ( cal1 . add ( x [ 0 ] , x [ 1 ] ) ) ; } else if ( op . equals ( " - " ) ) { System . out . println ( cal2 . sub ( x [ 0 ] , x [ 1 ] ) ) ; } else if ( op . equals ( " * " ) ) { System . out . println ( cal3 . mul ( x [ 0 ] , x [ 1 ] ) ) ; } else if ( op . equals ( " / " ) ) { System . out . println ( cal4 . div ( x [ 0 ] , x [ 1 ] ) ) ; } else if ( op . equals ( " ? " ) ) { System . exit ( 0 ) ; } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner scanner = new Scanner ( System . in ) { int input = scanner . nextInt ( ) ; int h , m , s ; h = input / 3600 ; input = input - h * 3600 ; m = input / 60 ; input = input - m * 60 ; s = input ; System . out . println ( h + " : " + m + " : " + s ) ; } }
import java . util . * ; class abc89b { public static void main ( String args [ ] ) { Scanner cin = new Scanner ( System . in ) ; int n = cin . nextInt ( ) ; boolean flag [ ] = new boolean [ 1000 ] ; for ( int i = 0 ; i < n ; i ++ ) { String ch = cin . next ( ) ; flag [ ch . charAt ( 0 ) ] = true ; } int ans = 0 ; for ( int i = 0 ; i < 1000 ; i ++ ) if ( flag [ i ] ) ans ++ ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int a = sc . nextInt ( ) ; String op = sc . next ( ) ; int b = sc . nextInt ( ) ; int ans = 0 ; if ( op . equals ( " + " ) ) { ans = a + b ; } else if ( op . equals ( " - " ) ) { ans = a - b ; } else if ( op . equals ( " * " ) ) { ans = a * b ; } else if ( op . equals ( " / " ) ) { ans = ( int ) a / b ; } else if ( op . equals ( " ? " ) ) { break ; } System . out . println ( ans ) ; } } }
import java . util . * ; /** * Created by sonetsuyoshi on 2016/07/31. */ public class Main { static public void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextLong ( ) ; } long count1 = 0 ; // first item > 0 long[] s = new long[n]; long[] b = new long[n]; if(a[0] < 1) { b[0] = 1; count1 += Math.abs(a[0]) + 1; } else b[0] = a[0]; s[0] = b[0]; for(int i = 1; i < n; i++) { if(b[i - 1] > 0) { long c = -s[i - 1] - 1; if(c < a[i]) b[i] = c; else b[i] = a[i]; s[i] = s[i - 1] + b[i]; count1 += Math.abs(a[i] - b[i]); } else { // b[i - 1] < 0 long c = -s[i - 1] + 1; if(c > a[i]) b[i] = c; else b[i] = a[i]; s[i] = s[i - 1] + b[i]; count1 += Math.abs(a[i] - b[i]); } } Arrays.fill(s, 0); Arrays.fill(b, 0); long count2 = 0; if(a[0] > -1) { b[0] = -1; count2 += Math.abs(a[0]) + 1; } else b[0] = a[0]; s[0] = b[0]; for(int i = 1; i < n; i++) { if(b[i - 1] > 0) { long c = -s[i - 1] - 1; if(c < a[i]) b[i] = c; else b[i] = a[i]; s[i] = s[i - 1] + b[i]; count2 += Math.abs(a[i] - b[i]); } else { // b[i - 1] < 0 long c = -s[i - 1] + 1; if(c > a[i]) b[i] = c; else b[i] = a[i]; s[i] = s[i - 1] + b[i]; count2 += Math.abs(a[i] - b[i]); } } System.out.println(Math.min(count1, count2)); } }
import java . util . Arrays ; class Main { public static void main ( String [ ] args ) { Main main = new Main ( ) ; java . util . Scanner sc = new java . util . Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int [ ] list = new int [ N ] ; for ( int index = 0 ; index < N ; index ++ ) { list [ index ] = sc . nextInt ( ) ; } int [ ] choice = { 0 , 0 , 0 } ; System . out . println ( main . get ( list , N , 0 , choice , 0 , 0 ) ) ; sc . close ( ) ; } int get ( int [ ] list , int N , int count , int [ ] choice , int answer , int nowplace ) { try { if ( count == 3 ) { Arrays . sort ( choice ) ; if ( choice [ 0 ] + choice [ 1 ] > choice [ 2 ] && choice [ 0 ] != choice [ 1 ] && choice [ 1 ] != choice [ 2 ] && choice [ 0 ] != choice [ 2 ] ) { answer ++ ; } return answer ; } else if ( ( N - nowplace ) < ( 3 - count ) ) { choice [ count - 1 ] = 0 ; return answer ; } for ( int index = nowplace ; index < N ; index ++ ) { int [ ] temp = new int [ 3 ] ; temp [ 0 ] = choice [ 0 ] ; temp [ 1 ] = choice [ 1 ] ; temp [ 2 ] = choice [ 2 ] ; temp [ count ] = list [ index ] ; answer = get ( list , N , count + 1 , temp , answer , index + 1 ) ; } } catch ( Exception e ) { return answer ; } return answer ; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( new BufferedReader ( new InputStreamReader ( System . in ) ) ) ; int n = sc . nextInt ( ) ; int ar [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ar [ i ] = sc . nextInt ( ) ; } long dp [ ] [ ] = new long [ n ] [ n ] ; for ( int L = 1 ; L <= n ; L ++ ) { for ( int i = 0 ; i + L - 1 < n ; i ++ ) { int j = i + L - 1 ; if ( L == 1 ) { dp [ i ] [ j ] = ar [ i ] ; continue ; } dp [ i ] [ j ] = Math . max ( ar [ i ] - dp [ i + 1 ] [ j ] , - dp [ i ] [ j - 1 ] + ar [ j ] ) ; } } System . out . println ( dp [ 0 ] [ n - 1 ] ) ; } }
import java . lang . Math ; import java . util . * ; class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; double i = sc . nextInt ( ) ; System . out . println ( ( ( double ) Math . round ( i * 2 * Math . PI * 100 ) ) / 100 ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int M = sc . nextInt ( ) ; long [ ] [ ] dp = new long [ N ] [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i != j ) dp [ i ] [ j ] = Integer . MAX_VALUE ; } } ArrayList < Edge > edgeList = new ArrayList < Edge > ( ) ; for ( int i = 0 ; i < M ; i ++ ) { int a = sc . nextInt ( ) - 1 ; int b = sc . nextInt ( ) - 1 ; long c = sc . nextLong ( ) ; dp [ a ] [ b ] = c ; dp [ b ] [ a ] = c ; edgeList . add ( new Edge ( a , b , c ) ) ; } // ワーシャル・フロイド for(int k = 1; k <= N; k++) { for(int i = 0; i < N; i++) { for(int j = 0; j < N; j++) { dp[i][j] = Math.min(dp[i][j], dp[i][k - 1] + dp[k - 1][j]); } } } int ans = 0; for(int i = 0; i < M; i++) { Edge e = edgeList.get(i); if(dp[e.u][e.v] < e.cost) ans++; } System.out.println(ans); } } class Edge { int u; int v; long cost; Edge(int u, int v, long cost) { this.u = u; this.v = v; this.cost = cost; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int num = Integer . parseInt ( sc . nextLine ( ) ) ; String [ ] a = sc . nextLine ( ) . split ( " " ) ; int [ ] array = new int [ num ] ; for ( int i = 0 ; i < num ; i ++ ) { array [ i ] = Integer . parseInt ( a [ i ] ) ; } int changeCount = 0 ; boolean loopFlg = true ; while ( loopFlg ) { loopFlg = false ; for ( int i = num - 1 ; i >= 1 ; i -- ) { if ( array [ i ] < array [ i - 1 ] ) { int tmp = array [ i ] ; array [ i ] = array [ i - 1 ] ; array [ i - 1 ] = tmp ; changeCount ++ ; loopFlg = true ; } } } for ( int i = 0 ; i < array . length ; i ++ ) { System . out . print ( array [ i ] ) ; if ( i != array . length - 1 ) { System . out . print ( " " ) ; } } System . out . println ( ) ; System . out . println ( changeCount ) ; } } /** 1 bubbleSort(A, N) // N 個の要素を含む 0-オリジンの配列 A 2 flag = 1 // 逆の隣接要素が存在する 3 while flag 4 flag = 0 5 for j が N-1 から 1 まで 6 if A[j] < A[j-1] 7 A[j] と A[j-1] を交換 8 flag = 1 入力例 1 5 5 3 2 4 1 出力例 1 1 2 3 4 5 8 */
import java . io . * ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub int i,n=0,start=-1,end=-1,keyi,sp2; String[] sp = new String[2]; BufferedReader sc = new BufferedReader(new InputStreamReader(System.in)); try{ n=Integer.parseInt(sc.readLine()); }catch(IOException e){ System.out.println(e); } int[] data = new int[n]; int[] next = new int[n]; int[] befo= new int[n]; for(i=0;i<n;i++){ try{ sp=(sc.readLine()).split("[\\s]+"); }catch(IOException e){ System.out.println(e); } if(sp[0].equals("insert")){ data[i]=Integer.parseInt(sp[1]); if(start!=-1){ next[i]=start; start=i; befo[next[i]]=i; }else{ start=i; end=i; } } if(sp[0].equals("delete")){ if((keyi=search(data,next,start,Integer.parseInt(sp[1]),end))!=-1){ if(start ==end){start =end = -1; continue; } if(keyi==end){ end=befo[end]; next[end]=-1; }else if(keyi==start){ start=next[start]; befo[start]=-1; }else{ next[befo[keyi]]=next[keyi]; befo[next[keyi]]=befo[keyi]; } } } if(sp[0].equals("deleteFirst")){ if(start ==end){ start =end = -1; continue; } if(start!=-1){ start=next[start]; } } if(sp[0].equals("deleteLast")){ if(start!=-1){ if(start ==end){start =end = -1; continue; } if(befo[end]!=-1) end=befo[end]; }else{ start=-1; } next[end]=-1; } } for(i=start;i!=next[end];i=next[i]){ if(i!=end){ System.out.print(data[i]+" "); }else{ System.out.println(data[i]); } } } public static int search(int []data,int[]next,int start,int key,int end){ int x; x=start; while(x !=end&&data[x]!=key){ x=next[x]; } if(x==end&& data[x]!=key) return -1; return x; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int t = 1 ; int c = 0 ; while ( t < b ) { t += a - 1 ; c ++ ; } System . out . println ( c ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String line = sc . nextLine ( ) ; String str [ ] = line . split ( " " ) ; String a = str [ 0 ] . substring ( 0 , 1 ) ; String b = str [ 1 ] . substring ( 0 , 1 ) ; String c = str [ 2 ] . substring ( 0 , 1 ) ; System . out . println ( a + b + c ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int c = scan . nextInt ( ) ; scan . close ( ) ; int x [ ] = { a , b , c } ; int cnt [ ] = { 0 , 0 } ; for ( int i = 0 ; i < 3 ; i ++ ) { if ( x [ i ] == 5 ) cnt [ 0 ] += 1 ; if ( x [ i ] == 7 ) cnt [ 1 ] += 1 ; } if ( cnt [ 0 ] == 2 && cnt [ 1 ] == 1 ) System . out . println ( " YES " ) ; else System . out . println ( " NO " ) ; } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int temp = 0 ; if ( a > b ) { temp = a ; a = b ; b = temp ; } if ( b > c ) { temp = b ; b = c ; c = temp ; } if ( a > b ) { temp = a ; a = b ; b = temp ; } System . out . println ( a + " " + b + " " + c ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; System . out . println ( s . replace ( " 0 " , " " ) . length ( ) ) ; } }
import java . io . IOException ; import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) throws IOException { Scanner bf = new Scanner ( System . in ) ; while ( true ) { int N = Integer . parseInt ( bf . nextLine ( ) ) ; if ( N == 0 ) break ; int use = 0 ; int useMax = 0 ; int nonuseMax = 0 ; int max = Integer . MIN_VALUE ; for ( int i = 0 ; i < N ; i ++ ) { int tmp = Integer . parseInt ( bf . nextLine ( ) ) ; max = Math . max ( tmp , max ) ; use = Math . max ( 0 , use + tmp ) ; nonuseMax = Math . max ( nonuseMax , useMax ) ; useMax = Math . max ( use , useMax ) ; } int ans = Math . max ( useMax , nonuseMax ) ; if ( ans <= 0 ) ans = max ; System . out . println ( ans ) ; } } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws Exception { InputStreamReader r = new InputStreamReader ( System . in ) ; int N = nextInt ( r ) ; int h [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { h [ i ] = nextInt ( r ) ; } int dp [ ] = new int [ N ] ; dp [ 1 ] = Math . abs ( h [ 1 ] - h [ 0 ] ) ; for ( int i = 2 ; i < N ; i ++ ) { int abs2 = Math . abs ( h [ i ] - h [ i - 2 ] ) ; int abs1 = Math . abs ( h [ i ] - h [ i - 1 ] ) ; dp [ i ] = dp [ i - 2 ] + abs2 < dp [ i - 1 ] + abs1 ? dp [ i - 2 ] + abs2 : dp [ i - 1 ] + abs1 ; } System . out . println ( dp [ N - 1 ] ) ; } public static String nextString ( InputStreamReader r ) throws Exception { String res = " " ; while ( true ) { int c = r . read ( ) ; if ( c == 32 || c == 10 || c == - 1 ) { break ; } res += ( char ) c ; } return res ; } public static int nextInt ( InputStreamReader r ) throws Exception { return Integer . parseInt ( nextString ( r ) ) ; } public static long nextLong ( InputStreamReader r ) throws Exception { return Long . parseLong ( nextString ( r ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; String ans = " No " ; if ( a + b == c ) ans = " Yes " ; if ( b + c == a ) ans = " Yes " ; if ( a + c == b ) ans = " Yes " ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . next ( ) ) ; n = n * n * n ; System . out . println ( n ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; while ( true ) { int a = scanner . nextInt ( ) ; String s = scanner . next ( ) ; int b = scanner . nextInt ( ) ; int result = 0 ; boolean end = false ; switch ( s ) { case " + " : result = a + b ; break ; case " - " : result = a - b ; break ; case " * " : result = a * b ; break ; case " / " : result = a / b ; break ; default : end = true ; break ; } if ( end ) break ; System . out . println ( result ) ; } scanner . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int ab = a + b ; int bc = b + c ; int ca = c + a ; System . out . println ( Math . min ( ca , Math . min ( ab , bc ) ) ) ; } }
import java . math . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int N = scan . nextInt ( ) , W = scan . nextInt ( ) ; int dp [ ] = new int [ W + 1 ] , v [ ] = new int [ N ] , w [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { v [ i ] = scan . nextInt ( ) ; w [ i ] = scan . nextInt ( ) ; } for ( int i = 0 ; i < N ; i ++ ) { for ( int j = w [ i ] ; j <= W ; j ++ ) { dp [ j ] = Math . max ( dp [ j ] , dp [ j - w [ i ] ] + v [ i ] ) ; } } System . out . println ( dp [ W ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; short [ ] a = new short [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { a [ i ] = sc . nextShort ( ) ; } for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = i + 1 ; j < 3 ; j ++ ) { if ( a [ i ] > a [ j ] ) { short b = a [ i ] ; a [ i ] = a [ j ] ; a [ j ] = b ; } } } System . out . println ( a [ 0 ] + " " + a [ 1 ] + " " + a [ 2 ] ) ; sc . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( ( a + b ) % 2 == 0 ) { System . out . println ( ( a + b ) / 2 ) ; } else { System . out . println ( ( a + b ) / 2 + 1 ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; char [ ] cs = new char [ s . length ( ) + 1 ] ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { cs [ i ] = s . charAt ( i ) ; } cs [ s . length ( ) ] = 200 ; Arrays . sort ( cs ) ; cs [ s . length ( ) ] = 0 ; char [ ] ts = new char [ t . length ( ) + 1 ] ; for ( int i = 0 ; i < t . length ( ) ; i ++ ) { ts [ i ] = t . charAt ( i ) ; } Arrays . sort ( ts ) ; for ( int i = 0 ; i < s . length ( ) + 1 ; i ++ ) { if ( cs [ i ] < ts [ t . length ( ) - i ] ) { System . out . println ( " Yes " ) ; return ; } else if ( cs [ i ] == ts [ t . length ( ) - i ] ) { continue ; } else { System . out . println ( " No " ) ; return ; } } System . out . println ( " No " ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { InputStreamReader isr = new InputStreamReader ( System . in ) ; BufferedReader reader = new BufferedReader ( isr ) ; int n = Integer . parseInt ( reader . readLine ( ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( String . valueOf ( i ) . indexOf ( " 3 " ) != - 1 || i % 3 == 0 ) { System . out . print ( " " + i ) ; } } System . out . println ( ) ; reader . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int A = scan . nextInt ( ) ; System . out . println ( A / 2 + A % 2 ) ; } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Main ans = new Main ( ) ; System . out . println ( ans . solve ( ) ) ; } private long solve ( ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int M = sc . nextInt ( ) ; Map < Integer , List < Integer > > graph = new HashMap < > ( ) ; for ( int i = 1 ; i <= M ; i ++ ) { int u = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; List < Integer > children = graph . getOrDefault ( u , new ArrayList < Integer > ( ) ) ; children . add ( w ) ; graph . put ( u , children ) ; } long [ ] dp = new long [ N + 1 ] ; long ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { ans = Math . max ( solve ( i , graph , dp ) , ans ) ; } return ans ; } private long solve ( int u , Map < Integer , List < Integer > > graph , long [ ] dp ) { if ( ! graph . containsKey ( u ) ) return 0 ; if ( dp [ u ] != 0 ) return dp [ u ] ; long bestChild = 0 ; for ( int child : graph . get ( u ) ) { bestChild = Math . max ( bestChild , solve ( child , graph , dp ) ) ; } dp [ u ] = 1 + bestChild ; return dp [ u ] ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner reader=new Scanner(System.in); String s1 =reader.next(); String s2 =reader.next(); String s3 =reader.next(); String s= s1.substring(0,1)+s2.substring(0,1)+s3.substring(0,1); System.out.print(s.toUpperCase()); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String a = in . next ( ) ; StringBuilder s = new StringBuilder ( ) ; for ( int i = 0 ; i < a . length ( ) ; i ++ ) { if ( a . charAt ( i ) == '1' ) s . append ( a . charAt ( i ) ) ; else if ( a . charAt ( i ) == '0' ) s . append ( a . charAt ( i ) ) ; else { if ( s . length ( ) != 0 ) { s . deleteCharAt ( s . length ( ) - 1 ) ; } } } System . out . println ( s ) ; } }
import java . util . * ; public class Main { private long [ ] trarray = new long [ 3 ] ; private long minDiv ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int m = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; Main soln = new Main ( ) ; soln . minDiv = Math . min ( m , n ) ; long [ ] temp = new long [ 3 ] ; for ( int i = 1 ; i <= m / 2 ; i ++ ) { temp [ 0 ] = ( long ) i * n ; soln . digR ( temp , m - i , n ) ; soln . digC ( temp , m - i , n ) ; } for ( int i = 1 ; i <= n / 2 ; i ++ ) { temp [ 0 ] = ( long ) i * m ; soln . digR ( temp , m , n - i ) ; soln . digC ( temp , m , n - i ) ; } System . out . println ( soln . minDiv ) ; } private void digR ( long [ ] temp , int m , int n ) { int j = m / 2 ; temp [ 1 ] = ( long ) j * n ; temp [ 2 ] = ( long ) ( m - j ) * n ; this . calcMinDiv ( temp ) ; } private void digC ( long [ ] temp , int m , int n ) { int j = n / 2 ; temp [ 1 ] = ( long ) j * m ; temp [ 2 ] = ( long ) ( n - j ) * m ; this . calcMinDiv ( temp ) ; } private void calcMinDiv ( long [ ] temp ) { this . trarray = Arrays . copyOf ( temp , temp . length ) ; Arrays . sort ( this . trarray ) ; long div = this . trarray [ 2 ] - this . trarray [ 0 ] ; this . minDiv = ( div < this . minDiv ) ? div : minDiv ; } }
import java . util . * ; import java . lang . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int l [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { l [ i ] = sc . nextInt ( ) ; } Arrays . sort ( l ) ; int sum = 0 ; for ( int i = 0 ; i < k ; i ++ ) { sum += l [ n - i - 1 ] ; } System . out . println ( sum ) ; } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { try { BufferedReader br = createBufferedReader ( ) ; String line = br . readLine ( ) ; System . out . println ( method ( line ) ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; } } private static String method ( final String str ) { if ( str . equals ( " Sunny " ) ) { return " Cloudy " ; } else if ( str . equals ( " Cloudy " ) ) { return " Rainy " ; } else if ( str . equals ( " Rainy " ) ) { return " Sunny " ; } return " " ; } // 以下問題問わずに共通部分 // 標準入力の BufferedReader を返す. private static BufferedReader createBufferedReader() { InputStreamReader isr =new InputStreamReader(System.in); return new BufferedReader(isr); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String N = sc . next ( ) ; System . out . println ( " ABC " + N ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner stdIn = new Scanner ( System . in ) ; String s = stdIn . next ( ) ; switch ( s ) { case " SUN " : System . out . println ( 7 ) ; break ; case " MON " : System . out . println ( 6 ) ; break ; case " TUE " : System . out . println ( 5 ) ; break ; case " WED " : System . out . println ( 4 ) ; break ; case " THU " : System . out . println ( 3 ) ; break ; case " FRI " : System . out . println ( 2 ) ; break ; case " SAT " : System . out . println ( 1 ) ; break ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; if ( x == 0 && y == 0 ) break ; if ( x < y ) System . out . println ( x + " " + y ) ; else System . out . println ( y + " " + x ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { printAChessboard ( ) ; } public static void printAChessboard ( ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) { break ; } for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( i % 2 == 0 ) { if ( j % 2 == 0 ) { System . out . print ( " # " ) ; } else { System . out . print ( " . " ) ; } } else { if ( j % 2 == 0 ) { System . out . print ( " . " ) ; } else { System . out . print ( " # " ) ; } } } System . out . println ( " " ) ; } System . out . println ( " " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String s = scan . next ( ) ; String t = scan . next ( ) ; char [ ] S = s . toCharArray ( ) ; char [ ] T = t . toCharArray ( ) ; int count = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( S [ i ] != T [ i ] ) { count += 1 ; } } System . out . println ( count ) ; } }
import java . util . * ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // Your code here! Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int h = n/3600; int m = (n%3600)/60; int s = (n%3600)%60; System.out.printf("%d:%d:%d\n", h, m, s); } }
import java . math . BigDecimal ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { //long start = System.currentTimeMillis(); final long MOD = (long)Math.pow(10,9)+7; Scanner sc = new Scanner(System.in); String s = sc.next(); StringBuilder sb = new StringBuilder(s); if (s.substring(s.length()-1,s.length()) .equals("s")) sb.append("es"); else sb.append("s"); System.out.println(sb.toString()); sc.close(); // long end = System.currentTimeMillis(); // System.err.println((end-start)+"ms"); } }
import java . util . * ; import java . io . * ; public class Main { private static void solve ( ) { //Implement solution here. char[] s = next().toCharArray(); char[] t = next().toCharArray(); int result = 0; for(int i = 0; i < 3; i++) { if(s[i] == t[i]) { result++; } } System.out.println(result); } //Switch input source (stdin/file) private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); public static void main(String[] args){ String debugDataPath = System.getenv("DD_PATH"); if(debugDataPath != null){ try{ br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(debugDataPath)))); }catch(Exception e){ throw new RuntimeException(e); } } solve(); } //Input read utility private static StringTokenizer tokenizer = null; public static String next() { while (tokenizer == null || !tokenizer.hasMoreTokens()) { try { tokenizer = new StringTokenizer(br.readLine()); } catch (Exception e) { throw new RuntimeException(e); } } return tokenizer.nextToken(); } //Get next single int private static int ni() { return Integer.parseInt(next()); } //Get next single long private static long nl() { return Long.parseLong(next()); } //Get next single double private static double nd() { return Double.parseDouble(next()); } //Get next int array from one line private static int[] na(int n) { int[] a = new int[n]; for (int i = 0; i < n; i++) a[i] = ni(); return a; } //Get next char array from one line private static char[] ns() { return next().toCharArray(); } //Get next long array from one line private static long[] nal(int n) { long[] a = new long[n]; for (int i = 0; i < n; i++) a[i] = nl(); return a; } }
import java . util . Scanner ; public class Main { // p_sum: 1, 3, 7, 15, ... // b_sum: 1, 5, 13, 29, ... // 1: BPPPB // 2: BBPPPBPBPPPBB // 3: BBBPPPBPBPPPBBPBBPPPBPBPPPBBB void run() { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); long x = sc.nextLong(); long p = 1; long b = 1; for (int i = 1; i <= n; i++) { p = p * 2 + 1; b = b * 2 + 3; } System.out.println(solve(n, b, p, x)); } long solve(int n, long b, long p, long x) { // System.err.println(n + " " + b + " " + p + " " + x); if (x <= 0) return 0; if (n == 0) return 1; if ((b + 1) / 2 > x) { return solve(n - 1, (b + 1) / 2 - 2, (p + 1) / 2 - 1, x - 1); } else if ((b + 1) / 2 == x) { return solve(n - 1, (b + 1) / 2 - 2, (p + 1) / 2 - 1, x - 1) + 1; } else { return solve(n - 1, (b + 1) / 2 - 2, (p + 1) / 2 - 1, x - (b + 1) / 2) + (p + 1) / 2; } } public static void main(String[] args) { new Main().run(); } }
import java . io . IOException ; import java . io . BufferedReader ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { final BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str ; int a [ ] = new int [ 26 ] ; while ( ( str = br . readLine ( ) ) != null ) { str = str . toLowerCase ( ) ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { char ch = str . charAt ( i ) ; if ( ch <= 'z' && ch >= 'a' ) a [ ch - 97 ] ++ ; } } for ( int i = 0 ; i < 26 ; i ++ ) { System . out . println ( ( char ) ( 'a' + i ) + " : " + a [ i ] ) ; } } }
import java . io . * ; import java . util . Arrays ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; String [ ] numb = str . split ( " " ) ; int a = Integer . parseInt ( numb [ 0 ] ) ; int b = Integer . parseInt ( numb [ 1 ] ) ; int c = Integer . parseInt ( numb [ 2 ] ) ; int num [ ] = { a , b , c } ; Arrays . sort ( num ) ; System . out . println ( num [ 0 ] + " " + num [ 1 ] + " " + num [ 2 ] ) ; } }
import java . util . * ; class Main { void solve ( ) { Scanner sc = new Scanner ( System . in ) ; long [ ] [ ] [ ] dp = new long [ 1001 ] [ 101 ] [ 10 ] ; for ( int i = 0 ; i <= 100 ; i ++ ) dp [ i ] [ i ] [ 1 ] = 1 ; for ( int i = 2 ; i <= 9 ; i ++ ) { for ( int j = 0 ; j <= 100 ; j ++ ) { for ( int k = j ; k <= 1000 ; k ++ ) { for ( int l = 0 ; l < j ; l ++ ) { dp [ k ] [ j ] [ i ] += dp [ k - j ] [ l ] [ i - 1 ] ; } } } } while ( true ) { int n = sc . nextInt ( ) ; int s = sc . nextInt ( ) ; if ( n == 0 && s == 0 ) break ; long cnt = 0 ; for ( int i = 0 ; i <= 100 ; i ++ ) cnt += dp [ s ] [ i ] [ n ] ; System . out . println ( cnt ) ; } } public static void main ( String [ ] args ) { new Main ( ) . solve ( ) ; } }
import java . io . * ; class Main { public static void main ( String [ ] args ) { BufferedReader kb = new BufferedReader ( new InputStreamReader ( System . in ) ) ; try { int n = Integer . parseInt ( kb . readLine ( ) ) ; String [ ] nums = kb . readLine ( ) . split ( " " ) ; int [ ] A = new int [ n ] ; int i , j ; for ( i = 0 ; i < n ; i ++ ) { A [ i ] = Integer . parseInt ( nums [ i ] ) ; } int cnt = 0 ; cnt = bubbleSort ( A , n ) ; StringBuilder output = new StringBuilder ( 200 + 1 ) ; for ( i = 0 ; i < n ; i ++ ) { output . append ( A [ i ] ) ; output . append ( " " ) ; } output . deleteCharAt ( output . lastIndexOf ( " " ) ) ; System . out . println ( output ) ; System . out . println ( cnt ) ; kb . close ( ) ; } catch ( IOException e ) { System . err . println ( e ) ; } } static int bubbleSort ( int [ ] A , int n ) { int tmp ; int i , j , cnt ; cnt = 0 ; for ( i = 0 ; i < n ; i ++ ) { for ( j = n - 1 ; i < j ; j -- ) { if ( A [ j ] < A [ j - 1 ] ) { tmp = A [ j - 1 ] ; A [ j - 1 ] = A [ j ] ; A [ j ] = tmp ; cnt ++ ; } } } return cnt ; } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . List ; import java . util . Map ; import java . util . Scanner ; import java . util . HashMap ; import java . util . ArrayList ; /** * Built using CHelper plug-in * Actual solution is at the top */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskG solver = new TaskG ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class TaskG { public void solve ( int testNumber , Scanner in , PrintWriter out ) { int N = in . nextInt ( ) ; // nodes int E = in.nextInt(); // edges Map<Integer, List<Integer>> graph = new HashMap<>(); populateGraph(graph, in, E); int longestPath = getLongestPathFrom(graph); out.print(longestPath); } private int getLongestPathFrom(Map<Integer, List<Integer>> graph) { Map<Integer, Integer> memo = new HashMap<>(); int longestPath = -1; for (int node : graph.keySet()) { longestPath = Math.max(longestPath, getLongestPathFrom(node, graph, memo)); } return longestPath; } private int getLongestPathFrom(int node, Map<Integer, List<Integer>> graph, Map<Integer, Integer> memo) { if (memo.containsKey(node)) return memo.get(node); List<Integer> neighbours = graph.get(node); int longestPath = 0; for (int n : neighbours) { if (!memo.containsKey(n)) longestPath = Math.max(longestPath, 1 + getLongestPathFrom(n, graph, memo)); else longestPath = Math.max(longestPath, 1 + memo.get(n)); } memo.put(node, longestPath); return longestPath; } private void populateGraph(Map<Integer, List<Integer>> graph, Scanner in, int e) { for (int i = 0; i < e; i++) { int startNode = in.nextInt(); int endNode = in.nextInt(); List<Integer> neighbours = graph.getOrDefault(startNode, new ArrayList<>()); neighbours.add(endNode); graph.put(startNode, neighbours); if (!graph.containsKey(endNode)) { graph.put(endNode, new ArrayList<>()); } } } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = Integer . parseInt ( a + " " + b ) ; int d = ( int ) Math . sqrt ( c ) ; System . out . println ( c == d * d ? " Yes " : " No " ) ; } }
import java . util . ArrayList ; import java . util . Scanner ; public class Main { private static Scanner sc = new Scanner ( System . in ) ; private static ArrayList < String > blocksStacking = new ArrayList < String > ( ) ; private static ArrayList < String > blocksRemoved = new ArrayList < String > ( ) ; public static void main ( String [ ] args ) { while ( sc . hasNext ( ) ) { if ( manipulation ( sc . next ( ) ) ) { //³íÉìªsíêÄ¢éÈçA½àµÈ¢ } else{ break; } } for(int i = 0; i < blocksRemoved.size(); i++){ System.out.println(blocksRemoved.get(i)); } } public static boolean manipulation(String input){ if(input.compareTo("push") == 0){ String block = sc.next(); blocksStacking.add(block); return true; } else if(input.compareTo("pop") == 0){ int lastIndex = blocksStacking.size() - 1; String block = blocksStacking.get(lastIndex); blocksStacking.remove(lastIndex); blocksRemoved.add(block); return true; } else if(input.compareTo("quit") == 0){ return false; } else{ return true; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; String time = scn . next ( ) . substring ( 5 ) ; if ( time . charAt ( 0 ) == '1' || Character . getNumericValue ( time . charAt ( 1 ) ) > 4 ) { System . out . println ( " TBD " ) ; } else { System . out . println ( " Heisei " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; double t = 0 ; for ( int i = 0 ; i < n ; i ++ ) { t += 1 / sc . nextDouble ( ) ; } System . out . println ( 1 / t ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int num = sc . nextInt ( ) ; int [ ] output = new int [ num ] ; int x = 0 ; for ( int i = 0 ; i < num ; i ++ ) { output [ i ] = i + 1 ; if ( ( output [ i ] % 3 == 0 ) ) { System . out . printf ( " %d " , output [ i ] ) ; } else { x = output [ i ] ; do { if ( x % 10 == 3 ) { System . out . printf ( " %d " , output [ i ] ) ; break ; } x = x / 10 ; } while ( x != 0 ) ; } } System . out . printf ( " \n " ) ; } }
import java . util . * ; import java . util . stream . Stream ; public class Main { static class Product implements Comparable < Product > { String label ; double incomeRate ; Product ( String l , int p , int a , int b , int c , int d , int e , int f , int s , int m ) { this . label = l ; this . incomeRate = ( double ) ( f * s * m - p ) / ( a + b + c + ( d + e ) * m ) ; } public String getLabel ( ) { return this . label ; } @ Override public int compareTo ( Product o ) { if ( this . incomeRate > o . incomeRate ) return 1 ; else if ( this . incomeRate < o . incomeRate ) return - 1 ; return o . label . compareTo ( this . label ) ; } } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n ; String [ ] input ; int [ ] params ; String label ; List < Product > products ; while ( true ) { n = Integer . parseInt ( sc . nextLine ( ) . trim ( ) ) ; if ( n == 0 ) break ; products = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { input = sc . nextLine ( ) . trim ( ) . split ( " " ) ; // System.out.println(Arrays.toString(input)); label = input[0]; params = Stream.of(Arrays.copyOfRange(input, 1, input.length)).mapToInt(Integer::parseInt).toArray(); // System.out.println(Arrays.toString(params)); products.add(new Product(label, params[0], params[1], params[2], params[3], params[4], params[5], params[6], params[7], params[8])); } // System.out.println(products.size()); Collections.sort(products); for (int i = 0; i < n; i++) { System.out.println(products.get(n-i-1).getLabel()); } System.out.println("#"); } } }
import java . util . * ; import java . io . InputStreamReader ; import java . io . BufferedReader ; import java . util . Arrays ; import java . util . List ; import java . util . ArrayList ; import java . util . ArrayDeque ; import java . util . Deque ; import java . util . Collections ; import java . awt . Point ; public class Main { public static void main ( String [ ] args ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] abc = br . readLine ( ) . split ( " " ) ; int a = Integer . parseInt ( abc [ 0 ] ) ; int b = Integer . parseInt ( abc [ 1 ] ) ; int c = Integer . parseInt ( abc [ 2 ] ) ; System . out . println ( a * b / 2 ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; int ans = ( int ) Math . ceil ( ( double ) n / x ) ; //System.out.println(ans); System.out.println(ans*t); } }
import java . util . Arrays ; import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int [ ] aa = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { aa [ i ] = sc . nextInt ( ) ; } Arrays . sort ( aa ) ; System . out . println ( aa [ 2 ] * 10 + aa [ 1 ] + aa [ 0 ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = Integer . parseInt ( sc . next ( ) ) ; sc . next ( ) ; sc . next ( ) ; sc . next ( ) ; int e = Integer . parseInt ( sc . next ( ) ) ; int k = Integer . parseInt ( sc . next ( ) ) ; if ( e - a > k ) { System . out . println ( " :( " ) ; } else { System . out . println ( " Yay! " ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; import static java . lang . Integer . parseInt ; /** * A Pair of Prizes */ public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String line ; String [ ] words ; while ( ( line = br . readLine ( ) ) != null && ! line . isEmpty ( ) ) { int N = parseInt ( line ) ; if ( N == 0 ) break ; int ans = 0 ; boolean a = false ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; while ( st . hasMoreTokens ( ) ) { int k = parseInt ( st . nextToken ( ) ) ; if ( k > 0 ) ans ++ ; if ( k > 1 ) a |= true ; } System . out . println ( a ? ans + 1 : " NA " ) ; } } }
import java . util . Scanner ; public class Main { private static int n ; private static int K ; private static int [ ] A ; private static long [ ] B ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; n = in . nextInt ( ) ; K = in . nextInt ( ) ; A = new int [ n ] ; B = new long [ n ] ; long rs = 0 ; for ( int i = 0 ; i < n ; i ++ ) { A [ i ] = in . nextInt ( ) ; B [ i ] = in . nextLong ( ) ; if ( ( K & A [ i ] ) == A [ i ] ) { rs = rs + B [ i ] ; } } for ( int i = 30 ; i >= 0 ; i -- ) { int tmp = 1 << i ; if ( ( K & tmp ) == tmp ) { int x = ( K ^ tmp ) | ( tmp - 1 ) ; long ans = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( x & A [ j ] ) == A [ j ] ) { ans = ans + B [ j ] ; } } rs = ans > rs ? ans : rs ; } } System . out . println ( rs ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner input = new Scanner ( System . in ) ; String s = input . nextLine ( ) ; System . out . println ( s . toUpperCase ( ) ) ; } }
import java . util . Scanner ; public class Main { private static Scanner sc ; public static void main ( String [ ] args ) { sc = new Scanner ( System . in ) ; String n = sc . next ( ) ; String [ ] nArray = n . split ( " " ) ; long sum = 0 ; for ( String nChar : nArray ) { sum += Integer . parseInt ( nChar ) ; } if ( 0 == ( sum % 9 ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( a * b % 2 == 0 ) { System . out . println ( " Even " ) ; } else { System . out . println ( " Odd " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long [ ] A = new long [ N + 1 ] ; Arrays . setAll ( A , i -> sc . nextLong ( ) ) ; long [ ] S = new long [ N + 1 ] ; S [ 0 ] = A [ N ] ; for ( int i = 1 ; i <= N ; i ++ ) S [ i ] = S [ i - 1 ] + A [ N - i ] ; long ans = 1 ; long [ ] dp = new long [ N + 1 ] ; dp [ 0 ] = 1 ; for ( int i = 0 ; i < N ; i ++ ) { dp [ i + 1 ] = Math . min ( ( dp [ i ] - A [ i ] ) * 2 , S [ N - i - 1 ] ) ; ans += dp [ i + 1 ] ; } for ( int i = 0 ; i <= N ; i ++ ) if ( dp [ i ] < A [ i ] ) { System . out . println ( - 1 ) ; return ; } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO ????????????????????????????????????????????? Scanner scan = new Scanner(System.in); // ?????¢?????°?????????????????? int l1 = scan.nextInt(); int l2 = scan.nextInt(); int l3 = scan.nextInt(); int l4 = scan.nextInt(); int l5 = scan.nextInt(); int l6 = scan.nextInt(); // ????????????????????? String s = scan.next(); int l = s.length(); for(int i = 0; i<l; i++){ String meirei = s.substring(i, i+1); int lx =0; if(meirei.equals("S")){ lx = l1; l1 = l5; l5 = l6; l6 = l2; l2 = lx; } else if(meirei.equals("N")){ lx = l1; l1 = l2; l2 = l6; l6 = l5; l5 = lx; } else if(meirei.equals("W")){ lx = l1; l1 = l3; l3 = l6; l6 = l4; l4 = lx; } else if(meirei.equals("E")){ lx = l1; l1 = l4; l4 = l6; l6 = l3; l3 = lx; } } System.out.println(l1); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int K = sc . nextInt ( ) ; // a+b = l*K, b = l*K - a // b+c = m*K, l*K + n*K - 2*a = m*K // c+a = n*K, c = n*K - a // // (l+n-m)*K = 2*a // x*K = 2*a // y*K = 2*b // z*K = 2*c int sum1 = N/K; int sum2 = 0; if (K%2 == 0) { sum2 = (N+K/2)/K; } System.out.println((long)sum1*sum1*sum1 + (long)sum2*sum2*sum2); } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader a = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = a . readLine ( ) ; int x = Integer . parseInt ( str ) ; System . out . println ( x * x * x ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; char [ ] a = sc . next ( ) . toCharArray ( ) ; sc . close ( ) ; if ( Character . isUpperCase ( a [ 0 ] ) ) { System . out . println ( " A " ) ; } else { System . out . println ( " a " ) ; } } }
import java . awt . geom . * ; import java . io . * ; import java . util . * ; public class Main { Scanner sc = new Scanner ( System . in ) ; LinkedList < String > stack ; HashMap < String , HashSet < String > > map ; String [ ] keys ; HashSet < String > map0 ; private void doit ( ) { keys = sc . nextLine ( ) . split ( " \\ . " ) ; map0 = new HashSet < String > ( ) ; stack = new LinkedList < String > ( ) ; map = new HashMap < String , HashSet < String > > ( ) ; mapping ( 0 ) ; check ( ) ; // // //debug // for(int i = 0; i < keys.length; i++){ // System.out.println("i=" + i + ":" + keys[i] + "."); // } // System.out.println(keys.length); // // //debug // for(String key: map.keySet()){ // System.out.println("key=" + key +" "+ "valu="+map.get(key)); // } // System.out.println(); } private void check() { if(! map0.contains(keys[1])){ System.out.println("no such property"); return; } for(int i = 1; i < keys.length; i++){ if(map.containsKey(keys[i])){ if(i == 1) continue; HashSet<String> temp = map.get(keys[i-1]); if(temp.contains(keys[i])){ } else{ System.out.println("no such property"); return; } } else{ System.out.println("no such property"); return; } } String now = keys[keys.length-1]; HashSet<String> hs = map.get(now); if(hs.size() > 1){ System.out.println("object"); } else { String value = ""; for(String s: hs){ value = s; } if(map.containsKey(value) && ! value.equals(now)){ System.out.println("object"); } else{ System.out.println("string \"" + value +"\""); } } } private HashSet<String> mapping(int n) { HashSet<String> res = new HashSet<String>(); while(true){ String line = gettoken(); if(line == null) return res; int count = ci(line); if(count == n){ String [] arr = line.split(":"); String key = arr[0].trim(); res.add(key); if(n == 0){ map0.add(key); } mappingItem(n, line); } else{ stack.add(line); return res; } } } private void mappingItem(int n, String line) { String [] arr = line.split(":"); String key = arr[0].trim(); if(arr.length == 1){ String nline = gettoken(); if(nline == null) return; int m = ci(nline); stack.add(nline); HashSet<String> value = mapping(m); map.put(key, value); } else{ HashSet<String> value = new HashSet<String>(); value.add(arr[1].substring(1)); map.put(key, value); } } private String gettoken() { if(! stack.isEmpty()){ return stack.removeLast(); } if(sc.hasNext()){ return sc.nextLine(); } return null; } private int ci(String line) { int count = 0; for(int i = 0; i < line.length(); i++){ if(line.charAt(i) != ' '){ return count; } count++; } return -1; } public static void main(String [] args){ new Main().doit(); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int d = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int dn = 1 ; for ( int i = 0 ; i < d ; i ++ ) { dn *= 100 ; } if ( n < 100 ) { System . out . println ( dn * n ) ; } else { System . out . println ( dn * n + dn * 1 ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { int count = 0 ; boolean sw = false ; int max = Integer . MIN_VALUE ; int min = Integer . MAX_VALUE ; double dMax = Double . MIN_VALUE ; double dMin = Double . MAX_VALUE ; //input Scanner sc = new Scanner(System.in); //int n = sc.nextInt(); int m1 = sc.nextInt(); int d1 = sc.nextInt(); int m2 = sc.nextInt(); int d2 = sc.nextInt(); if (m2 != m1 && d1>d2) { System.out.println(1); }else { System.out.println(0); } sc.close(); } public class Pair<F,S> { private final F first; private final S second; Pair(F first,S second) { this.first = first; this.second = second; } public void print() { System.out.println("("+this.first+","+this.second+")"); } //get public F first() {return this.first;} public S second() {return this.second;} @Override public boolean equals(Object object) { if (object instanceof Pair) { Pair pair = (Pair)object; return this.first==pair.first && this.second==pair.second; }else { return false; } } @Override public int hashCode() { return Objects.hash(first,second); } } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; while ( true ) { final int n = Integer . parseInt ( br . readLine ( ) ) ; if ( n == 0 ) { break ; } Map < String , Long > data = new HashMap < > ( n ) ; List < String > out = new ArrayList < > ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; String e = st . nextToken ( ) ; Long p = Long . parseLong ( st . nextToken ( ) ) ; Long q = Long . parseLong ( st . nextToken ( ) ) ; Long total = data . getOrDefault ( e , 0L ) + p * q ; data . put ( e , total ) ; if ( total >= 1_000_000L ) { if ( out . contains ( e ) == false ) { System . out . println ( e ) ; out . add ( e ) ; } } } if ( out . isEmpty ( ) ) { System . out . println ( " NA " ) ; } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; while ( s . hasNextDouble ( ) ) { double a = s . nextDouble ( ) ; double b = s . nextDouble ( ) ; double c = s . nextDouble ( ) ; double d = s . nextDouble ( ) ; double e = s . nextDouble ( ) ; double f = s . nextDouble ( ) ; double x = ( c * e - b * f ) / ( a * e - b * d ) ; double y = ( c * d - a * f ) / ( b * d - a * e ) ; if ( x == 0 ) x = 0 ; if ( y == 0 ) y = 0 ; System . out . printf ( " %.3f %.3f \n " , x , y ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int s = sc . nextInt ( ) ; int h = s / 3600 ; int m = ( s - h * 3600 ) / 60 ; int s1 = s - h * 3600 - m * 60 ; System . out . println ( h + " : " + m + " : " + s1 ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int K = scan . nextInt ( ) ; int A = scan . nextInt ( ) ; int B = scan . nextInt ( ) ; int cnt = 0 ; for ( int i = A ; i <= B ; i ++ ) { if ( i % K == 0 ) { cnt = cnt + 1 ; } } if ( cnt >= 1 ) { System . out . println ( " OK " ) ; } else { System . out . println ( " NG " ) ; } scan . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int ans = n / ( 2 * d + 1 ) ; if ( n % ( 2 * d + 1 ) == 0 ) { System . out . println ( ans ) ; } else { System . out . println ( ans + 1 ) ; } } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . Scanner ; /** * Built using CHelper plug-in * Actual solution is at the top * * @author mikit */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; AAlready2018 solver = new AAlready2018 ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class AAlready2018 { public void solve ( int testNumber , Scanner in , PrintWriter out ) { out . println ( " 2018 " + in . next ( ) . substring ( 4 ) ) ; } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; if ( Math . abs ( a - c ) <= d ) { System . out . println ( " Yes " ) ; } else if ( ( Math . abs ( a - b ) <= d ) && ( Math . abs ( b - c ) <= d ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { var scanner = new Scanner ( System . in ) ; var s = scanner . next ( ) ; if ( " ABC " . equals ( s ) ) { System . out . println ( " ARC " ) ; } else { System . out . println ( " ABC " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n % 10 == 3 || n % 100 == 3 ) { System . out . println ( " bon " ) ; } else if ( n % 10 == 0 || n % 10 == 1 | n % 10 == 6 || n % 10 == 8 ) { System . out . println ( " pon " ) ; } else System . out . println ( " hon " ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; String a = sc . nextLine ( ) ; System . out . println ( myFunction ( a ) ) ; } public static String myFunction ( String s ) { if ( s . charAt ( 2 ) == s . charAt ( 3 ) && s . charAt ( 4 ) == s . charAt ( 5 ) ) return " Yes " ; return " No " ; } }
import java . util . Scanner ; public class Main { static Scanner scanner ; public static void main ( String [ ] args ) { scanner = new Scanner ( System . in ) ; int x = gi ( ) ; int m = uclid ( 360 , x ) ; // if (k>k2) { // System.out.println("NO"); // } else { // System.out.println("YES"); // } System.out.println(360/m); } // s進数で表した時の桁数 public static int uclid(int m, int n) { if (m<n) { m^=n; n^=m; m^=n; } while(true) { int t=m%n; if (t==0) { return n; } else { m=n; n=t; } } } // 文字列として入力を取得 public static String gs() { return scanner.next(); } // intとして入力を取得 public static int gi() { return Integer.parseInt(scanner.next()); } // longとして入力を取得 public static long gl() { return Long.parseLong(scanner.next()); } // doubleとして入力を取得 public static double gd() { return Double.parseDouble(scanner.next()); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; int N = S . length ( ) ; for ( int i = 0 ; i < N ; i ++ ) System . out . print ( " x " ) ; System . out . println ( ) ; sc . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; if ( x == 0 ) { System . out . println ( 1 ) ; } else { System . out . println ( 0 ) ; } } }
import java . io . * ; public class Main { public static void main ( String args [ ] ) throws IOException { InputStreamReader isr = new InputStreamReader ( System . in ) ; int pos = - 1 ; for ( int next ; ( next = isr . read ( ) ) != ' ' ; pos = next ) ; if ( ( pos & 1 ) == 0 ) { System . out . println ( " Even " ) ; return ; } for ( int next ; ( next = isr . read ( ) ) != '\n' ; pos = next ) ; if ( ( pos & 1 ) == 0 ) { System . out . println ( " Even " ) ; return ; } System . out . println ( " Odd " ) ; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . * ; import java . math . * ; import java . util . * ; class Main { public static void main ( String [ ] args ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String S = br . readLine ( ) ; String t = br . readLine ( ) ; int min = Integer . MAX_VALUE ; for ( int i = 0 ; i < S . length ( ) - t . length ( ) + 1 ; i ++ ) { String s = S . substring ( i , i + t . length ( ) ) ; int count = 0 ; for ( int j = 0 ; j < t . length ( ) ; j ++ ) { if ( t . charAt ( j ) != s . charAt ( j ) ) { count ++ ; } if ( count >= min ) { break ; } } min = Math . min ( min , count ) ; } System . out . print ( min ) ; } }
import java . util . Scanner ; public class Main { public static void main ( final String [ ] args ) throws Exception { final Scanner scan = new Scanner ( System . in ) ; String str1 = scan . next ( ) ; String str2 = scan . next ( ) ; scan . close ( ) ; if ( str1 . equals ( str2 . substring ( 0 , str2 . length ( ) - 1 ) ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int[][] a = new int[2][n]; int[][] d = new int[2][n]; for(int i=0; i<2; i++) { for(int j=0; j<n; j++) { a[i][j] = sc.nextInt(); } } d[0][0] = a[0][0]; d[1][0] = d[0][0] + a[1][0]; for(int i=0; i<2; i++) { for(int j=1; j<n; j++) { if(i==0) { d[i][j] = d[i][j-1]+a[i][j]; } else { d[i][j] = Math.max(d[i-1][j]+a[i][j], d[i][j-1]+a[i][j]); } } } System.out.println(d[1][n-1]); } static int binarySearch(int[] A, int x) { int l = 0; int r = A.length; while(l<r) { int mid = (l+r)/2; if(A[mid] == x) return mid; else if(x<A[mid]) r = mid; else l = mid+1; } return -1; } static long upper_bound(int[] A, int b) { // bよりおおきい値がはじめて出てくるindexを返す return lower_bound(A, b+1); } static long lower_bound(int[] A, int b) { // b以上の値がはじめて出てくるindexを返す int lb=0; int ub=A.length; while(ub>lb) { int mid = (lb+ub)/2; if(A[mid]>=b) ub = mid; else lb = mid+1; } return lb; } // union find lib // usage: // 最初にinitを呼ぶ // root: 直接は呼ばないで // unite: まとめる // same: グループ判定 static void init(int par[], int N) { for(int i=0; i<N; i++) { par[i] = i; } } static int root(int x, int [] par) { if(par[x] == x) { return x; } else { return (par[x] = root(par[x], par)); } } static boolean same(int x, int y, int[] par) { return root(x, par) == root(y, par); } static void unite(int x, int y, int[] par) { x = root(x, par); y = root(y, par); if(x == y) return; par[x] = y; } // end union find lib // number lib static int max(int...ls) { int ans = Integer.MIN_VALUE; for(int i=0; i<ls.length; i++) { ans = Math.max(ans, ls[i]); } return ans; } static int min(int...ls) { int ans = Integer.MAX_VALUE; for(int i=0; i<ls.length; i++) { ans = Math.min(ans, ls[i]); } return ans; } static long lcm(long a, long b) { return a*(b/gcd(a, b)); } static long gcd(long a, long b) { long ta = Math.max(a, b); long tb = Math.min(a, b); long tmp; while((tmp = ta%tb) != 0) { ta = tb; tb = tmp; } return tb; } static long modcomb(long n, long k, long mod) { if(k==1) { return n; } long ans = 1; for(long i=n; i>=n-k+1; i--) { ans = (ans * i)%mod; } for(long i=k; 0<i; i--) { ans = (ans * modpow(i, mod-2, mod)) % mod; } return ans; } static long modpow(long a, long b, long mod) { if(b==0) return 1; if(b%2==0) { long d = modpow(a, b/2, mod); return (d*d)%mod; } else { return (a*modpow(a, b-1, mod))%mod; } } static int disit(long a, long d) { int count = 0; while(a!=0) { a = a/d; count++; } return count; } // end number lib }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int C = sc . nextInt ( ) ; int able = B / A ; if ( able > C ) { System . out . println ( C ) ; } else { System . out . println ( able ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) break ; for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( i == 0 || i == H - 1 ) { System . out . print ( " # " ) ; } else { if ( j == 0 || j == W - 1 ) { System . out . print ( " # " ) ; } else { System . out . print ( " . " ) ; } } } System . out . println ( ) ; } System . out . println ( ) ; } sc . close ( ) ; } }
import java . util . ArrayList ; import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { String [ ] str ; String s ; Scanner scan = new Scanner ( System . in ) ; ArrayList < String > stack = new ArrayList < String > ( ) ; ArrayList < String > pop = new ArrayList < String > ( ) ; int current = - 1 ; while ( true ) { s = scan . nextLine ( ) ; str = s . split ( " " ) ; if ( str [ 0 ] . equals ( " quit " ) ) { break ; } else if ( str [ 0 ] . equals ( " push " ) ) { stack . add ( str [ 1 ] ) ; current ++ ; } if ( str [ 0 ] . equals ( " pop " ) ) { pop . add ( stack . get ( current ) ) ; stack . remove ( current ) ; current -- ; } } for ( String i : pop ) { System . out . println ( i ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { int x ; Scanner scan = new Scanner ( System . in ) ; x = scan . nextInt ( ) ; x = x * x * x ; System . out . println ( x ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; char c = s . next ( ) . charAt ( 0 ) ; if ( c != 'z' ) { c ++ ; System . out . println ( c ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String [ ] tokens = in . nextLine ( ) . split ( " / " ) ; in . close ( ) ; int year = Integer . parseInt ( tokens [ 0 ] ) ; int month = Integer . parseInt ( tokens [ 1 ] ) ; int day = Integer . parseInt ( tokens [ 2 ] ) ; boolean isHeisei = false ; if ( year <= 2018 ) { isHeisei = true ; } else if ( month <= 4 ) { isHeisei = true ; } String result = isHeisei ? " Heisei " : " TBD " ; System . out . println ( result ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int value = sc . nextInt ( ) ; System . out . println ( ( int ) Math . pow ( value , 3 ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int z = sc . nextInt ( ) ; System . out . println ( z + " " + x + " " + y ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String lower = " qwertyuiopasdfghjklzxcvbnm " ; System . out . println ( lower . contains ( sc . next ( ) ) ? 'a' : 'A' ) ; } }
import java . util . Arrays ; import java . util . Scanner ; class Main { public static void main ( String [ ] args ) throws Exception { new Main ( ) . run ( ) ; } void tr ( Object ... objects ) { System . out . println ( Arrays . toString ( objects ) ) ; } void run ( ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long X = sc . nextLong ( ) ; long [ ] A = new long [ N ] ; for ( int i = 0 ; i < N ; ++ i ) { A [ i ] = sc . nextLong ( ) ; } Arrays . sort ( A ) ; int ans = 0 ; for ( int i = 0 ; i < N ; ++ i ) { if ( A [ i ] <= X ) { X -= A [ i ] ; ++ ans ; if ( i == N - 1 && X != 0 ) { -- ans ; } } } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int d = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int b = ( int ) Math . pow ( 100 , d ) ; int result = b * n ; if ( n % 100 == 0 ) result += b ; System . out . println ( result ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; while ( true ) { c = c - b ; if ( c < 1 ) { System . out . println ( " Yes " ) ; return ; } a = a - d ; if ( a < 1 ) { System . out . println ( " No " ) ; return ; } } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int maxRow = 3 ; int maxCol = 3 ; Map < Integer , Integer > locationMap = new HashMap < > ( ) ; boolean [ ] [ ] grid = new boolean [ maxRow ] [ maxCol ] ; for ( int i = 0 ; i < maxRow ; i ++ ) { for ( int j = 0 ; j < maxCol ; j ++ ) { locationMap . put ( sc . nextInt ( ) , i * maxCol + j ) ; } } int n = sc . nextInt ( ) ; while ( n -- > 0 ) { int b = sc . nextInt ( ) ; if ( ! locationMap . containsKey ( b ) ) continue ; int loc = locationMap . get ( b ) ; int row = loc / maxCol ; int col = loc % maxCol ; grid [ row ] [ col ] = true ; } for ( int i = 0 ; i < maxRow ; i ++ ) { if ( grid [ i ] [ 0 ] && grid [ i ] [ 1 ] && grid [ i ] [ 2 ] ) { System . out . println ( " Yes " ) ; return ; } if ( grid [ 0 ] [ i ] && grid [ 1 ] [ i ] && grid [ 2 ] [ i ] ) { System . out . println ( " Yes " ) ; return ; } } if ( grid [ 0 ] [ 0 ] && grid [ 1 ] [ 1 ] && grid [ 2 ] [ 2 ] || grid [ 2 ] [ 0 ] && grid [ 1 ] [ 1 ] && grid [ 0 ] [ 2 ] ) { System . out . println ( " Yes " ) ; return ; } System . out . println ( " No " ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { String a = " " ; int sum ; Scanner sc = new Scanner ( System . in ) ; while ( true ) { sum = 0 ; a = sc . nextLine ( ) ; if ( a . equals ( " 0 " ) ) { break ; } for ( int i = 0 ; i < a . length ( ) ; i ++ ) { sum += Character . getNumericValue ( a . charAt ( i ) ) ; } System . out . println ( sum ) ; } sc . close ( ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int ans = 1 ; for ( int i = 0 ; i < 3 ; i ++ ) { ans = ans * x ; } System . out . printf ( " %d \n " , ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int m = sc . nextInt ( ) ; int f = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; if ( m == - 1 && f == - 1 && r == - 1 ) { break ; } if ( m == - 1 || f == - 1 ) { System . out . println ( " F " ) ; continue ; } int sum = m + f ; if ( sum >= 80 ) { System . out . println ( " A " ) ; } else if ( sum >= 65 && sum < 80 ) { System . out . println ( " B " ) ; } else if ( sum >= 50 && sum < 65 ) { System . out . println ( " C " ) ; } else if ( sum >= 30 && sum < 50 ) { if ( r >= 50 ) { System . out . println ( " C " ) ; } else { System . out . println ( " D " ) ; } } else { System . out . println ( " F " ) ; } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO ????????????????????????????????????????????? Scanner kb=new Scanner(System.in); double x1=kb.nextDouble(); double y1=kb.nextDouble(); double x2=kb.nextDouble(); double y2=kb.nextDouble(); double xd=x2-x1; double yd=y2-y1; System.out.printf( "%f\n",Math.sqrt(xd*xd+yd*yd)); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; StringBuilder sb = new StringBuilder ( sc . next ( ) ) ; sb . reverse ( ) ; if ( sc . next ( ) . equals ( sb . toString ( ) ) ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int number = sc . nextInt ( ) ; int sum = 0 ; for ( int i = 1 ; i <= number ; i ++ ) { sum += i ; } System . out . println ( sum ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int h = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc . nextInt ( ) ; h -= a ; if ( h <= 0 ) { break ; } } String result ; if ( h <= 0 ) { result = " Yes " ; } else { result = " No " ; } System . out . println ( result ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int [ ] A = new int [ 5 ] ; int count = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { A [ i ] = sc . nextInt ( ) ; } int k = sc . nextInt ( ) ; for ( int i = 4 ; i > 0 ; i -- ) { for ( int j = 3 ; j >= 0 ; j -- ) { if ( A [ i ] - A [ j ] > k ) { count ++ ; } } } if ( count > 0 ) { System . out . println ( " :( " ) ; } else { System . out . println ( " Yay! " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; long n = scanner . nextLong ( ) ; long y = 1 ; for ( long x = n ; 0 < x ; x -- ) y = y * x ; System . out . println ( y ) ; } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner scan = new Scanner ( System . in ) ; PrintWriter out = new PrintWriter ( new OutputStreamWriter ( System . out ) ) ; int n = scan . nextInt ( ) ; int r = scan . nextInt ( ) ; out . println ( n >= 10 ? r : r + ( 100 * ( 10 - n ) ) ) ; out . close ( ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Arrays ; public class Main { private static BufferedReader br = null ; static { br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; } /** * @param args */ public static void main ( String [ ] args ) { // TODO Auto-generated method stub String line = null; while((line = parseNum()) != null) { int nCnt = calc(line); System.out.println(nCnt); } } private static String parseNum() { String strNum = null; try { String line = br.readLine(); if (line != null) { if (!line.isEmpty()) { strNum = line; } } } catch (IOException e) {} return strNum; } private static int calc(String str) { int nCnt = 0; try { int nNum = Integer.parseInt(str); if (nNum <= 36) { for(int n1 = 0; n1 < 10; n1++) { if (n1 > nNum) { break; } for(int n2 = n1; n2 < 10; n2++) { if (n1 + n2 > nNum) { break; } for(int n3 = n2; n3 < 10; n3++) { if (n1 + n2 + n3 > nNum) { break; } for(int n4 = n3; n4 < 10; n4++) { if (n1 + n2 + n3 + n4 == nNum) { nCnt += getCnt(n1, n2, n3, n4); } else if (n1 + n2 + n3 + n4 > nNum) { break; } } } } } } } catch (NumberFormatException e) {} return nCnt; } private static int getCnt(int n1, int n2, int n3, int n4) { int nCnt = 0; int[] aNum = new int[4]; int[] aCnt = new int[4]; aNum[0] = n1; aNum[1] = n2; aNum[2] = n3; aNum[3] = n4; Arrays.sort(aNum); aCnt[0] = 1; for(int nLoop = 0, nTmp = 0; nLoop < aNum.length - 1; nLoop++) { nTmp += (aNum[nLoop] == aNum[nLoop+1]) ? 0 : 1; aCnt[nTmp]++; } nCnt = fact(aNum.length) / (fact(aCnt[0]) * fact(aCnt[1]) * fact(aCnt[2]) * fact(aCnt[3])); return nCnt; } private static int fact(int x) { int nFact = 1; for (int nLoop = 1; nLoop <= x; nLoop++) { nFact = nFact * nLoop; } return nFact; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; System . out . println ( x * x * x ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] a ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) , 1 ) ; String str = " " ; int num [ ] = new int [ 10 ] ; int top [ ] = new int [ 3 ] ; for ( int i = 0 ; i < 10 ; i ++ ) { str = br . readLine ( ) ; num [ i ] = Integer . parseInt ( str ) ; if ( top [ 0 ] < num [ i ] ) { top [ 2 ] = top [ 1 ] ; top [ 1 ] = top [ 0 ] ; top [ 0 ] = num [ i ] ; } else if ( top [ 1 ] < num [ i ] ) { top [ 2 ] = top [ 1 ] ; top [ 1 ] = num [ i ] ; } else if ( top [ 2 ] < num [ i ] ) { top [ 2 ] = num [ i ] ; } } System . out . println ( top [ 0 ] ) ; System . out . println ( top [ 1 ] ) ; System . out . println ( top [ 2 ] ) ; } }
import java . io . PrintWriter ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; Random r = new Random ( ) ; int N = sc . nextInt ( ) ; long L = sc . nextLong ( ) ; long T = sc . nextLong ( ) ; // int N = r.nextInt(10); // long L = r.nextInt(100); // long T = r.nextInt(1000); int[] x = new int[N]; boolean[] w = new boolean[N]; ArrayList<Integer> cw = new ArrayList<>(); ArrayList<Integer> ccw = new ArrayList<>(); for(int i=0; i<N; i++) { x[i] = sc.nextInt(); w[i] = sc.nextInt()==1; // x[i] = (i==0 ? 0 : x[i-1]) + r.nextInt(9) + 1; // w[i] = r.nextInt(2)==1; if(w[i]) cw.add(x[i]); else ccw.add(x[i]); } Collections.reverse(cw); if(cw.size()==0 || ccw.size()==0) { for(int i=0; i<N; i++) { pw.println((x[i]+(w[i]? T%L : L-(T%L)))%L); } } else { // long t=0; // boolean dirCW = true; // int cwIdx=0; // int ccwIdx=(-1-Collections.binarySearch(ccw, cw.get(0)))%ccw.size(); // int lane1 = -1, lane2 = -1; // boolean dir1=false; // boolean init = true; // while(t<2*L) { // if(init) { // t += (ccw.get(ccwIdx)-cw.get(cwIdx)+L) % L; // cwIdx++; // ccwIdx++; // init = false; // } else if(dirCW) { // int next = ccw.get(ccwIdx%ccw.size()) - ccw.get((ccwIdx-1)%ccw.size()); // if(next<=0) // next += L; // t += next; // ccwIdx++; // } else { // int next = cw.get((cwIdx-1)%cw.size()) - cw.get(cwIdx%cw.size()); // if(next<=0) // next += L; // t += next; // cwIdx++; // } // if(lane1==-1 && t>=2*(T%L)) { // lane1 = dirCW ? cw.get((cwIdx-1)%cw.size()) : ccw.get((ccwIdx-1)%ccw.size()); // dir1 = dirCW; // } // if(lane2==-1 && t>=2*L) { // lane2 = dirCW ? cw.get((cwIdx-1)%cw.size()) : ccw.get((ccwIdx-1)%ccw.size()); // } // dirCW ^= true; // } // int gap2 = Arrays.binarySearch(x, lane2) - Arrays.binarySearch(x, cw.get(0)); int[] pos = new int[N]; for(int i=0; i<N; i++) pos[i] = (int)((x[i]+(w[i]? T%L : L-(T%L)))%L); Arrays.sort(pos); // lane1 = (int)((lane1 + (dir1 ? T : L-(T%L)))%L); // int idx = Arrays.binarySearch(pos, lane1); // if(idx<N-1 && pos[idx]==pos[idx+1] && !dir1) // idx++; //// idx = (idx-1+N)%N; // idx = (idx - Arrays.binarySearch(x, cw.get(0)) + N)%N; // idx = (int)((idx + ((long)gap2+N)*(T/L))%N); long cnt = 0; for(int ccwx : ccw) { long dis = (ccwx-cw.get(0)+L)%L; cnt = (cnt + (2*T + L-dis-1)/L)%N; } int a = Arrays.binarySearch(pos, (int)((cw.get(0)+T)%L)); if(a>0 && pos[a-1]==pos[a]) a--; int cidx = (a - Arrays.binarySearch(x, cw.get(0)) - (int)cnt + N + N)%N; for(int i=0; i<N; i++) pw.println(pos[(cidx+i)%N]); // if(cidx!=idx) { // pw.println("OK :"+cidx); // pw.println("NG :"+idx); // } } sc.close(); pw.close(); } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; long [ ] x = new long [ n ] ; long [ ] y = new long [ n ] ; long [ ] z = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc . nextLong ( ) ; y [ i ] = sc . nextLong ( ) ; z [ i ] = sc . nextLong ( ) ; } long [ ] [ ] sum = new long [ 8 ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { sum [ 0 ] [ i ] += x [ i ] + y [ i ] + z [ i ] ; sum [ 1 ] [ i ] += x [ i ] + y [ i ] - z [ i ] ; sum [ 2 ] [ i ] += x [ i ] - y [ i ] + z [ i ] ; sum [ 3 ] [ i ] += - x [ i ] + y [ i ] + z [ i ] ; sum [ 4 ] [ i ] += - x [ i ] - y [ i ] + z [ i ] ; sum [ 5 ] [ i ] += - x [ i ] + y [ i ] - z [ i ] ; sum [ 6 ] [ i ] += x [ i ] - y [ i ] - z [ i ] ; sum [ 7 ] [ i ] += - x [ i ] - y [ i ] - z [ i ] ; } long [ ] result = new long [ 8 ] ; for ( int i = 0 ; i < 8 ; i ++ ) { Arrays . sort ( sum [ i ] ) ; for ( int j = n - 1 ; j >= n - m ; j -- ) result [ i ] += sum [ i ] [ j ] ; } Arrays . sort ( result ) ; System . out . println ( result [ 7 ] ) ; } static void dfs ( ) { } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws Exception { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; while ( true ) { String str = reader . readLine ( ) ; String array [ ] = new String [ 3 ] ; array = str . split ( " " ) ; int x = Integer . parseInt ( array [ 0 ] ) ; int y = Integer . parseInt ( array [ 2 ] ) ; String op = array [ 1 ] ; if ( op . equals ( " ? " ) ) { break ; } else if ( op . equals ( " + " ) ) { System . out . println ( x + y ) ; } else if ( op . equals ( " - " ) ) { System . out . println ( x - y ) ; } else if ( op . equals ( " * " ) ) { System . out . println ( x * y ) ; } else if ( op . equals ( " / " ) ) { System . out . println ( x / y ) ; } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; while ( in . hasNext ( ) ) { int N = in . nextInt ( ) ; int a [ ] [ ] = new int [ N ] [ 3 ] ; int b [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) a [ i ] [ j ] = in . nextInt ( ) ; } for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { boolean judge = true ; for ( int k = 0 ; k < N ; k ++ ) { if ( j == k ) continue ; if ( a [ j ] [ i ] == a [ k ] [ i ] ) { judge = false ; break ; } } if ( judge ) b [ j ] += a [ j ] [ i ] ; } } for ( int i = 0 ; i < N ; i ++ ) System . out . println ( b [ i ] ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; System . out . print ( s . charAt ( 0 ) ) ; System . out . print ( s . length ( ) - 2 ) ; System . out . print ( s . charAt ( s . length ( ) - 1 ) ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { try ( Scanner sc = new Scanner ( System . in ) ) { int n = sc . nextInt ( ) ; sc . nextLine ( ) ; String [ ] cards = new String [ n ] ; int [ ] [ ] table = new int [ 4 ] [ 13 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 13 ; j ++ ) { table [ i ] [ j ] = 0 ; //初期化 } } for (int i = 0; i<n; i++) { cards[i] = sc.nextLine(); String simbol = cards[i].substring(0, 1); int no = Integer.parseInt(cards[i].substring(2)); switch (simbol) { case "S": table[0][no - 1] = 1; break; case "H": table[1][no - 1] = 1; break; case "C": table[2][no - 1] = 1; break; case "D": table[3][no - 1] = 1; break; } } for (int i=0; i < 4; i++) { for (int j=0; j < 13; j++) { if (table[i][j] == 0) { switch (i) { case 0: System.out.print("S "); break; case 1: System.out.print("H "); break; case 2: System.out.print("C "); break; case 3: System.out.print("D "); break; } System.out.println(j+1); } } } } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { new Solver ( ) . run ( ) ; } } class Solver { public void run ( ) { Scanner sc = new Scanner ( System . in ) ; long A = sc . nextLong ( ) ; String [ ] B = sc . next ( ) . split ( " \\ . " ) ; int b1 = Integer . parseInt ( B [ 0 ] ) ; int b2 = Integer . parseInt ( B [ 1 ] ) ; //System.out.println(b1); //System.out.println(b2); int b = b1 * 100 + b2; long ans = A * b; System.out.println(ans/100); return; } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String s = scan . next ( ) ; char [ ] cs = s . toCharArray ( ) ; Arrays . sort ( cs ) ; if ( cs [ 0 ] == cs [ 1 ] && cs [ 2 ] == cs [ 3 ] && cs [ 0 ] != cs [ 2 ] ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { final Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , p = sc . nextInt ( ) , gu = 0 , ki = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( sc . nextInt ( ) % 2 == 0 ) gu ++ ; else ki ++ ; if ( ki == 0 ) System . out . println ( p == 0 ? 1L << ( n ) : 0 ) ; else System . out . println ( 1L << ( n - 1 ) ) ; } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . StringTokenizer ; import java . io . IOException ; import java . util . BitSet ; import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . InputStream ; /** * Built using CHelper plug-in * Actual solution is at the top * * @author AnandOza */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; CYutori solver = new CYutori ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class CYutori { public void solve ( int testNumber , InputReader in , PrintWriter out ) { int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; int c = in . nextInt ( ) ; char [ ] sin = in . next ( ) . toCharArray ( ) ; boolean [ ] s = new boolean [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sin [ i ] == 'x' ; } // let's say he works on the earliest possible days BitSet first = new BitSet(n); outer: for (int d = 0; d < n; d += c + 1) { while (s[d]) { d++; if (d >= n) break outer; } first.set(d); } BitSet last = new BitSet(n); outer: for (int d = n - 1; d >= 0; d -= c + 1) { while (s[d]) { d--; if (d < 0) break outer; } last.set(d); } if (first.cardinality() > k) { return; } first.and(last); for (int i = first.nextSetBit(0); i != -1; i = first.nextSetBit(i + 1)) { out.println(i + 1); } } } static class InputReader { public BufferedReader reader; public StringTokenizer tokenizer; public InputReader(InputStream stream) { reader = new BufferedReader(new InputStreamReader(stream), 32768); tokenizer = null; } public String next() { while (tokenizer == null || !tokenizer.hasMoreTokens()) { try { tokenizer = new StringTokenizer(reader.readLine()); } catch (IOException e) { throw new RuntimeException(e); } } return tokenizer.nextToken(); } public int nextInt() { return Integer.parseInt(next()); } } }
import java . io . * ; import java . util . * ; class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int [ ] a = new int [ 10 ] ; for ( int i = 0 ; i < 10 ; i ++ ) { a [ i ] = in . nextInt ( ) ; } Arrays . sort ( a ) ; for ( int i = 9 ; i > 6 ; i -- ) { System . out . println ( a [ i ] ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { try ( Scanner sc = new Scanner ( System . in ) ) { Dice dice = new Dice ( sc . nextLine ( ) . split ( " " ) ) ; int num = sc . nextInt ( ) ; for ( int i = 0 ; i < num ; i ++ ) { dice . toTop ( sc . nextInt ( ) ) ; dice . toFront ( sc . nextInt ( ) ) ; System . out . println ( dice . showN ( 2 ) ) ; } } } static class Dice { private int [ ] face ; public Dice ( int [ ] face ) { this . face = face ; } public Dice ( String [ ] face ) { this . face = new int [ 6 ] ; for ( int i = 0 ; i < this . face . length ; i ++ ) { this . face [ i ] = Integer . parseInt ( face [ i ] ) ; } } //東西南北EWSN+右左RLでさいころを回転 public void rotate(char to){ int buf; switch(to) { case 'E': buf = this.face[0]; this.face[0] = this.face[3]; this.face[3] = this.face[5]; this.face[5] = this.face[2]; this.face[2] = buf; break; case 'W': buf = this.face[0]; this.face[0] = this.face[2]; this.face[2] = this.face[5]; this.face[5] = this.face[3]; this.face[3] = buf; break; case 'S': buf = this.face[0]; this.face[0] = this.face[4]; this.face[4] = this.face[5]; this.face[5] = this.face[1]; this.face[1] = buf; break; case 'N': buf = this.face[0]; this.face[0] = this.face[1]; this.face[1] = this.face[5]; this.face[5] = this.face[4]; this.face[4] = buf; break; case 'R': buf = this.face[1]; this.face[1] = this.face[2]; this.face[2] = this.face[4]; this.face[4] = this.face[3]; this.face[3] = buf; break; case 'L': buf = this.face[1]; this.face[1] = this.face[3]; this.face[3] = this.face[5]; this.face[5] = this.face[2]; this.face[2] = buf; break; } } //指定した数字を上面に持ってきます public void toTop(int num) { if(this.showTop()==num) return; int i; for(i=0;i<4;i++) { this.rotate('N'); if(this.showTop() == num) { return; } } for(i=0;i<4;i++) { this.rotate('W'); if(this.showTop() == num) { return; } } } //指定した数字を手前に持ってきます // 水平方向のみ可 public void toFront(int num) { if(this.showN(1)==num) return; for(int i=0;i<4;i++) { this.rotate('R'); if(this.showN(1) == num) { return; } } } public int showTop() { return this.face[0]; } public int showN(int n) { return this.face[n]; } } }
import java . util . Arrays ; import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int m = sc . nextInt ( ) , n = sc . nextInt ( ) , c [ ] = new int [ n ] , a [ ] = new int [ m + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = sc . nextInt ( ) ; } Arrays . fill ( a , Integer . MAX_VALUE ) ; a [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = c [ i ] ; j <= m ; j ++ ) { a [ j ] = Math . min ( a [ j ] , a [ j - c [ i ] ] + 1 ) ; } System . out . println ( a [ m ] ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; public class Main { public static void main ( String args [ ] ) throws IOException { int n = 0 ; double m = 0 ; double sigma = 0 ; double alpha = 0 ; ArrayList < Double > s ; BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; while ( true ) { m = 0 ; sigma = 0 ; alpha = 0 ; n = Integer . parseInt ( br . readLine ( ) ) ; if ( n == 0 ) { break ; } s = new ArrayList < Double > ( ) ; String str [ ] = br . readLine ( ) . split ( " " ) ; for ( int i = 0 ; i < str . length ; i ++ ) { s . add ( Double . parseDouble ( str [ i ] ) ) ; } m = ave ( s ) ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { sigma += ( s . get ( i ) - m ) * ( s . get ( i ) - m ) ; } alpha = Math . sqrt ( sigma / n ) ; System . out . printf ( " %.5f \n " , alpha ) ; } } public static double ave ( ArrayList < Double > s ) { double sum = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { sum += s . get ( i ) ; } return ( sum / s . size ( ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String menu = S . replace ( " x " , " " ) ; int add = menu . length ( ) ; System . out . println ( 700 + 100 * add ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int h1 = sc . nextInt ( ) ; int m1 = sc . nextInt ( ) ; int h2 = sc . nextInt ( ) ; int m2 = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int answer = ( h2 - h1 ) * 60 + ( m2 - m1 ) - k ; System . out . println ( answer ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String line = " " ; boolean [ ] ns = new boolean [ 1000000 ] ; for ( int i = 2 ; i < ( int ) Math . sqrt ( 1000000 ) ; i ++ ) { if ( ns [ i ] ) continue ; for ( int j = 2 ; j < 999999 / i + 1 ; j ++ ) { if ( ! ns [ i * j ] ) { ns [ i * j ] = true ; } } } while ( ( line = br . readLine ( ) ) != null && ! line . isEmpty ( ) ) { int n = Integer . parseInt ( line ) ; int m = 0 ; for ( int i = 2 ; i < n + 1 ; i ++ ) { if ( ! ns [ i ] ) { m ++ ; } } System . out . println ( m ) ; } } }
import java . io . FileNotFoundException ; import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) throws FileNotFoundException { new Main ( ) . run ( ) ; } void run ( ) throws FileNotFoundException { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int ans = Integer . MAX_VALUE / 3 ; for ( int A = 1 ; A <= N - 1 ; ++ A ) { int B = N - A ; ans = Math . min ( ans , cnt ( A ) + cnt ( B ) ) ; } System . out . println ( ans ) ; } int cnt ( int a ) { int ret = 0 ; while ( a > 0 ) { ret += a % 10 ; a /= 10 ; } return ret ; } void tr ( Object ... objects ) { System . out . println ( Arrays . deepToString ( objects ) ) ; } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new java . util . Scanner ( System . in ) ; String s1 = sc . nextLine ( ) ; String [ ] s2 = s1 . split ( " [ \\ s]+ " ) ; Integer a = new Integer ( s2 [ 0 ] ) ; Integer b = new Integer ( s2 [ 1 ] ) ; Integer c = new Integer ( s2 [ 2 ] ) ; int [ ] x = { a , b , c } ; Arrays . sort ( x ) ; System . out . println ( x [ 0 ] + " " + x [ 1 ] + " " + x [ 2 ] ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; List < Pair < Integer , Integer > > list = new ArrayList < Pair < Integer , Integer > > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { list . add ( new Pair < Integer , Integer > ( sc . nextInt ( ) , sc . nextInt ( ) ) ) ; } list . sort ( ( a , b ) -> a . getKey ( ) - b . getKey ( ) ) ; long res = 0 ; for ( Pair < Integer , Integer > pair : list ) { if ( pair . getValue ( ) <= m ) { m -= pair . getValue ( ) ; res += ( long ) pair . getKey ( ) * ( long ) pair . getValue ( ) ; } else { res += ( long ) pair . getKey ( ) * ( long ) m ; break ; } } System . out . println ( res ) ; } } class Pair < K , V > extends AbstractMap . SimpleEntry < K , V > { public Pair ( final K key , final V value ) { super ( key , value ) ; } }
import java . util . * ; public class Main { private static final Scanner scan = new Scanner ( System . in ) ; public static final int Sp = 0 , Ha = 1 , Cu = 2 , Di = 3 ; public static void main ( String [ ] args ) { boolean [ ] [ ] trump = new boolean [ 4 ] [ 13 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 13 ; j ++ ) { trump [ i ] [ j ] = false ; } } int n = scan . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { String m = scan . next ( ) ; int num = scan . nextInt ( ) ; char mc = m . charAt ( 0 ) ; int a = 0 ; switch ( mc ) { case 'S' : a = Sp ; break ; case 'H' : a = Ha ; break ; case 'C' : a = Cu ; break ; case 'D' : a = Di ; break ; } trump [ a ] [ num - 1 ] = true ; } for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 13 ; j ++ ) { if ( trump [ i ] [ j ] == false ) { char mc = 0 ; switch ( i ) { case 0 : mc = 'S' ; break ; case 1 : mc = 'H' ; break ; case 2 : mc = 'C' ; break ; case 3 : mc = 'D' ; break ; } System . out . printf ( " %c %d \n " , mc , j + 1 ) ; } } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { // Your code here! Scanner sc = new Scanner(System.in); int N = sc.nextInt(); System.out.println((int)Math.pow(N, 3)); } }
import java . util . * ; public class Main implements Runnable { private static int MOD = 1_000_000_007 ; public static void main ( String [ ] args ) { // Run with 32MB stack Thread thread = new Thread(null, new Main(), "", 32 * 1024 * 1024); thread.start(); } @Override public void run() { final Scanner scanner = new Scanner(System.in); solve(scanner); } static void solve(Scanner scanner) { int A = Integer.parseInt(scanner.next()); int B = Integer.parseInt(scanner.next()); System.out.println(A / (double) B); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; for ( ; ; ) { int N = sc . nextInt ( ) , M = sc . nextInt ( ) ; if ( ( N | M ) == 0 ) break ; int [ ] [ ] pc = new int [ N + 1 ] [ 2 ] ; // who uses boolean[][] uses = new boolean[M + 1][1441]; int r = sc.nextInt(); for (int i = 0; i < r; i++) { int t=sc.nextInt(),n=sc.nextInt(),m=sc.nextInt(),s=sc.nextInt(); if (s == 1) // login { pc[n][0] = m; pc[n][1] = t; } else // logout { for (int k = pc[n][1]; k < t; k++) { uses[m][k] = true; } pc[n][0] = 0; } } int q = sc.nextInt(); for (int i = 0; i < q; i++) { int ts=sc.nextInt(),te=sc.nextInt(),m=sc.nextInt(); int count = 0; for (int t = ts; t < te; t++) { if (uses[m][t]) count++; } System.out.println(count); } } } }
import java . util . Scanner ; public class Main { //クラス名はMain public static void main(String[] args) { Scanner in = new Scanner(System.in); int N = in.nextInt(); int M = N / 1000; if (N%1000 == 0) System.out.println(0); else if (N > 1000) System.out.println((M+1)* 1000 - N); else System.out.println(1000-N); } }
import java . io . * ; import java . math . * ; import java . util . * ; class Main { public static int setNum ( String str ) { if ( str . equals ( " A " ) ) { return 0 ; } else if ( str . equals ( " B " ) ) { return 1 ; } else { return 2 ; } } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; // ArrayList<String> ans = new ArrayList<String>(); boolean[] cup = {true,false,false}; while (true) { String s = br.readLine(); if (s == null) break; StringTokenizer st = new StringTokenizer(s,","); int from = setNum(st.nextToken()); int to = setNum(st.nextToken()); boolean temp; temp = cup[to]; cup[to] = cup[from]; cup[from] = temp; } for (int i = 0; i < cup.length; i++) { if (cup[i]) { switch (i) { case 0 : System.out.println("A"); break; case 1 : System.out.println("B"); break; case 2 : System.out.println("C"); break; } break; } } // for (String p : ans) { // System.out.println(p); // } } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { static int N , K ; static int [ ] trees ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; N = sc . nextInt ( ) ; K = sc . nextInt ( ) ; trees = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { trees [ i ] = sc . nextInt ( ) ; } sc . close ( ) ; Arrays . sort ( trees ) ; int current = trees [ K - 1 ] - trees [ 0 ] ; int height = 0 ; for ( int i = 1 ; i < N - K + 1 ; i ++ ) { height = trees [ i + K - 1 ] - trees [ i ] ; if ( current > height ) { current = height ; } } System . out . println ( current ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { String [ ] lines = getStdin ( ) ; String [ ] str = lines [ 0 ] . split ( " " ) ; String tmp = str [ 0 ] ; String tmp1 = str [ 1 ] ; String tmp2 = str [ 2 ] ; str [ 0 ] = str [ 1 ] ; str [ 1 ] = tmp ; str [ 0 ] = str [ 2 ] ; str [ 2 ] = tmp1 ; for ( int i = 0 ; i < str . length ; i ++ ) { System . out . print ( str [ i ] + " " ) ; } } private static String [ ] getStdin ( ) { Scanner scanner = new Scanner ( System . in ) ; ArrayList < String > lines = new ArrayList < > ( ) ; while ( scanner . hasNext ( ) ) { lines . add ( scanner . nextLine ( ) ) ; } return lines . toArray ( new String [ lines . size ( ) ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // Scanner sc = new Scanner(System.in); int num1 = sc.nextInt(); int num2 = sc.nextInt(); int ans = num1 * num2; if(num1 > 9 || num2 > 9) { System.out.println(-1); } else { System.out.println(ans); } // Scannerクラスのインスタンスをクローズ sc.close(); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner std = new Scanner ( System . in ) ; int a = Integer . parseInt ( std . next ( ) ) ; int b = Integer . parseInt ( std . next ( ) ) ; int s = a * b ; int r = 2 * a + 2 * b ; System . out . println ( s + " " + r ) ; } }
import java . util . Scanner ; public class Main { Scanner sc = new Scanner ( System . in ) ; int kingaku ; int [ ] goukei = new int [ 4 ] ; int x ; public void syurui ( ) { for ( x = 0 ; x <= 3 ; x ++ ) { int syurui = sc . nextInt ( ) ; int maisuu = sc . nextInt ( ) ; switch ( syurui ) { case 1 : kingaku = 6000 ; break ; case 2 : kingaku = 4000 ; break ; case 3 : kingaku = 3000 ; break ; case 4 : kingaku = 2000 ; break ; } goukei [ x ] = kingaku * maisuu ; } } public void hyouji ( ) { for ( x = 0 ; x <= 3 ; x ++ ) { System . out . println ( goukei [ x ] ) ; } } public static void main ( String [ ] args ) { Main hai = new Main ( ) ; hai . syurui ( ) ; hai . hyouji ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String ans = " Yes " ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( i % 2 == 0 ) { if ( s . charAt ( i ) == 'L' ) { ans = " No " ; break ; } } if ( i % 2 == 1 ) { if ( s . charAt ( i ) == 'R' ) { ans = " No " ; break ; } } } System . out . println ( ans ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; String s = sc . next ( ) ; if ( s . length ( ) <= k ) { System . out . println ( s ) ; } else { for ( int i = 0 ; i < k ; i ++ ) { System . out . print ( s . charAt ( i ) ) ; } System . out . print ( " ... " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // Scannerクラスのインスタンスの生成 Scanner sc = new Scanner(System.in); String[] ss = sc.next().split(""); if(ss[0].equals(ss[1]) && ss[2].equals(ss[3]) && !(ss[0].equals(ss[2]))) { System.out.println("Yes"); } else if (ss[0].equals(ss[2]) && ss[1].equals(ss[3]) && !(ss[0].equals(ss[1]))) { System.out.println("Yes"); } else if (ss[0].equals(ss[3]) && ss[1].equals(ss[2]) && !(ss[0].equals(ss[1]))) { System.out.println("Yes"); } else { System.out.println("No"); } } }
import java . util . Scanner ; public class Main { static int n , T , sum , x ; static int [ ] tn ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; T = sc . nextInt ( ) ; tn = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { tn [ i ] = sc . nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( i < n - 1 ) { x = tn [ i + 1 ] - tn [ i ] ; } if ( x < T && i != n - 1 ) { sum += x ; } else { sum += T ; } } System . out . println ( sum ) ; } }
import java . util . Scanner ; public class Main { private static Scanner input ; public static void main ( String [ ] args ) { input = new Scanner ( System . in ) ; while ( true ) { int h = input . nextInt ( ) ; int w = input . nextInt ( ) ; if ( h == 0 || w == 0 ) { break ; } if ( h >= 1 && w <= 300 ) { for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { if ( ( j + i ) % 2 == 1 ) { System . out . print ( " . " ) ; } else System . out . print ( " # " ) ; } System . out . println ( ) ; } System . out . println ( ) ; } } } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . io . IOException ; import java . io . InputStream ; /** * Built using CHelper plug-in * Actual solution is at the top * * @author Aman Kumar Singh */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; AOddsOfOddness solver = new AOddsOfOddness ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class AOddsOfOddness { PrintWriter out ; InputReader in ; public void solve ( int testNumber , InputReader in , PrintWriter out ) { this . out = out ; this . in = in ; int i = 0 ; int n = ni ( ) ; double cnt = 0 ; for ( i = 1 ; i <= ( n ) ; i ++ ) { if ( i % 2 != 0 ) cnt ++ ; } pn ( cnt / n ) ; } int ni ( ) { return in . nextInt ( ) ; } void pn ( Object o ) { out . println ( o ) ; } } static class InputReader { private InputStream stream ; private byte [ ] buf = new byte [ 1024 ] ; private int curChar ; private int numChars ; public InputReader ( InputStream stream ) { this . stream = stream ; } public int read ( ) { if ( numChars == - 1 ) { throw new UnknownError ( ) ; } if ( curChar >= numChars ) { curChar = 0 ; try { numChars = stream . read ( buf ) ; } catch ( IOException e ) { throw new UnknownError ( ) ; } if ( numChars <= 0 ) { return - 1 ; } } return buf [ curChar ++ ] ; } public int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } public String next ( ) { int c = read ( ) ; while ( isSpaceChar ( c ) ) { c = read ( ) ; } StringBuffer res = new StringBuffer ( ) ; do { res . appendCodePoint ( c ) ; c = read ( ) ; } while ( ! isSpaceChar ( c ) ) ; return res . toString ( ) ; } private boolean isSpaceChar ( int c ) { return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == - 1 ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner stdin = new Scanner ( System . in ) ; System . out . println ( stdin . nextLine ( ) . replace ( " apple " , " # " ) . replace ( " peach " , " apple " ) . replace ( " # " , " peach " ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; System . out . println ( solve ( A , B ) ) ; sc . close ( ) ; } static int solve ( int A , int B ) { return A * B ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { int N ; int W ; Scanner sc = new Scanner ( System . in ) ; N = sc . nextInt ( ) ; W = sc . nextInt ( ) ; int [ ] v = new int [ N + 1 ] ; int w [ ] = new int [ N + 1 ] ; for ( int i = 1 ; i <= N ; i ++ ) { w [ i ] = sc . nextInt ( ) ; v [ i ] = sc . nextInt ( ) ; } long [ ] [ ] dp = new long [ N + 1 ] [ W + 1 ] ; for ( int i = 0 ; i < N ; i ++ ) dp [ i ] [ 0 ] = 0 ; for ( int i = 0 ; i < W ; i ++ ) dp [ 0 ] [ i ] = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { for ( int j = 1 ; j <= W ; j ++ ) { if ( w [ i ] > j ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] ; else { dp [ i ] [ j ] = Math . max ( dp [ i - 1 ] [ j ] , v [ i ] + dp [ i - 1 ] [ j - w [ i ] ] ) ; // System.out.println(dp[i][j]); } } } System.out.println(dp[N][W]); } }
import java . io . IOException ; import java . io . InputStream ; import java . util . NoSuchElementException ; public class Main { public static void main ( String [ ] args ) { FS reader = new FS ( ) ; String X = reader . next ( ) ; int len = 0 ; int stock = 0 ; for ( int i = 0 ; i < X . length ( ) ; i ++ ) { if ( X . charAt ( i ) == 'S' ) { stock ++ ; } else { if ( stock == 0 ) { len ++ ; } else { stock -- ; } } } System . out . println ( len * 2 ) ; } public static void solver ( ) { } // Read Class static class FS { private final InputStream in = System.in; private final byte[] buffer = new byte[1024]; private int ptr = 0; private int buflen = 0; private boolean hasNextByte() { if (ptr < buflen) { return true; } else { ptr = 0; try { buflen = in.read(buffer); } catch (IOException e) { e.printStackTrace(); } if (buflen <= 0) { return false; } } return true; } private int readByte() { return hasNextByte() ? buffer[ptr++] : -1;} private boolean isPrintableChar(int c) {return 33 <= c && c <= 126;} private void skipUnprintable() {while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;} public boolean hasNext() { skipUnprintable(); return hasNextByte();} public String next() { if (!hasNext()) throw new NoSuchElementException(); StringBuilder sb = new StringBuilder(); int b = readByte(); while(isPrintableChar(b)) { sb.appendCodePoint(b); b = readByte(); } return sb.toString(); } public int nextInt() { return (int)nextLong(); } public long nextLong() { if (!hasNext()) throw new NoSuchElementException(); long n = 0; boolean minus = false; int b = readByte(); if (b == '-') { minus = true; b = readByte(); } if (b < '0' || '9' < b) { throw new NumberFormatException(); } while(true) { if ('0' <= b && b <= '9') { n *= 10; n += b - '0'; } else if(b == -1 || !isPrintableChar(b)) { return minus ? -n : n; } else { throw new NumberFormatException(); } b = readByte(); } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner sc = new Scanner(System.in); int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if ((c > a && c < b) || (c < a && c > b) ) { System.out.println("Yes"); }else if((c < a || c < b) || (c < b || c > a) ) { System.out.println("No"); } } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String str = br . readLine ( ) ; String [ ] array = str . split ( " " ) ; int a = Integer . parseInt ( array [ 0 ] ) ; int b = Integer . parseInt ( array [ 1 ] ) ; int c = Integer . parseInt ( array [ 2 ] ) ; int i , d = 0 ; for ( i = a ; i <= b ; i ++ ) { if ( c % i == 0 ) { d ++ ; } } System . out . println ( d ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { String i ; int n ; i = sc . next ( ) ; if ( i . equals ( " - " ) ) { break ; } n = sc . nextInt ( ) ; for ( int j = 0 ; j < n ; j ++ ) { int h = sc . nextInt ( ) ; i = i . substring ( h ) + i . substring ( 0 , h ) ; } System . out . println ( i ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = Integer . parseInt ( scan . next ( ) ) ; System . out . println ( n * n * n ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String a = scan . next ( ) ; scan . close ( ) ; if ( a . equals ( " ARC " ) ) System . out . println ( " ABC " ) ; else System . out . println ( " ARC " ) ; } }
import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . List ; class Main { static long mod = 924844033 ; static long [ ] fact ; static long [ ] [ ] dp ; static int w , n ; static void solve ( ) { n = ni ( ) ; int k = ni ( ) ; fact = new long [ n + 1 ] ; fact [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; ++ i ) fact [ i ] = ( fact [ i - 1 ] * i ) % mod ; // dp[i][j] : サイズiの頂点でj個選ぶ通り dp = new long[n+1][n+1]; dp[1][0]=dp[2][0]=dp[2][1]=1; for(int i=3;i<=n;++i)for(int j=0;j<i;++j){ if(j==0)dp[i][j]=1; else dp[i][j]=(dp[i-1][j]+dp[i-2][j-1])%mod; } List<Integer> sets = new ArrayList<>(); for(int i=1;i<=Math.min(n, k);++i){ int size = 0; for(int j=i;j<=n;j+=k)++size; sets.add(size); sets.add(size); } long[][] dp2 = new long[sets.size()+1][n+1]; dp2[0][0]=1; for(int i=0;i<sets.size();++i){ for(int j=0;j<=n;++j){ for(int l=0;l<=sets.get(i);++l){ if(j-l<0)break; dp2[i+1][j] = (dp2[i+1][j] + (dp2[i][j-l]*dp[sets.get(i)][l])%mod)%mod; } } } int m = sets.size(); long ans = 0; for(int i=0;i<=n;++i){ ans = (ans + ((fact[n-i]*dp2[m][i]%mod)*(i%2==1 ? -1:1)+mod)%mod)%mod; } out.println(ans); } public static void main(String[] args){ solve(); out.flush(); } private static InputStream in = System.in; private static PrintWriter out = new PrintWriter(System.out); private static final byte[] buffer = new byte[1<<15]; private static int ptr = 0; private static int buflen = 0; private static boolean hasNextByte(){ if(ptr<buflen)return true; ptr = 0; try{ buflen = in.read(buffer); } catch (IOException e){ e.printStackTrace(); } return buflen>0; } private static int readByte(){ if(hasNextByte()) return buffer[ptr++]; else return -1;} private static boolean isSpaceChar(int c){ return !(33<=c && c<=126);} private static int skip(){int res; while((res=readByte())!=-1 && isSpaceChar(res)); return res;} private static double nd(){ return Double.parseDouble(ns()); } private static char nc(){ return (char)skip(); } private static String ns(){ StringBuilder sb = new StringBuilder(); for(int b=skip();!isSpaceChar(b);b=readByte())sb.append((char)b); return sb.toString(); } private static int[] nia(int n){ int[] res = new int[n]; for(int i=0;i<n;++i)res[i]=ni(); return res; } private static long[] nla(int n){ long[] res = new long[n]; for(int i=0;i<n;++i)res[i]=nl(); return res; } private static int ni(){ int res=0,b; boolean minus=false; while((b=readByte())!=-1 && !((b>='0'&&b<='9') || b=='-')); if(b=='-'){ minus=true; b=readByte(); } for(;'0'<=b&&b<='9';b=readByte())res=res*10+(b-'0'); return minus ? -res:res; } private static long nl(){ long res=0,b; boolean minus=false; while((b=readByte())!=-1 && !((b>='0'&&b<='9') || b=='-')); if(b=='-'){ minus=true; b=readByte(); } for(;'0'<=b&&b<='9';b=readByte())res=res*10+(b-'0'); return minus ? -res:res; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { long p = sc . nextLong ( ) ; long q = sc . nextLong ( ) ; double ans = Math . sqrt ( ( p * p ) + ( q * q ) ) ; if ( ans <= d ) count ++ ; } System . out . println ( count ) ; } }
import java . util . * ; import java . io . * ; class Main { void solve ( ) { char [ ] a = incharar ( ) ; int ans = 700 ; for ( int i = 0 ; i < a . length ; i ++ ) { if ( a [ i ] == 'o' ) ans += 100 ; } out . println ( ans ) ; } public static Scanner in = new Scanner ( System . in ) ; public static PrintWriter out = new PrintWriter ( System . out ) ; public static void main ( String [ ] args ) { new Main ( ) . solve ( ) ; out . flush ( ) ; } public int inint ( ) { return in . nextInt ( ) ; } public String instr ( ) { return in . next ( ) ; } public int [ ] inintar ( int num ) { int [ ] a = new int [ num ] ; for ( int i = 0 ; i < num ; i ++ ) { a [ i ] = in . nextInt ( ) ; } return a ; } public char [ ] incharar ( ) { return in . next ( ) . toCharArray ( ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int d = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; d = ( int ) Math . pow ( 100 , d ) ; if ( n == 100 ) { System . out . println ( d * ( n + 1 ) ) ; } else { System . out . println ( d * n ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int a = stdIn . nextInt ( ) ; int b = stdIn . nextInt ( ) ; int ans = Math . max ( a + b , a - b ) ; ans = Math . max ( ans , a * b ) ; System . out . println ( ans ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int r = sc . nextInt ( ) ; int g = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( ( r * 100 + g * 10 + b ) % 4 == 0 ? " YES " : " NO " ) ; } }
import java . util . * ; import java . io . * ; /** * @author Azuz * */ public class Main { void solve ( Scanner in , PrintWriter out ) { int X = in . nextInt ( ) ; System . out . println ( X >= 30 ? " Yes " : " No " ) ; } public static void main ( String [ ] args ) { try ( Scanner in = new Scanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ) { new Main ( ) . solve ( in , out ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int max = Integer . MIN_VALUE ; max = Math . max ( max , a + b ) ; max = Math . max ( max , a - b ) ; max = Math . max ( max , a * b ) ; System . out . println ( max ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int C = sc . nextInt ( ) ; int doku = 0 ; // 毒入クッキーを食べられる枚数 if (C <= A+B+1) { doku = C; } else { doku = A+B+1; } System.out.println(B+doku); } }
import java . util . * ; public class Main { private static final Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { for ( int n ; ( n = scn . nextInt ( ) ) > 0 ; ) { ArrayList < Line > lines = new ArrayList < > ( ) ; int m = scn . nextInt ( ) , a = scn . nextInt ( ) ; for ( int i = 0 ; i < m ; i ++ ) { lines . add ( new Line ( scn . nextInt ( ) , scn . nextInt ( ) , scn . nextInt ( ) ) ) ; } Collections . sort ( lines ) ; for ( Line line : lines ) { a = line . move ( a ) ; } System . out . println ( a ) ; } } } class Line implements Comparable < Line > { private int height , left , right ; public Line ( int h , int p , int q ) { height = h ; left = p ; right = q ; } public int move ( int a ) { if ( a == left ) { a = right ; } else if ( a == right ) { a = left ; } return a ; } public int compareTo ( Line obj ) { return obj . height - height ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double r = sc . nextDouble ( ) ; double pi = Math . PI ; double area = pi * r * r ; double length = 2 * pi * r ; System . out . printf ( " %.6f %.6f " , area , length ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double r = sc . nextDouble ( ) ; double p = Math . PI ; double area = r * r * p ; double length = 2 * p * r ; System . out . printf ( " %f %f " , area , length ) ; sc . close ( ) ; } }
import java . util . Scanner ; class Main { void solve ( ) { Scanner in = new Scanner ( System . in ) ; String string = in . nextLine ( ) ; if ( string . startsWith ( " YAKI " ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } public static void main ( String [ ] args ) { new Main ( ) . solve ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int sum = 0 ; int a = sc . nextInt ( ) ; for ( int b = 100 ; b >= 1 ; b /= 10 ) { if ( a / b == 1 ) { sum += 1 ; a = a - b * ( a / b ) ; } } System . out . printf ( " %d \n " , sum ) ; } }
import java . io . * ; import java . util . * ; public class Main { public static int MAXN = 1600 ; public static void main ( String [ ] args ) { Scanner cin = new Scanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int a = cin . nextInt ( ) , b = cin . nextInt ( ) , c = cin . nextInt ( ) , d = cin . nextInt ( ) ; int ans = 0 ; for ( int i = a ; i < b ; i ++ ) { if ( i >= c && i < d ) { ans ++ ; } } out . println ( ans ) ; out . flush ( ) ; out . close ( ) ; cin . close ( ) ; } }
import java . util . HashMap ; import java . util . Map ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner sc = new Scanner(System.in); int X = sc.nextInt(); int N = sc.nextInt(); int answer = 0; //HashMap<Key,Value> Map<Integer, Integer> ForbiddenMap = new HashMap<>(); if(N != 0) { for(int i = 0; i < N; i++) { int getNum = sc.nextInt(); ForbiddenMap.put(getNum,getNum); } int num = 0; while(true) { if(ForbiddenMap.containsKey(X - num)) { //含まれてたら次 }else { // answer = X-num; break; } if(ForbiddenMap.containsKey(X + num)) { //含まれてたら次 }else { answer = X+num; break; } num++; } }else if(N == 0) { answer = X; } System.out.println(answer); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( ( a * b ) + " " + 2 * ( a + b ) ) ; } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . Scanner ; /** * Built using CHelper plug-in * Actual solution is at the top */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; abc158_a solver = new abc158_a ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class abc158_a { public void solve ( int testNumber , Scanner in , PrintWriter out ) { String S = in . next ( ) ; if ( S . contains ( " AB " ) || S . contains ( " BA " ) ) { out . println ( " Yes " ) ; } else { out . println ( " No " ) ; } } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String n = sc . next ( ) ; int re = n . indexOf ( " 7 " ) ; if ( re != - 1 ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } private void run ( ) { Scanner scanner = new Scanner ( System . in ) ; long L = scanner . nextInt ( ) ; long R = scanner . nextInt ( ) ; long ans = 0 ; long min = 2018 ; long i ; long j ; for ( i = L ; i < R ; i ++ ) { for ( j = i + 1 ; j <= R ; j ++ ) { ans = ( i * j ) % 2019 ; if ( min > ans ) min = ans ; if ( min == 0 ) break ; } if ( min == 0 ) break ; } System . out . println ( min ) ; } }
import java . util . Scanner ; public class Main { Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { Main m = new Main ( ) ; m . run ( ) ; } void run ( ) { int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; if ( ( n + 1 ) / 2 >= k ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; boolean ans = false ; for ( int i = 1 ; i <= 9 ; i ++ ) { for ( int j = 1 ; j <= 9 ; j ++ ) { if ( N == i * j ) { ans = true ; break ; } } } if ( ans ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; import java . io . * ; public class Main { public Main ( FastScanner in , PrintWriter out ) { String s = in . next ( ) ; Map < Integer , Integer > map = new HashMap < > ( ) ; map . put ( 0 , 1 ) ; long res = 0 ; int n = s . length ( ) , cur = 0 , p = 1 ; for ( int i = n - 1 ; i >= 0 ; i -- ) { int d = s . charAt ( i ) - '0' ; cur = ( d * p + cur ) % 2019 ; res += map . getOrDefault ( cur , 0 ) ; map . merge ( cur , 1 , Integer :: sum ) ; p = p * 10 % 2019 ; } out . println ( res ) ; } public static void main ( String [ ] args ) { PrintWriter out = new PrintWriter ( System . out ) ; // Scanner in = new Scanner( // new BufferedReader(new InputStreamReader(System.in))); FastScanner in = new FastScanner(System.in); Main sol = new Main(in, out); out.close(); } } class FastScanner{ private InputStream stream; private byte[] buf = new byte[1024]; private int curChar; private int numChars; public FastScanner(InputStream stream) { this.stream = stream; } int read() { if (numChars == -1) throw new InputMismatchException(); if (curChar >= numChars){ curChar = 0; try{ numChars = stream.read(buf); } catch (IOException e) { throw new InputMismatchException(); } if (numChars <= 0) return -1; } return buf[curChar++]; } boolean isSpaceChar(int c) { return c==' '||c=='\n'||c=='\r'||c=='\t'||c==-1; } boolean isEndline(int c) { return c=='\n'||c=='\r'||c==-1; } int nextInt() { return Integer.parseInt(next()); } long nextLong() { return Long.parseLong(next()); } double nextDouble() { return Double.parseDouble(next()); } String next(){ int c = read(); while (isSpaceChar(c)) c = read(); StringBuilder res = new StringBuilder(); do{ res.appendCodePoint(c); c = read(); }while(!isSpaceChar(c)); return res.toString(); } String nextLine(){ int c = read(); while (isEndline(c)) c = read(); StringBuilder res = new StringBuilder(); do{ res.appendCodePoint(c); c = read(); }while(!isEndline(c)); return res.toString(); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; long a = scan . nextInt ( ) ; long total = 1 ; for ( int i = 1 ; i <= a ; i ++ ) { total = ( ( total * i ) % 1000000007 ) ; } System . out . println ( total ) ; } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int n = scn . nextInt ( ) ; int [ ] h = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = scn . nextInt ( ) ; } int [ ] res = new int [ n ] ; Arrays . fill ( res , Integer . MAX_VALUE ) ; res [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j <= i + 2 && j < n ; j ++ ) { if ( res [ i ] != Integer . MAX_VALUE ) res [ j ] = Math . min ( res [ j ] , Math . abs ( h [ j ] - h [ i ] ) + res [ i ] ) ; } } System . out . println ( res [ n - 1 ] ) ; } }
import java . util . Scanner ; public class Main { static Scanner scan = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int n = Integer . parseInt ( scan . next ( ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 3 == 0 ) { System . out . print ( " " + i ) ; } else { int a = i ; while ( true ) { if ( a % 10 == 3 ) { System . out . print ( " " + i ) ; break ; } a = a / 10 ; if ( a == 0 ) { break ; } } } } System . out . println ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner reader = new Scanner ( System . in ) ; int N = reader . nextInt ( ) ; int T = reader . nextInt ( ) ; int min = 1000 ; String result = " TLE " ; for ( int i = 0 ; i < N ; i ++ ) { int A = reader . nextInt ( ) ; int B = reader . nextInt ( ) ; if ( B <= T && A <= min ) { min = A ; result = Integer . toString ( min ) ; } } reader . close ( ) ; System . out . print ( result ) ; } }
import java . util . * ; public class Main { Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } void run ( ) { int n = sc . nextInt ( ) ; long ans = 1 ; long [ ] arr = new long [ n ] ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextLong ( ) ; if ( arr [ i ] == 0 ) cnt ++ ; } if ( 0 < cnt ) { System . out . println ( 0 ) ; return ; } Arrays . sort ( arr ) ; for ( int i = 0 ; i < n ; i ++ ) { long s = arr [ i ] ; long tmp = ans * s ; if ( ( tmp / ans ) != s ) { System . out . println ( - 1 ) ; return ; } ans *= s ; if ( ( long ) 1e18 < ans || ans < 0 ) { System . out . println ( - 1 ) ; return ; } } System . out . println ( ans ) ; } }
import java . io . IOException ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) throws IOException { new Main ( ) . run ( ) ; } private void run ( ) throws IOException { Scanner scanner = new Scanner ( System . in ) ; int ans = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) ans += Math . max ( 40 , scanner . nextInt ( ) ) ; System . out . println ( ans / 5 ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int sum = n ; for ( int i = 0 ; i < m ; i ++ ) { sum -= sc . nextInt ( ) ; } if ( sum < 0 ) { System . out . println ( - 1 ) ; } else { System . out . println ( sum ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int place1 = ( sc . nextInt ( ) % 100 ) % 10 ; switch ( place1 ) { case 2 : System . out . println ( " hon " ) ; break ; case 4 : System . out . println ( " hon " ) ; break ; case 5 : System . out . println ( " hon " ) ; break ; case 7 : System . out . println ( " hon " ) ; break ; case 9 : System . out . println ( " hon " ) ; break ; case 0 : System . out . println ( " pon " ) ; break ; case 1 : System . out . println ( " pon " ) ; break ; case 6 : System . out . println ( " pon " ) ; break ; case 8 : System . out . println ( " pon " ) ; break ; case 3 : System . out . println ( " bon " ) ; break ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // 標準入力からデータを読み込む準備 Scanner sc = new Scanner(System.in); // 最初の文字の固まりを整数値と想定して読み込む while (true) { int H = sc.nextInt(); int W = sc.nextInt(); if (H == 0 && W == 0) { break; } for (int y = 0; y < H; y++) { for (int x = 0; x < W; x++) { if((x+y)%2 == 0){ System.out.print('#');} if((x+y)%2 == 1){ System.out.print('.');} } System.out.println(); } System.out.println(); } } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { //BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); //int n = Integer.parseInt(br.readLine()); Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int[] h = new int[n]; //String[] s = br.readLine().split(" "); for(int i=0;i<n;i++) h[i] = sc.nextInt(); // h[i] = Integer.parseInt(s[i]); int ans = solve(n,h); System.out.println(ans); } public static int solve(int n,int h[]){ int[] dp = new int[n]; dp[1] = Math.abs(h[1]-h[0]); for(int i=2;i<n;i++) dp[i] = Math.min(Math.abs(h[i]-h[i-1])+dp[i-1],Math.abs(h[i]-h[i-2])+dp[i-2]); return dp[n-1]; } }
import java . util . Scanner ; class Point { int x ; int y ; Point ( int x , int y ) { this . x = x ; this . y = y ; } } class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int countQues = 1 ; while ( scan . hasNextInt ( ) ) { int numVertices = scan . nextInt ( ) ; if ( numVertices == 0 ) break ; Point [ ] point = new Point [ numVertices ] ; for ( int i = 0 ; i < numVertices ; i ++ ) { point [ i ] = new Point ( scan . nextInt ( ) , scan . nextInt ( ) ) ; } double area = 0 ; for ( int i = 0 ; i < numVertices ; i ++ ) { if ( i == numVertices - 1 ) { int tmp_area = ( point [ i ] . x * point [ 0 ] . y - point [ 0 ] . x * point [ i ] . y ) ; //if (tmp_area < 0) tmp_area *= -1; area += tmp_area; area /= 2; if(area <0) area *= -1; break; } int tmp_area = (point[i].x*point[i+1].y - point[i+1].x*point[i].y); //if (tmp_area < 0) tmp_area *= -1; area += tmp_area; } System.out.println(countQues + " " + area); countQues++; } } }
import java . util . Scanner ; import java . util . Arrays ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = 0 ; char [ ] symbols = sc . next ( ) . toCharArray ( ) ; for ( int i = 0 ; i < 4 ; i ++ ) { if ( symbols [ i ] == '+' ) { a ++ ; } else { a -- ; } } System . out . println ( a ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int n = stdIn . nextInt ( ) ; int j ; int [ ] result = new int [ 3 ] ; int i = 2 ; while ( n != 0 ) { j = n % 10 ; if ( j == 9 ) { result [ i ] = 1 ; } else if ( j == 1 ) { result [ i ] = 9 ; } else { result [ i ] = j ; } n /= 10 ; i -- ; } System . out . print ( result [ 0 ] ) ; System . out . print ( result [ 1 ] ) ; System . out . println ( result [ 2 ] ) ; } }
import java . util . Scanner ; public class Main { static int n ; static int [ ] ps ; public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; while ( true ) { n = sc . nextInt ( ) ; if ( n == 0 ) break ; ps = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ps [ i ] = sc . nextInt ( ) ; } System . out . println ( solve ( 0 , 0 , 0 ) ) ; } } public static int solve ( int k , int a , int b ) { if ( k == n ) { return Math . abs ( a - b ) ; } return Math . min ( solve ( k + 1 , a , b + ps [ k ] ) , solve ( k + 1 , a + ps [ k ] , b ) ) ; } }
import java . io . * ; import java . util . StringTokenizer ; public class Main { private static FastReader in = new FastReader ( System . in ) ; private static PrintWriter out = new PrintWriter ( System . out ) ; private static final long MOD = ( long ) 1e9 + 7 ; public static void main ( String [ ] args ) { solve ( ) ; out . flush ( ) ; } private static void solve ( ) { String s = in . next ( ) ; int q = in . nextInt ( ) ; StringBuilder sbPrefix = new StringBuilder ( ) ; StringBuilder sbSuffix = new StringBuilder ( ) ; boolean flipped = false ; for ( int i = 0 ; i < q ; i ++ ) { int type = in . nextInt ( ) ; if ( type == 1 ) { flipped = ! flipped ; } else { int f = in . nextInt ( ) ; if ( f == 1 ) { if ( ! flipped ) { sbPrefix . append ( in . next ( ) ) ; } else { sbSuffix . append ( in . next ( ) ) ; } } else { if ( ! flipped ) { sbSuffix . append ( in . next ( ) ) ; } else { sbPrefix . append ( in . next ( ) ) ; } } } } String ans ; if ( ! flipped ) { ans = sbPrefix . reverse ( ) . append ( s ) . append ( sbSuffix ) . toString ( ) ; } else { ans = sbSuffix . reverse ( ) . append ( new StringBuilder ( s ) . reverse ( ) ) . append ( sbPrefix ) . toString ( ) ; } out . println ( ans ) ; } // https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/ static class FastReader { BufferedReader br; StringTokenizer st; FastReader(InputStream inputStream) { br = new BufferedReader(new InputStreamReader(inputStream)); } String next() { while (st == null || !st.hasMoreElements()) { try { st = new StringTokenizer(br.readLine()); } catch (IOException e) { e.printStackTrace(); } } return st.nextToken(); } int nextInt() { return Integer.parseInt(next()); } long nextLong() { return Long.parseLong(next()); } double nextDouble() { return Double.parseDouble(next()); } String nextLine() { String str = ""; try { str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } return str; } // https://qiita.com/masakinpo/items/5f77f2a879578a85a0bb public int[] nextIntArray(int n) { int[] a = new int[n]; for (int i = 0; i < n; i++) a[i] = nextInt(); return a; } public long[] nextLongArray(int n) { long[] a = new long[n]; for (int i = 0; i < n; i++) a[i] = nextLong(); return a; } } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws Exception { InputStreamReader isr = new InputStreamReader ( System . in ) ; BufferedReader br = new BufferedReader ( isr ) ; OutputStreamWriter osw = new OutputStreamWriter ( System . out ) ; PrintWriter out = new PrintWriter ( osw ) ; String s = br . readLine ( ) ; char [ ] alpha = s . toCharArray ( ) ; if ( Character . isUpperCase ( alpha [ 0 ] ) ) { out . println ( " A " ) ; } else { out . println ( " a " ) ; } out . close ( ) ; } }
import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; Main m = new Main ( ) ; String line = br . readLine ( ) ; int [ ] num = m . splitIntChange ( line ) ; if ( num [ 0 ] < num [ 1 ] ) { System . out . println ( " a < b " ) ; } else if ( num [ 0 ] > num [ 1 ] ) { System . out . println ( " a > b " ) ; } else if ( num [ 0 ] == num [ 1 ] ) { System . out . println ( " a == b " ) ; } } public int [ ] splitIntChange ( String str ) { String [ ] str_ = str . split ( " " ) ; int strlen = str_ . length ; int [ ] numarray = new int [ strlen ] ; for ( int i = 0 ; i < strlen ; i ++ ) { numarray [ i ] = Integer . parseInt ( str_ [ i ] ) ; } return numarray ; } }
import java . io . * ; import java . util . * ; public class Main { public static class FS { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( " " ) ; String next ( ) { while ( ! st . hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( Exception e ) { } } return st . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } } public static long gcd ( long a , long b ) { return b == 0 ? a : gcd ( b , a % b ) ; } public static long lcm ( long a , long b ) { return a * b / gcd ( a , b ) ; } public static int abs ( int x ) { if ( x < 0 ) return - x ; return x ; } public static void main ( String [ ] args ) { FS in = new FS ( ) ; long n = in . nextLong ( ) ; int pd = ( int ) ( n & 1L ) ; if ( pd == 1 ) { System . out . println ( 0 ) ; return ; } long ans = 0 ; long div = 10L ; while ( n >= div ) { ans += ( n / div ) ; div *= 5L ; } System . out . println ( ans ) ; } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . IOException ; import java . util . Arrays ; import java . util . TreeMap ; public class Main { private int n ; private int [ ] a ; private TreeMap < Integer , Integer > s ; public static void main ( String [ ] args ) { Main m = new Main ( ) ; m . solve ( ) ; } private void set ( ) { try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ) { n = Integer . parseInt ( br . readLine ( ) ) ; a = Arrays . stream ( br . readLine ( ) . split ( " " ) ) . mapToInt ( Integer :: parseInt ) . toArray ( ) ; s = new TreeMap < > ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } private void solve ( ) { set ( ) ; int ng = 0 ; int ok = n ; while ( ok - ng > 1 ) { int k = ( ng + ok ) / 2 ; if ( isPossible ( k ) ) { ok = k ; } else { ng = k ; } } System . out . println ( ok ) ; } private boolean isPossible ( int k ) { s . clear ( ) ; int current = 0 ; for ( int ai : a ) { if ( ai <= current ) { if ( k == 1 ) return false ; while ( ! s . isEmpty ( ) && s . lastKey ( ) >= ai ) s . pollLastEntry ( ) ; int p = ai - 1 ; while ( true ) { if ( p < 0 ) return false ; int sp = s . getOrDefault ( p , 0 ) + 1 ; s . put ( p , sp ) ; if ( sp == k ) { s . remove ( p ) ; p -- ; } else { break ; } } } current = ai ; } return true ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String befId = sc . next ( ) ; String aftId = sc . next ( ) ; String modId = aftId . substring ( 0 , aftId . length ( ) - 1 ) ; /* modId.setLength(aftId.length()-1);*/ if ( befId . equals ( modId ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int n = b / k + 1 ; int m = a / k ; boolean f = false ; for ( int i = m ; i < n ; i ++ ) { if ( a <= k * i && k * i <= b ) { f = true ; break ; } } if ( f == true ) { System . out . println ( " OK " ) ; } else { System . out . println ( " NG " ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String a = sc . next ( ) ; if ( a . equals ( " a " ) || a . equals ( " e " ) || a . equals ( " i " ) || a . equals ( " o " ) || a . equals ( " u " ) ) { System . out . println ( " vowel " ) ; } else { System . out . println ( " consonant " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; if ( Math . abs ( b - a ) <= ( long ) t * ( v - w ) ) System . out . println ( " YES " ) ; else System . out . println ( " NO " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { if ( i % 3 == 0 && i % 5 == 0 ) { // } else if (i%3 == 0) { // } else if (i%5 == 0) { // } else { ans += i; } } System.out.println(ans); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int m = s . nextInt ( ) ; int l = s . nextInt ( ) ; int gyouretuA [ ] [ ] = new int [ n ] [ m ] ; int gyouretuB [ ] [ ] = new int [ m ] [ l ] ; long gyouretuC [ ] [ ] = new long [ n ] [ l ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { gyouretuA [ i ] [ j ] = s . nextInt ( ) ; } } for ( int i = 0 ; i < m ; i ++ ) { for ( int j = 0 ; j < l ; j ++ ) { gyouretuB [ i ] [ j ] = s . nextInt ( ) ; } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < l ; j ++ ) { for ( int k = 0 ; k < m ; k ++ ) { gyouretuC [ i ] [ j ] += gyouretuA [ i ] [ k ] * gyouretuB [ k ] [ j ] ; } } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < l ; j ++ ) { System . out . print ( gyouretuC [ i ] [ j ] ) ; if ( j < l - 1 ) System . out . print ( " " ) ; } System . out . println ( ) ; s . close ( ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int N = stdIn . nextInt ( ) ; System . out . println ( N * N * N ) ; } }
import java . io . InputStream ; import java . io . PrintStream ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { resolve ( System . in , System . out ) ; } static void resolve ( InputStream is , PrintStream pw ) { Scanner sc = new Scanner ( is ) ; int n = Integer . parseInt ( sc . next ( ) ) ; int m = Integer . parseInt ( sc . next ( ) ) ; if ( n % 2 == 1 ) { for ( int i = 1 ; i <= m ; i ++ ) { pw . println ( i + " " + ( n - i ) ) ; } return ; } else { for ( int i = 1 ; i <= m ; i ++ ) { if ( i <= n / 4 ) { pw . println ( i + " " + ( n - i + 1 ) ) ; } else { pw . println ( i + " " + ( n - i ) ) ; } } return ; } } }
import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int N = scan . nextInt ( ) ; int M = scan . nextInt ( ) ; System . out . println ( N * ( N - 1 ) / 2 + M * ( M - 1 ) / 2 ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long [ ] Az = new long [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Az [ i ] = sc . nextLong ( ) ; } long ans = 0 ; long min = Az [ 0 ] ; for ( int i = 1 ; i < N ; i ++ ) { if ( min < Az [ i ] ) { min = Az [ i ] ; } if ( min > Az [ i ] ) { ans += min - Az [ i ] ; } } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static Scanner scanner = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { while ( scanner . hasNext ( ) ) { long tempA = input ( ) ; long tempB = input ( ) ; long a ; long b ; long r ; long lcm ; if ( tempB <= tempA ) { a = tempA ; b = tempB ; } else { a = tempB ; b = tempA ; } while ( ( r = a % b ) != 0 ) { a = b ; b = r ; } lcm = tempA * tempB / b ; System . out . print ( b ) ; System . out . print ( " " ) ; System . out . println ( lcm ) ; } close ( ) ; } public static long input ( ) { return scanner . nextLong ( ) ; } public static void close ( ) { if ( scanner != null ) { scanner . close ( ) ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = 0 ; for ( int c = 1 ; c < 10 ; c ++ ) { if ( n % c == 0 && ( n / c ) < 10 ) { a = 1 ; } } if ( a == 1 ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . ArrayDeque ; import java . util . Queue ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int q = sc . nextInt ( ) ; Queue < Integer > task = new ArrayDeque < > ( ) ; String [ ] name = new String [ n ] ; int [ ] time = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { name [ i ] = sc . next ( ) ; time [ i ] = sc . nextInt ( ) ; task . add ( i ) ; } sc . close ( ) ; int t = 0 ; while ( ! task . isEmpty ( ) ) { int i = task . poll ( ) ; if ( time [ i ] <= q ) { t += time [ i ] ; System . out . printf ( " %s %d \n " , name [ i ] , t ) ; } else { t += q ; time [ i ] -= q ; task . add ( i ) ; } } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Comparator ; class Main { public static void main ( String [ ] args ) throws NumberFormatException , IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; ArrayList < Integer > lstInt = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < 10 ; ++ i ) { lstInt . add ( Integer . parseInt ( br . readLine ( ) ) ) ; } lstInt . sort ( Comparator . reverseOrder ( ) ) ; for ( int i = 0 ; i < 3 ; ++ i ) System . out . println ( lstInt . get ( i ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] boy = new int [ n + 1 ] ; int cnt = 0 ; for ( int i = 0 ; i < k ; i ++ ) { int d = sc . nextInt ( ) ; for ( int j = 0 ; j < d ; j ++ ) { int a = sc . nextInt ( ) ; boy [ a - 1 ] = 1 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( boy [ i ] == 0 ) { cnt ++ ; //System.out.println(i+"num"); } } System.out.println(cnt); } }
import java . util . ArrayDeque ; import java . util . Deque ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; char [ ] s = sc . next ( ) . toCharArray ( ) ; int q = sc . nextInt ( ) ; boolean isHanten = false ; Deque < String > deque = new ArrayDeque ( ) ; for ( char ch : s ) { deque . addLast ( String . valueOf ( ch ) ) ; } for ( int i = 0 ; i < q ; i ++ ) { int f = sc . nextInt ( ) ; if ( f == 1 ) { isHanten = ! isHanten ; } else { int ff = sc . nextInt ( ) ; if ( isHanten ) { ff = 3 - ff ; } if ( ff == 1 ) { deque . addFirst ( sc . next ( ) ) ; } else { deque . addLast ( sc . next ( ) ) ; } } } if ( isHanten ) { while ( ! deque . isEmpty ( ) ) { System . out . print ( deque . getLast ( ) ) ; deque . pollLast ( ) ; } } else { for ( String str : deque ) { System . out . print ( str ) ; } } } }
import java . io . InputStream ; import java . io . PrintStream ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { solve ( System . in , System . out ) ; } static class LowerBoundComparator < T extends Comparable < ? super T > > implements Comparator < T > { public int compare ( T x , T y ) { return ( x . compareTo ( y ) >= 0 ) ? 1 : - 1 ; } } static void solve ( InputStream is , PrintStream os ) { Scanner sc = new Scanner ( is ) ; /* read */ int n = sc . nextInt ( ) ; List < Integer > l = new ArrayList < > ( n ) ; for ( int i = 0 ; i < n ; i ++ ) { l . add ( sc . nextInt ( ) ) ; } Collections . sort ( l ) ; int ans = 0 ; for ( int ai = 0 ; ai < n - 2 ; ai ++ ) { for ( int bi = ai + 1 ; bi < n - 1 ; bi ++ ) { int a = l . get ( ai ) ; int b = l . get ( bi ) ; int ci = - Collections . binarySearch ( l , a + b , new LowerBoundComparator < > ( ) ) - 1 ; ans += ( ci - 1 ) - bi ; } } os . println ( ans ) ; } }
import java . util . Scanner ; public class Main { static int [ ] parent ; static int [ ] size ; static int N , M ; static int [ ] A , B ; static long count ; static long [ ] ans ; public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; N = sc . nextInt ( ) ; M = sc . nextInt ( ) ; A = new int [ M ] ; B = new int [ M ] ; ans = new long [ M + 1 ] ; for ( int i = 0 ; i < M ; i ++ ) { A [ i ] = sc . nextInt ( ) ; B [ i ] = sc . nextInt ( ) ; } UnionFindTree ( N ) ; ans [ M ] = 0 ; count = 0 ; for ( int i = M - 1 ; i >= 0 ; i -- ) { if ( ! same ( A [ i ] , B [ i ] ) ) { count += ( long ) size [ find ( A [ i ] ) ] * size [ find ( B [ i ] ) ] ; } ans [ i ] = count ; union ( A [ i ] , B [ i ] ) ; } for ( int j = 1 ; j <= M ; j ++ ) { System . out . println ( ( long ) N * ( N - 1 ) / 2 - ans [ j ] ) ; } } static void UnionFindTree ( int Size ) { parent = new int [ Size + 1 ] ; size = new int [ Size + 1 ] ; for ( int i = 1 ; i < Size + 1 ; i ++ ) { makeSet ( i ) ; } } public static void makeSet ( int x ) { parent [ x ] = x ; size [ x ] = 1 ; } public static void union ( int x , int y ) { if ( x == y ) { } else { final int xRoot = find ( x ) ; final int yRoot = find ( y ) ; if ( xRoot != yRoot ) { parent [ yRoot ] = xRoot ; size [ xRoot ] += size [ yRoot ] ; } } } public static int find ( int x ) { if ( x != parent [ x ] ) { parent [ x ] = find ( parent [ x ] ) ; } return parent [ x ] ; } public static boolean same ( int x , int y ) { return find ( x ) == find ( y ) ; } }
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { // 入出力高速化 java.io.* とthrows IOExceptionを忘れずに BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int N = Integer.parseInt(br.readLine()); String[] S =br.readLine().split(" ") ; //灰=0、茶=1、緑=2、水=3、青=4、黄=5、橙=6、赤=7 int[]Rate = new int[8]; int top = 0; for(int i=0; i<N; i++) { int a = Integer.parseInt(S[i]); if(a<=399) {Rate[0]++;} if(400<=a && a<=799) {Rate[1]++;} if(800<=a && a<=1199) {Rate[2]++;} if(1200<=a && a<=1599) {Rate[3]++;} if(1600<=a && a<=1999) {Rate[4]++;} if(2000<=a && a<=2399) {Rate[5]++;} if(2400<=a && a<=2799) {Rate[6]++;} if(2800<=a && a<=3199) {Rate[7]++;} if(3200<=a) {top++;} } int min = 0; int Max = 0; for(int m=0; m<8; m++) { if(Rate[m] != 0) { min++; Max++; } } Max = min+top; if(min == 0) {//全て3200以上 min++; } System.out.println(min + " " + Max); } }
import java . util . List ; import java . util . ArrayList ; import java . util . HashMap ; import java . util . Scanner ; public class Main { private static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { HashMap < String , String > map = new HashMap < > ( ) ; int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { String s = sc . next ( ) ; switch ( s ) { case " insert " : map . put ( sc . next ( ) , " " ) ; break ; case " find " : if ( map . containsKey ( sc . next ( ) ) ) { System . out . println ( " yes " ) ; } else { System . out . println ( " no " ) ; } break ; } } } }
import java . util . Scanner ; import java . lang . Math ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a ; int b ; int ans = 0 ; String str ; char op ; while ( true ) { a = sc . nextInt ( ) ; str = sc . next ( ) ; op = str . charAt ( 0 ) ; b = sc . nextInt ( ) ; if ( op == '+' ) { ans = a + b ; System . out . println ( ans ) ; } else if ( op == '-' ) { ans = a - b ; System . out . println ( ans ) ; } else if ( op == '*' ) { ans = a * b ; System . out . println ( ans ) ; } else if ( op == '/' ) { ans = a / b ; System . out . println ( ans ) ; } else if ( op == '?' ) { //System.out.printf("\n"); break; } } } }
import java . util . Scanner ; import java . util . Arrays ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String S = scan . next ( ) ; String [ ] split = S . split ( " " ) ; if ( split [ 2 ] . equals ( split [ 3 ] ) ) { if ( split [ 4 ] . equals ( split [ 5 ] ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } else { System . out . println ( " No " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner cin = new Scanner ( System . in ) ; int n = cin . nextInt ( ) , A [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) A [ i ] = cin . nextInt ( ) ; for ( int i = 1 ; i < n ; i ++ ) { for ( int j = 0 ; j < n - 1 ; j ++ ) System . out . print ( A [ j ] + " " ) ; System . out . println ( A [ n - 1 ] ) ; int v = A [ i ] ; int j = i - 1 ; while ( j >= 0 && A [ j ] > v ) { A [ j + 1 ] = A [ j ] ; j -- ; } A [ j + 1 ] = v ; } for ( int j = 0 ; j < n - 1 ; j ++ ) System . out . print ( A [ j ] + " " ) ; System . out . println ( A [ n - 1 ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; //int cnt = 0; int sum = 0; //int cnn = 0; int kuku[] = new int[100]; for(int i=0;i<10;i++) { kuku[i]=i; for(int k=0;k<10;k++) { kuku[k]=k; sum = (kuku[i])*(kuku[k]); if(sum == N) { System.out.println("Yes"); System.exit(0); }else { //System.out.println("No"); //System.exit(0); continue; } } } //System.out.println(sum); System.out.println("No"); /*for(int j=0;j<82;j++) { cnn = cnn + 1; } System.out.println(cnn);*/ } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; long N = scanner . nextLong ( ) ; long K = scanner . nextLong ( ) ; long answer = N - ( ( N / K ) * K ) ; if ( answer != 0 ) { long check = answer - K ; if ( check < 0 ) { check *= - 1 ; } if ( check < answer ) { answer = check ; } } System . out . println ( answer ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; if ( n >= 10 ) { System . out . println ( r ) ; } else { r += 100 * ( 10 - n ) ; System . out . println ( r ) ; } } }
import java . io . * ; import java . util . * ; import java . lang . * ; public class Main { static class FastReader { BufferedReader br ; StringTokenizer st ; public FastReader ( ) { br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; } String next ( ) { while ( st == null || ! st . hasMoreElements ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } return st . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } double nextDouble ( ) { return Double . parseDouble ( next ( ) ) ; } String nextLine ( ) { String str = " " ; try { str = br . readLine ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return str ; } } public static void main ( String [ ] args ) { FastReader ob = new FastReader ( ) ; long x = ob . nextLong ( ) ; long ans = ( x / 500 ) * 1000 + ( ( x % 500 ) / 5 ) * 5 ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { String s = new Scanner ( System . in ) . next ( ) ; System . out . println ( s . equals ( " RRR " ) ? 3 : s . contains ( " RR " ) ? 2 : s . contains ( " R " ) ? 1 : 0 ) ; } }
import java . util . Scanner ; /** * Rectangle */ public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int area = a * b ; int length = 2 * a + 2 * b ; System . out . println ( area + " " + length ) ; sc . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n , q , sum = 0 , num = 0 ; int [ ] time , end ; String [ ] name ; n = scan . nextInt ( ) ; q = scan . nextInt ( ) ; time = new int [ n ] ; end = new int [ n ] ; name = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { name [ i ] = scan . next ( ) ; time [ i ] = scan . nextInt ( ) ; } while ( num < n ) { for ( int i = 0 ; i < n ; i ++ ) { if ( time [ i ] > 0 ) { if ( time [ i ] <= q ) { sum += time [ i ] ; end [ num ] = i ; num ++ ; time [ i ] = - sum ; } else { time [ i ] -= q ; sum += q ; } } } } for ( int i = 0 ; i < n ; i ++ ) { System . out . println ( name [ end [ i ] ] + " " + - time [ end [ i ] ] ) ; } scan . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] arg ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; if ( x < 14 ) { System . out . println ( x * 800 ) ; } else { int y = x / 15 ; y *= 200 ; x *= 800 ; System . out . println ( x - y ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; scan . close ( ) ; System . out . println ( n * n * n ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; for ( int i = 1 ; i < 6 ; i ++ ) { if ( sc . nextInt ( ) == 0 ) { System . out . println ( i ) ; break ; } } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; double r = Double . parseDouble ( br . readLine ( ) ) ; if ( ( 0 < r ) && ( r <= 10000 ) ) { double f = ( ( double ) ( r * r ) * Math . PI ) ; double d = ( ( double ) ( r * 2 ) * Math . PI ) ; System . out . printf ( " %1.6f %1.6f " , f , d ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int N = scanner . nextInt ( ) ; int K = scanner . nextInt ( ) ; //Listにうまく変換するため Integer[] dislikeNumberInteger = new Integer[K]; for(int i = 0; i < K; i++) { dislikeNumberInteger[i] = Integer.valueOf(scanner.nextInt()); } for(int i = 0; i < 10; i++) { int count = 0; first:while(true) { if(Arrays.asList(dislikeNumberInteger).contains(N / (int) Math.pow(10, i) - (N / (int) Math.pow(10, i + 1)) * 10) == false) { if(count != 0) { //処理＊ Integer[] digits = new Integer[6]; int rest = N; for(int m = 5; m > -1; m--) { digits[m] = rest / (int) Math.pow(10, m); rest = rest % (int) Math.pow(10, m); } second:for(int k = 0; k < 10; k++) { if(Arrays.asList(dislikeNumberInteger).contains(k) == false) { for(int j = i - 1; j > -1; j--) { digits[j] = k; } break second; } } N = 0; for(int z = 0; z < 6; z++) { N = N + (int) Math.pow(10, z) * digits[z]; } } if(N < (int) Math.pow(10, i + 1)) { System.out.println(N); return; } break first; } N = N + (int) Math.pow(10, i); count = count + 1; } } } }
import java . io . * ; import java . util . * ; class Main { static Scanner scanner = new Scanner ( ) ; public static void main ( String [ ] $ ) { int n = scanner . nextInt ( ) ; long ans = 0 ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = scanner . nextInt ( ) - 1 ; } for ( int i = 0 ; i < n ; i ++ ) { ans += scanner . nextInt ( ) ; } int [ ] c = new int [ n ] ; for ( int i = 1 ; i < n ; i ++ ) { c [ i - 1 ] = scanner . nextInt ( ) ; } for ( int i = 1 ; i < n ; i ++ ) { if ( a [ i - 1 ] + 1 == a [ i ] ) { ans += c [ a [ i - 1 ] ] ; } } System . out . println ( ans ) ; } static class Scanner { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) , 1 << 15 ) ; StringTokenizer tokenizer ; String next ( ) { try { while ( tokenizer == null || ! tokenizer . hasMoreTokens ( ) ) { tokenizer = new StringTokenizer ( reader . readLine ( ) ) ; } } catch ( IOException ignored ) { } return tokenizer . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } } }
import java . util . Scanner ; /** * WaitForSunday */ class Main { public static void main ( String [ ] args ) { java . util . Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; int DayToNextSunday = 0 ; switch ( s ) { case " MON " : DayToNextSunday = 6 ; break ; case " TUE " : DayToNextSunday = 5 ; break ; case " WED " : DayToNextSunday = 4 ; break ; case " THU " : DayToNextSunday = 3 ; break ; case " FRI " : DayToNextSunday = 2 ; break ; case " SAT " : DayToNextSunday = 1 ; break ; case " SUN " : DayToNextSunday = 7 ; break ; default : break ; } System . out . println ( DayToNextSunday ) ; } }
import java . util . * ; public class Main { static Scanner sc = new Scanner ( System . in ) ; static int [ ] [ ] dir = new int [ ] [ ] { { 1 , 0 } , { 0 , 1 } , { - 1 , 0 } , { 0 , - 1 } } ; public static void main ( String [ ] args ) { int x = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; Set < Integer > set = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { set . add ( sc . nextInt ( ) ) ; } if ( ! set . contains ( x ) ) System . out . println ( x ) ; else { int diff = 1 ; while ( true ) { int a = x - diff ; int b = x + diff ; if ( ! set . contains ( a ) ) { System . out . println ( a ) ; break ; } if ( ! set . contains ( b ) ) { System . out . println ( b ) ; break ; } diff ++ ; } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; String [ ] s = stdIn . next ( ) . split ( " " ) ; boolean flag = false ; Arrays . sort ( s ) ; for ( int i = 0 ; i < s . length - 1 ; i ++ ) { if ( s [ i ] . equals ( s [ i + 1 ] ) ) { flag = true ; } } if ( flag ) { System . out . println ( " no " ) ; } else { System . out . println ( " yes " ) ; } } }
import java . util . * ; import java . math . BigInteger ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; String s = sc . next ( ) ; if ( s . length ( ) <= k ) { System . out . println ( s ) ; } else { System . out . println ( s . substring ( 0 , k ) + " ... " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( final String [ ] args ) { final Scanner sc = new Scanner ( System . in ) ; while ( true ) { int height = sc . nextInt ( ) ; int wideth = sc . nextInt ( ) ; if ( height + wideth == 0 ) { break ; } for ( int i = 0 ; i < height ; i ++ ) { for ( int j = 0 ; j < wideth ; j ++ ) { System . out . printf ( " # " ) ; } System . out . printf ( " \n " ) ; } System . out . printf ( " \n " ) ; } sc . close ( ) ; } }
import java . util . Scanner ; public class Main { //クラス名はMain public static void main(String[] args) { Scanner in = new Scanner(System.in); int N = in.nextInt(); int hundreds = N / 100; int tens = (N / 10) % 10; // (n % 100) / 10 int ones = N % 10; if ((hundreds == 7) || (tens == 7) || (ones == 7)) System.out.println("Yes"); else System.out.println("No"); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; System . out . println ( Math . min ( n % k , k - n % k ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc = new Scanner(System.in); int N = sc.nextInt(); int[] w = {1,2,4,8,16,32,64}; out: for(int i = N; i > 0; i--) { for(int j = w.length - 1; j >= 0; j--) { if(i == w[j]) { System.out.println(w[j]); break out; } } } } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . Scanner ; /** * Built using CHelper plug-in * Actual solution is at the top */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; Scanner in = new Scanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; ABC138_a solver = new ABC138_a ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class ABC138_a { public void solve ( int testNumber , Scanner in , PrintWriter out ) { int a = in . nextInt ( ) ; String s = in . next ( ) ; if ( a >= 3200 ) { out . println ( s ) ; } else { out . println ( " red " ) ; } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = b ; if ( b < 0 ) { c *= - 1 ; } c += a ; //和ここにいれる a*=b;//積ここに入れる if(c>a){a=c;} System.out.println(a); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 int a = sc.nextInt(); int b = sc.nextInt(); int answer = 0; for (int i = 0; i< 2 ; i++){ if(a >= b){ answer += a; a--; }else if(a < b ){ answer += b; b--; } } System.out.println(answer); } }
import java . math . BigInteger ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int n = stdIn . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { BigInteger s1 = new BigInteger ( stdIn . next ( ) ) ; BigInteger s2 = new BigInteger ( stdIn . next ( ) ) ; s1 = s1 . add ( s2 ) ; String tmp = s1 . toString ( ) ; if ( tmp . length ( ) > 80 ) { tmp = " overflow " ; } System . out . println ( tmp ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; char c [ ] = new char [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { c [ i ] = s . charAt ( i ) ; } Arrays . sort ( c ) ; String d = new String ( c ) ; if ( d . equals ( " abc " ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . HashMap ; import java . util . Map ; import java . util . Scanner ; class Main { private static void solve ( ) { final Scanner scanner = new Scanner ( System . in ) ; final Map < String , Integer > counts = new HashMap < String , Integer > ( ) ; final String [ ] words = scanner . nextLine ( ) . split ( " " ) ; int maximumLength = 0 ; String maximumLengthWord = null ; int maximumCount = 1 ; String maximumCountWord = null ; for ( String word : words ) { if ( word . length ( ) > maximumLength ) { maximumLength = word . length ( ) ; maximumLengthWord = word ; } int count ; if ( counts . containsKey ( word ) ) { count = counts . get ( word ) + 1 ; } else { count = 1 ; } counts . put ( word , count ) ; if ( count > maximumCount ) { maximumCount = count ; maximumCountWord = word ; } } System . out . print ( maximumCountWord ) ; System . out . print ( " " ) ; System . out . print ( maximumLengthWord ) ; System . out . println ( ) ; } public static void main ( String ... args ) { solve ( ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] a ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; long num = n ; while ( n > 1 ) { n -- ; num *= n ; } System . out . println ( num ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Integer N = sc . nextInt ( ) ; Integer M = sc . nextInt ( ) ; List < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { Integer a = sc . nextInt ( ) ; list . add ( a ) ; } int sum = 0 ; for ( int j = 0 ; j < N ; j ++ ) { //合計計算 sum = sum + list.get(j); } int flag = 0; for(int k = 0; k < N; k++){//条件計算 if(list.get(k)*(4*M) >= sum){ flag++; } } if(flag >= M){ System.out.println("Yes"); }else{ System.out.println("No"); } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; /** * Write a description of class Main here. * * @author (your name) * @version (a version number or a date) */ public class Main { public static void main ( String [ ] args ) throws IOException { //Declaración objeto tipo lector. //BufferedReader bf = new BufferedReader(new InputStreamReader(System.in)); Scanner scan = new Scanner(System.in); int x = scan.nextInt(); int y = scan.nextInt(); int z = scan.nextInt(); scan.close(); int guardar = x; //Cambio x = z; z = y; y = guardar; System.out.println(x + " " + y + " " + z); } }
import java . util . Scanner ; public class Main { public static int gcd ( int x , int y ) { int z = x % y ; if ( z == 0 ) { return y ; } else { return ( gcd ( y , z ) ) ; } } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; sc . close ( ) ; System . out . println ( gcd ( x , y ) ) ; } }
import java . util . * ; import java . io . * ; public class Main { static int [ ] swim ; static int [ ] bugs ; static int [ ] hw ; static int [ ] [ ] dp ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; //BufferedReader br = new BufferedReader(new FileWriter("vacation.in"); //StringTokenizer st = new StringTokenizer(br.readLine()); //PrintWriter pw = new PrintWriter("vacation.out"); int n = sc.nextInt(); swim = new int[n+1]; bugs = new int[n+1]; hw = new int[n+1]; dp = new int[n+1][3]; for(int x = 0; x<n+1; x++){ Arrays.fill(dp[x], Integer.MIN_VALUE); } for(int x = 1; x<n+1; x++){ swim[x] = sc.nextInt(); bugs[x] = sc.nextInt(); hw[x] = sc.nextInt(); } System.out.println(Math.max(Math.max(hap(n, 0), hap(n, 1)), hap(n, 2))); } public static int hap(int n, int act){ if(dp[n][act] != Integer.MIN_VALUE) return dp[n][act]; if(n == 0) return dp[n][act] = 0; if(act == 0){ return dp[n][act] = Math.max(hap(n-1, 1) + bugs[n], hap(n-1,2) + hw[n]); } else if(act == 1){ return dp[n][act] = Math.max(hap(n-1, 0) + swim[n], hap(n-1,2) + hw[n]); } else return dp[n][act] = Math.max(hap(n-1, 0) + swim[n], hap(n-1,1) + bugs[n]); } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t , k , l ; String p ; t = sc . nextInt ( ) ; l = t / 500 ; int a = t % 500 ; int ans = l * 1000 + ( ( a / 5 ) * 5 ) ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; try { int first = sc . nextInt ( ) ; int second = sc . nextInt ( ) ; int third = sc . nextInt ( ) ; int values [ ] = { first , second , third } ; int count5 = 0 ; int count7 = 0 ; for ( int value : values ) { count5 += value == 5 ? 1 : 0 ; count7 += value == 7 ? 1 : 0 ; } if ( count5 == 2 && count7 == 1 ) { System . out . println ( " YES " ) ; } else { throw new Exception ( ) ; } } catch ( Throwable t ) { System . out . println ( " NO " ) ; } finally { sc . close ( ) ; } } }
import java . util . * ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String n = scan . next ( ) ; for ( int i = 0 ; i < 3 ; i ++ ) { if ( n . charAt ( i ) == '7' ) { System . out . println ( " Yes " ) ; System . exit ( 0 ) ; } } System . out . println ( " No " ) ; } }
import java . util . * ; import static java . lang . Math . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // a、bの入力 int a = sc.nextInt(); int b = sc.nextInt(); // 積を計算 int c = a * b; // 偶数なら'Even'、奇数なら'Odd'を出力 if(isEven(c)){ System.out.println("Even"); }else{ System.out.println("Odd"); } } static boolean isEven(int n){ if(n%2 == 0){ return true; }else{ return false; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; for ( int i = 1 ; i < 10 ; i ++ ) { if ( N % i == 0 && N / i < 10 ) { System . out . println ( " Yes " ) ; return ; } } System . out . println ( " No " ) ; } }
import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . io . FilterInputStream ; import java . io . BufferedInputStream ; import java . io . InputStream ; /** * @author Nikunj */ public class Main { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; ScanReader in = new ScanReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; OddString solver = new OddString ( ) ; solver . solve ( 1 , in , out ) ; out . close ( ) ; } static class OddString { public void solve ( int testNumber , ScanReader in , PrintWriter out ) { String s = in . scanString ( ) ; for ( int i = 0 ; i < s . length ( ) ; i += 2 ) { out . print ( s . charAt ( i ) ) ; } } } static class ScanReader { private byte [ ] buf = new byte [ 4 * 1024 ] ; private int index ; private BufferedInputStream in ; private int total ; public ScanReader ( InputStream inputStream ) { in = new BufferedInputStream ( inputStream ) ; } private int scan ( ) { if ( index >= total ) { index = 0 ; try { total = in . read ( buf ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } if ( total <= 0 ) return - 1 ; } return buf [ index ++ ] ; } public String scanString ( ) { int c = scan ( ) ; while ( isWhiteSpace ( c ) ) c = scan ( ) ; StringBuilder res = new StringBuilder ( ) ; do { res . appendCodePoint ( c ) ; c = scan ( ) ; } while ( ! isWhiteSpace ( c ) ) ; return res . toString ( ) ; } private boolean isWhiteSpace ( int n ) { if ( n == ' ' || n == '\n' || n == '\r' || n == '\t' || n == - 1 ) return true ; else return false ; } } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; double M = sc . nextInt ( ) ; double sum = 0 ; int ans = 0 ; double x = ( 4 * M ) ; int A [ ] = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc . nextInt ( ) ; sum = sum + A [ i ] ; } double y = sum / x ; for ( int i = 0 ; i < N ; i ++ ) { if ( A [ i ] >= y ) { ans ++ ; } } if ( ans >= M ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int num , key ; String str ; String [ ] str_array ; try { num = Integer . parseInt ( reader . readLine ( ) ) ; str = reader . readLine ( ) ; str_array = str . split ( " " ) ; int [ ] array = new int [ num ] ; for ( int i = 0 ; i < num ; i ++ ) { array [ i ] = Integer . parseInt ( str_array [ i ] ) ; } for ( int i = 0 ; i < num ; i ++ ) { key = array [ i ] ; int j = i - 1 ; while ( j >= 0 && array [ j ] > key ) { array [ j + 1 ] = array [ j ] ; j -- ; } array [ j + 1 ] = key ; for ( int k = 0 ; k < num ; k ++ ) { System . out . print ( array [ k ] ) ; if ( k != num - 1 ) System . out . print ( " " ) ; } System . out . println ( ) ; } } catch ( IOException e ) { //???????????? } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int xmax = n / 4 ; int ymax = n / 7 ; // 4x+7y=n for (int x = 0; x <= xmax; x++) { for (int y = 0; y <=ymax; y++) { if (n == 4 * x + 7 * y) { System.out.println("Yes"); return; } } } System.out.println("No"); } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . math . BigDecimal ; public class Main { public static void main ( String [ ] args ) { try { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String inputData = reader . readLine ( ) ; String [ ] strNumber = inputData . split ( " " ) ; int a = Integer . parseInt ( strNumber [ 0 ] ) ; int b = Integer . parseInt ( strNumber [ 1 ] ) ; BigDecimal bdA = new BigDecimal ( a ) ; BigDecimal bdB = new BigDecimal ( b ) ; int d = a / b ; int r = a % b ; BigDecimal bdDivide = bdA . divide ( bdB , 8 , BigDecimal . ROUND_HALF_UP ) . setScale ( 8 , BigDecimal . ROUND_FLOOR ) ; System . out . println ( d + " " + r + " " + bdDivide . toPlainString ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } }
import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] s = br . readLine ( ) . split ( " " ) ; int [ ] a = new int [ 3 ] ; a [ 0 ] = Integer . parseInt ( s [ 0 ] ) ; a [ 1 ] = Integer . parseInt ( s [ 1 ] ) ; a [ 2 ] = Integer . parseInt ( s [ 2 ] ) ; int temp = 0 ; if ( a [ 0 ] > a [ 1 ] ) { temp = a [ 0 ] ; a [ 0 ] = a [ 1 ] ; a [ 1 ] = temp ; } if ( a [ 0 ] > a [ 2 ] ) { temp = a [ 0 ] ; a [ 0 ] = a [ 2 ] ; a [ 2 ] = temp ; } if ( a [ 1 ] > a [ 2 ] ) { temp = a [ 1 ] ; a [ 1 ] = a [ 2 ] ; a [ 2 ] = temp ; } System . out . println ( a [ 0 ] + " " + a [ 1 ] + " " + a [ 2 ] ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = Integer . parseInt ( scan . next ( ) ) ; int b = Integer . parseInt ( scan . next ( ) ) ; int c = Integer . parseInt ( scan . next ( ) ) ; int [ ] array = { a , b , c } ; Arrays . sort ( array ) ; System . out . print ( array [ 0 ] + array [ 1 ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Main main = new Main ( ) ; main . run ( ) ; } void run ( ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int K = sc . nextInt ( ) ; int result = K * ( int ) Math . pow ( K - 1 , N - 1 ) ; System . out . println ( result ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int x = Integer . parseInt ( scan . next ( ) ) ; System . out . println ( ( int ) Math . pow ( x , 3 ) ) ; scan . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) throws Exception { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; int reds = 0 ; int idx = 0 ; while ( idx < s . length ( ) ) { if ( s . charAt ( idx ++ ) == '0' ) reds ++ ; } System . out . println ( Math . min ( reds , s . length ( ) - reds ) * 2 ) ; } }
import java . io . * ; import java . util . * ; public class Main { static PrintWriter out ; static StringBuilder sb ; static long mod = 998244353 ; public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; out = new PrintWriter ( System . out ) ; String s = sc . nextLine ( ) ; Stack < Character > st = new Stack < > ( ) ; Stack < Character > en = new Stack < > ( ) ; boolean rev = false ; int q = sc . nextInt ( ) ; while ( q -- > 0 ) { int x = sc . nextInt ( ) ; if ( x == 1 ) rev = ! rev ; else { int f = sc . nextInt ( ) ; char c = sc . nextChar ( ) ; if ( f == 1 ) { if ( rev ) { en . push ( c ) ; } else { st . push ( c ) ; } } else { if ( rev ) { st . push ( c ) ; } else { en . push ( c ) ; } } } // System.out.println(rev+" "+st+" "+en); } if (rev) { sb=new StringBuilder(); while (!en.isEmpty()) out.print(en.pop()); out.print(sb.append(s).reverse()); for(char k: st) out.print(k); } else { while (!st.isEmpty()) out.print(st.pop()); out.print(s); for(char k: en) out.print(k); } out.flush(); } static long modPow(long a, long e) { long res = 1; while (e > 0) { if ((e & 1) == 1) res = (res * a) % mod; a = (a * a) % mod; e >>= 1; } return res; } static class Scanner { StringTokenizer st; BufferedReader br; public Scanner(InputStream system) { br = new BufferedReader(new InputStreamReader(system)); } public Scanner(String file) throws Exception { br = new BufferedReader(new FileReader(file)); } public String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } public String nextLine() throws IOException { return br.readLine(); } public int nextInt() throws IOException { return Integer.parseInt(next()); } public double nextDouble() throws IOException { return Double.parseDouble(next()); } public char nextChar() throws IOException { return next().charAt(0); } public Long nextLong() throws IOException { return Long.parseLong(next()); } public boolean ready() throws IOException { return br.ready(); } public void waitForInput() throws InterruptedException { Thread.sleep(3000); } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Solve s = new Solve ( ) ; s . solve ( ) ; } } class Solve { public void solve ( ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; String T = sc . next ( ) ; String ans ; char [ ] s = S . toCharArray ( ) ; char [ ] t = T . toCharArray ( ) ; int temp ; boolean flag ; boolean breakF = false ; StringBuffer sb = new StringBuffer ( ) ; int sl = s . length ; int tl = t . length ; int start = 0 ; int last = sl - tl ; for ( int i = 0 ; i < tl ; i ++ ) { for ( int j = last ; j >= i ; j -- ) { flag = true ; if ( s [ j ] == t [ i ] || s [ j ] == '?' ) { for ( int k = 0 ; k < tl ; k ++ ) { if ( ! check ( s [ j - i + k ] , t [ k ] ) ) { flag = false ; break ; } } if ( flag ) { int c = 0 ; for ( int k = 0 ; k < sl ; k ++ ) { // j-i~j-i+tlまではsbにtlを入れる。 // ?部分はaを入れる。 if (k >= j-i && k < j-i+tl) { sb.append(t[c]); c++; } else { if (s[k] == '?') { sb.append('a'); } else { sb.append(s[k]); } } } breakF = true; break; } } // end if if (breakF) break; } // end for j if (breakF) break; } // end for i if (breakF) { System.out.println(sb.toString()); } else { System.out.println("UNRESTORABLE"); } } public boolean check(char s, char t) { if (s == '?' || s == t) { return true; } return false; } public int checkContain(char s, char[] a) { if (s =='?') return 0; for (int i = 0; i < a.length; i++) { if (s == a[i]) return i; } return -1; } public boolean check(char s, char[] t, int index) { boolean flag = false; if (s == '?') { flag = true; } else { for (int i = index; i < t.length; i++) { if (s == t[i]) { flag = true; } } } return flag; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Integer day = sc . nextInt ( ) ; int minus = 25 ; System . out . print ( " Christmas " ) ; for ( int i = 0 ; i < ( minus - day ) ; i ++ ) { System . out . print ( " Eve " ) ; } System . out . println ( " " ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; System . out . println ( a * b ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = Long . parseLong ( sc . next ( ) ) ; Map < Long , Integer > map = getFactor ( n ) ; long sum = 0 ; int base ; for ( Integer value : map . values ( ) ) { base = 1 ; while ( value >= base ) { sum ++ ; value -= base ; base ++ ; } } System . out . println ( sum ) ; } public static Map < Long , Integer > getFactor ( long n ) { Map < Long , Integer > map = new HashMap < > ( ) ; for ( long i = 2 ; i * i <= n ; i ++ ) { if ( n % i == 0 ) { int count = 0 ; while ( n % i == 0 ) { count ++ ; n /= i ; } map . put ( i , count ) ; } } if ( n != 1 ) { map . put ( n , 1 ) ; } return map ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; // input final int NUM = scan.nextInt(); final int DIMENSION = scan.nextInt(); int[][] points = new int [NUM][DIMENSION]; for(int i = 0; i < NUM; i++){ for(int j = 0; j < DIMENSION; j++){ points[i][j] = scan.nextInt(); } } // search int count = 0; for(int i = 0; i < NUM - 1; i++){ for(int j = i + 1; j < NUM; j++){ double sum = 0.0; for(int k = 0; k < DIMENSION; k++){ sum += Math.pow(points[i][k] - points[j][k] , 2); } sum = Math.sqrt(sum); if(sum == (int)sum){ count++; } } } // answer System.out.println(count); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( ( a == 1 || a == 2 ) && ( b == 1 || b == 2 ) ) { System . out . println ( " 3 " ) ; } else if ( ( a == 1 || a == 3 ) && ( b == 1 || b == 3 ) ) { System . out . println ( " 2 " ) ; } else { System . out . println ( " 1 " ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) { int price ; BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; try { price = Integer . parseInt ( reader . readLine ( ) ) ; System . out . println ( ( 10000 - price ) % 1000 ) ; } catch ( IOException e ) { // TODO 自動生成された catch ブロック e.printStackTrace(); } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; char [ ] sList = S . toCharArray ( ) ; int sum = 0 ; for ( char s : sList ) { if ( s == '+' ) { sum += 1 ; } else { sum -= 1 ; } } System . out . println ( sum ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int m = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int cnt = 0 ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 22 ; j <= d ; j ++ ) { int x = j / 10 ; int y = j % 10 ; if ( x >= 2 && y >= 2 && x * y == i ) cnt ++ ; } } System . out . println ( cnt ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ 100010 ] ; for ( int i = 0 ; i < n ; i ++ ) { int atmp = sc . nextInt ( ) ; a [ atmp ] ++ ; a [ atmp + 1 ] ++ ; a [ atmp + 2 ] ++ ; } sc . close ( ) ; int [ ] num = new int [ n ] ; int max = 0 ; for ( int i = 0 ; i < 100010 ; i ++ ) { if ( a [ i ] > max ) { max = a [ i ] ; } } System . out . println ( max ) ; } }
import java . util . * ; import java . io . * ; public class Main { static int mod = ( int ) 1e9 + 7 ; static int DX [ ] = { - 1 , 0 , 1 , 0 } , DY [ ] = { 0 , - 1 , 0 , 1 } ; public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( System . in ) ; int n = fs . nextInt ( ) , k = fs . nextInt ( ) ; int h [ ] = fs . nextIntArray ( n ) ; rsort ( h ) ; int cnt = 0 ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( cnt < k ) cnt ++ ; else { ans += h [ i ] ; } } System . out . println ( ans ) ; } //reverseOrderSort : O(NlogN) static void rsort(int[] ar) { Arrays.sort(ar); int len = ar.length; for (int i = 0; i < len / 2; i++) { int tmp = ar[i]; ar[i] = ar[len - 1 - i]; ar[len - 1 - i] = tmp; } } static void rsort(long[] ar) { Arrays.sort(ar); int len = ar.length; for (int i = 0; i < len / 2; i++) { long tmp = ar[i]; ar[i] = ar[len - 1 - i]; ar[len - 1 - i] = tmp; } } } //高速なScanner class FastScanner { private BufferedReader reader = null; private StringTokenizer tokenizer = null; public FastScanner(InputStream in) { reader = new BufferedReader(new InputStreamReader(in)); tokenizer = null; } public String next() { if (tokenizer == null || !tokenizer.hasMoreTokens()) { try { tokenizer = new StringTokenizer(reader.readLine()); } catch (IOException e) { throw new RuntimeException(e); } } return tokenizer.nextToken(); } public String nextLine() { if (tokenizer == null || !tokenizer.hasMoreTokens()) { try { return reader.readLine(); } catch (IOException e) { throw new RuntimeException(e); } } return tokenizer.nextToken("\n"); } public long nextLong() { return Long.parseLong(next()); } public int nextInt() { return Integer.parseInt(next()); } public double nextDouble() { return Double.parseDouble(next()); } public int[] nextIntArray(int n) { int[] a = new int[n]; for (int i = 0; i < n; i++) a[i] = nextInt(); return a; } public long[] nextLongArray(int n) { long[] a = new long[n]; for (int i = 0; i < n; i++) a[i] = nextLong(); return a; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] h = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = sc . nextInt ( ) ; } Arrays . sort ( h ) ; int min = Integer . MAX_VALUE ; for ( int i = 0 ; i <= n - k ; i ++ ) { if ( min > h [ i + k - 1 ] - h [ i ] ) min = h [ i + k - 1 ] - h [ i ] ; } System . out . println ( min ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int K = sc . nextInt ( ) ; for ( int i = A ; i <= B ; i ++ ) { if ( i < A + K || i > B - K ) { System . out . println ( i ) ; } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String num = sc . nextLine ( ) ; String [ ] numSpl = num . split ( " " ) ; int n = Integer . parseInt ( numSpl [ 0 ] ) ; int k = Integer . parseInt ( numSpl [ 1 ] ) ; String s = sc . nextLine ( ) ; String [ ] spl = s . split ( " " ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( i == k - 1 ) { sb . append ( spl [ i ] . toLowerCase ( ) ) ; } else { sb . append ( spl [ i ] ) ; } } System . out . println ( sb ) ; sc . close ( ) ; } }
import java . io . * ; import java . util . Scanner ; import java . util . HashSet ; import java . util . Iterator ; public class Main { public static void main ( String [ ] args ) { int c = 0 ; Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; HashSet < Integer > s = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { s . add ( sc . nextInt ( ) ) ; } int q = sc . nextInt ( ) ; HashSet < Integer > t = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < q ; i ++ ) { t . add ( sc . nextInt ( ) ) ; } Iterator < Integer > it = s . iterator ( ) ; while ( it . hasNext ( ) ) { if ( t . contains ( it . next ( ) ) ) c ++ ; } System . out . println ( c ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 double a = sc.nextDouble(); double v = sc.nextDouble(); double b = sc.nextDouble(); double w = sc.nextDouble(); double t = sc.nextDouble(); if (a > b) { if (b-w*t >= a-v*t) { System.out.println("YES"); } else { System.out.println("NO"); } } else { if (b+w*t <= a+v*t) { System.out.println("YES"); } else { System.out.println("NO"); } } sc.close(); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc = new Scanner(System.in); int n,a,b; n = sc.nextInt(); a = sc.nextInt(); b = sc.nextInt(); if (n*a < b) { System.out.println(n*a); } else { System.out.println(b); } } }
import java . io . * ; import java . util . * ; public class Main { PrintWriter out = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; BufferedReader in = new BufferedReader ( new InputStreamReader ( System . in ) ) ; public void go ( ) throws IOException { StringTokenizer tok = new StringTokenizer ( in . readLine ( ) ) ; int n = Integer . parseInt ( tok . nextToken ( ) ) ; int m = Integer . parseInt ( tok . nextToken ( ) ) ; ArrayList < Job > jobs = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { tok = new StringTokenizer ( in . readLine ( ) ) ; jobs . add ( new Job ( Integer . parseInt ( tok . nextToken ( ) ) , Integer . parseInt ( tok . nextToken ( ) ) ) ) ; } Collections . sort ( jobs ) ; PriorityQueue < Job > pq = new PriorityQueue < > ( ( a , b ) -> { if ( a . reward == b . reward ) { return - Integer . compare ( a . time , b . time ) ; } return Integer . compare ( a . reward , b . reward ) ; } ) ; long sum = 0 ; for ( Job j : jobs ) { if ( m - pq . size ( ) >= j . time ) { pq . add ( j ) ; sum += j . reward ; } else if ( ! pq . isEmpty ( ) ) { if ( j . reward > pq . peek ( ) . reward ) { sum -= pq . remove ( ) . reward ; pq . add ( j ) ; sum += j . reward ; } } } out . println ( sum ) ; out . flush ( ) ; in . close ( ) ; } public static void main ( String [ ] args ) throws IOException { new Main ( ) . go ( ) ; } private class Job implements Comparable < Job > { int time , reward ; public Job ( int tm , int rw ) { this . time = tm ; this . reward = rw ; } public int compareTo ( Job other ) { if ( time == other . time ) { return - Integer . compare ( reward , other . reward ) ; } return - Integer . compare ( time , other . time ) ; } } }
import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Map < Character , Integer > map = new LinkedHashMap < > ( ) ; for ( char ch = 'a' ; ch <= 'z' ; ch ++ ) { map . put ( ch , 0 ) ; } while ( sc . hasNextLine ( ) ) { String str = sc . nextLine ( ) ; String str2 = str . toLowerCase ( ) ; for ( int i = 0 ; i < str2 . length ( ) ; i ++ ) { char ch = str2 . charAt ( i ) ; if ( map . get ( ch ) != null ) { map . put ( ch , map . get ( ch ) + 1 ) ; } } } for ( Character ch : map . keySet ( ) ) { System . out . println ( ch + " : " + map . get ( ch ) ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { ArrayList < ArrayDeque < Character > > color = new ArrayList < ArrayDeque < Character > > ( ) ; ArrayList < Character > result = new ArrayList < Character > ( ) ; Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { color . add ( new ArrayDeque < Character > ( ) ) ; } String command ; while ( ! ( ( command = sc . next ( ) ) . equals ( " quit " ) ) ) { if ( command . equals ( " push " ) ) { color . get ( sc . nextInt ( ) - 1 ) . push ( sc . next ( ) . charAt ( 0 ) ) ; } else if ( command . equals ( " pop " ) ) { result . add ( color . get ( sc . nextInt ( ) - 1 ) . pop ( ) ) ; } else if ( command . equals ( " move " ) ) { Character c = color . get ( sc . nextInt ( ) - 1 ) . pop ( ) ; color . get ( sc . nextInt ( ) - 1 ) . push ( c ) ; } } for ( Character el : result ) { System . out . println ( el ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { int a ; Scanner s = new Scanner ( System . in ) ; a = s . nextInt ( ) ; System . out . println ( a + a * a + a * a * a ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc = new Scanner(System.in); int bannum = sc.nextInt(); String keyword = sc.next(); String kanban; int cnt = 2; int knum = 0; for(int s = 0;s < bannum;s++){ kanban = sc.next(); loop:for(int i = 0; kanban.length()-i > keyword.length()-1;i++){ if(keyword.charAt(0) == kanban.charAt(i)){ for(int j = kanban.length()-1;j-i>=keyword.length()-1;j--){ if(keyword.charAt(keyword.length()-1) == kanban.charAt(j)){ cnt = 2; for(int k = 1;k <= keyword.length()-1;k++){ //System.out.println(keyword.charAt(k)); //System.out.println(kanban.charAt((j-i)/(keyword.length()-1)*k+i)); if(keyword.charAt(k) == kanban.charAt((j-i)/(keyword.length()-1)*k+i)){ cnt++; if(cnt-1 == keyword.length()){ knum++; break loop; } } } } } } } } System.out.println(knum); /* if(cnt-1 == keyword.length()){ System.out.print("?????£??????"); } */ } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; long K = sc . nextLong ( ) ; long [ ] A = new long [ N ] ; String [ ] a = new String [ N ] ; int max = 42 ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc . nextLong ( ) ; // 二進数を42桁で左側を0で埋める a[i] = String.format("%42s", Long.toBinaryString(A[i])).replace(" ", "0"); } sc.close(); String k = String.format("%42s", Long.toBinaryString(K)).replace(" ", "0"); long[] c = new long[max]; int[] b = new int[max]; for(int i = 0; i < max; i++) { if(k.charAt(i) == '1') { b[i]++;; } } for(String s : a) { for(int i = 0; i < max; i++) { if(s.charAt(i) == '1') { c[i]++; } } } long[][] dp = new long[max + 1][2]; for(int i = 0; i <= max; i++) { dp[i][0] = -1; dp[i][1] = -1; } dp[0][0] = 0; for(int i = 0; i < max; i++) { long t = (long)Math.pow(2, max - 1 - i); long v0 = t * c[i]; // i桁目を0としたときの報酬 long v1 = t * (N - c[i]); // i桁目を1としたときの報酬 if(dp[i][1] != -1) { dp[i + 1][1] = dp[i][1] + Math.max(v0, v1); } if(dp[i][0] != -1) { if(b[i] == 1) { dp[i + 1][1] = Math.max(dp[i + 1][1], dp[i][0] + v0); dp[i + 1][0] = dp[i][0] + Math.max(v1, v0); }else { dp[i + 1][0] = dp[i][0] + v0; } } } long ans = Math.max(dp[max][0], dp[max][1]); System.out.println(ans); } static void disp(long[] a) { for(long i : a) { System.out.printf("%d ", i); } System.out.println(); } static void disp(int[] a) { for(long i : a) { System.out.printf("%d ", i); } System.out.println(); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // ?¨??????\??????????????????????????????????????? Scanner sc = new Scanner(System.in); // ????????????????????????????????´??°?????¨???????????????????????? int x = sc.nextInt(); int answer = x*x*x /* ??????????????????3??????????????? */; System.out.println(answer); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( a >= b ) for ( int i = 0 ; i < a ; i ++ ) System . out . print ( b ) ; else for ( int i = 0 ; i < b ; i ++ ) System . out . print ( a ) ; } }
import java . util . HashMap ; import java . util . Map ; import java . util . Scanner ; public class Main { private static Map < Character , Character > firstRule = new HashMap < Character , Character > ( ) ; private static Map < Character , Character > nextRule = new HashMap < Character , Character > ( ) ; static { firstRule . put ( '1' , '.' ) ; firstRule . put ( '2' , 'a' ) ; firstRule . put ( '3' , 'd' ) ; firstRule . put ( '4' , 'g' ) ; firstRule . put ( '5' , 'j' ) ; firstRule . put ( '6' , 'm' ) ; firstRule . put ( '7' , 'p' ) ; firstRule . put ( '8' , 't' ) ; firstRule . put ( '9' , 'w' ) ; // 1 nextRule.put('.', ','); nextRule.put(',', '!'); nextRule.put('!', '?'); nextRule.put('?', ' '); nextRule.put(' ', '.'); // 2 nextRule.put('a', 'b'); nextRule.put('b', 'c'); nextRule.put('c', 'a'); // 3 nextRule.put('d', 'e'); nextRule.put('e', 'f'); nextRule.put('f', 'd'); // 4 nextRule.put('g', 'h'); nextRule.put('h', 'i'); nextRule.put('i', 'g'); // 5 nextRule.put('j', 'k'); nextRule.put('k', 'l'); nextRule.put('l', 'j'); // 6 nextRule.put('m', 'n'); nextRule.put('n', 'o'); nextRule.put('o', 'm'); // 7 nextRule.put('p', 'q'); nextRule.put('q', 'r'); nextRule.put('r', 's'); nextRule.put('s', 'p'); // 8 nextRule.put('t', 'u'); nextRule.put('u', 'v'); nextRule.put('v', 't'); // 9 nextRule.put('w', 'x'); nextRule.put('x', 'y'); nextRule.put('y', 'z'); nextRule.put('z', 'w'); } public static void main(String[] args) { Scanner s = new Scanner(System.in); int N = Integer.parseInt(s.next()); for (int i = 0; i < N; i++) { String in = s.next(); System.out.println(solve(in)); } } private static String solve(String in) { StringBuilder buf = new StringBuilder(); Character current = null; for (char ch : in.toCharArray()) { if (ch == '0' && current != null) { buf.append(current); current = null; continue; } current = nextChar(ch, current); } return buf.toString(); } private static Character nextChar(char in, Character current) { return (current == null) ? firstRule.get(in) : nextRule.get(current); } }
import java . util . Scanner ; //正解例 public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int a = sc.nextInt(); int b = sc.nextInt(); int avarage = ((a + b + 1)/2); System.out.println(avarage); } }
import java . io . IOException ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int X = sc . nextInt ( ) ; int T = sc . nextInt ( ) ; if ( N / X == 0 ) { System . out . println ( T ) ; } else { int i = N / X ; if ( N % X == 0 ) { System . out . println ( T * i ) ; } else { System . out . println ( T * i + T ) ; } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { String [ ] [ ] alphabet = new String [ 2 ] [ 27 ] ; alphabet [ 0 ] [ 0 ] = " a " ; Scanner sc = new Scanner ( System . in ) ; String str = sc . nextLine ( ) ; String [ ] strAry = str . split ( " " ) ; char charAry [ ] = str . toCharArray ( ) ; for ( int i = 0 ; i < strAry . length ; i ++ ) { if ( Character . isUpperCase ( charAry [ i ] ) ) { strAry [ i ] = strAry [ i ] . toLowerCase ( ) ; } else if ( Character . isLowerCase ( charAry [ i ] ) ) { strAry [ i ] = strAry [ i ] . toUpperCase ( ) ; } System . out . print ( strAry [ i ] ) ; } System . out . println ( " " ) ; } }
import java . io . * ; import java . util . * ; public class Main { static void main ( ) throws Exception { int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] , b = new int [ n ] ; long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; b [ i ] = sc . nextInt ( ) ; sum += a [ i ] ; } // shuffle(a); // shuffle(b); // Arrays.sort(a); // Arrays.sort(b); long min=sum; for(int i=0;i<n;i++) { if(b[i]<a[i]) { min=Math.min(min, b[i]); } } pw.println(sum-min); } public static void main(String[] args) throws Exception{ sc=new MScanner(System.in); pw = new PrintWriter(System.out); int tc=1; // tc=sc.nextInt(); while(tc-->0) main(); pw.flush(); } static PrintWriter pw; static MScanner sc; static class MScanner { StringTokenizer st; BufferedReader br; public MScanner(InputStream system) { br = new BufferedReader(new InputStreamReader(system)); } public MScanner(String file) throws Exception { br = new BufferedReader(new FileReader(file)); } public String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } public int[] intArr(int n) throws IOException { int[]in=new int[n];for(int i=0;i<n;i++)in[i]=nextInt(); return in; } public long[] longArr(int n) throws IOException { long[]in=new long[n];for(int i=0;i<n;i++)in[i]=nextLong(); return in; } public int[] intSortedArr(int n) throws IOException { int[]in=new int[n];for(int i=0;i<n;i++)in[i]=nextInt(); shuffle(in); Arrays.sort(in); return in; } public long[] longSortedArr(int n) throws IOException { long[]in=new long[n];for(int i=0;i<n;i++)in[i]=nextLong(); shuffle(in); Arrays.sort(in); return in; } public Integer[] IntegerArr(int n) throws IOException { Integer[]in=new Integer[n];for(int i=0;i<n;i++)in[i]=nextInt(); return in; } public Long[] LongArr(int n) throws IOException { Long[]in=new Long[n];for(int i=0;i<n;i++)in[i]=nextLong(); return in; } public String nextLine() throws IOException { return br.readLine(); } public int nextInt() throws IOException { return Integer.parseInt(next()); } public double nextDouble() throws IOException { return Double.parseDouble(next()); } public char nextChar() throws IOException { return next().charAt(0); } public long nextLong() throws IOException { return Long.parseLong(next()); } public boolean ready() throws IOException { return br.ready(); } public void waitForInput() throws InterruptedException { Thread.sleep(3000); } } static void shuffle(int[]in) { for(int i=0;i<in.length;i++) { int idx=(int)(Math.random()*in.length); int tmp=in[i]; in[i]=in[idx]; in[idx]=tmp; } } static void shuffle(long[]in) { for(int i=0;i<in.length;i++) { int idx=(int)(Math.random()*in.length); long tmp=in[i]; in[i]=in[idx]; in[idx]=tmp; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int ans = 1000 - ( n % 1000 ) ; ans = ans == 1000 ? 0 : ans ; System . out . println ( ans ) ; sc . close ( ) ; } }
import java . io . InputStream ; import java . io . PrintStream ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { solve ( System . in , System . out ) ; } static void solve ( InputStream is , PrintStream os ) { Scanner sc = new Scanner ( is ) ; long n = sc . nextLong ( ) ; long cap [ ] = new long [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { cap [ i ] = sc . nextLong ( ) ; } int botttleneckIndex = 0 ; long bottoleneck = Long . MAX_VALUE ; for ( int i = 0 ; i < cap . length ; i ++ ) { if ( cap [ i ] < bottoleneck ) { botttleneckIndex = i ; bottoleneck = cap [ i ] ; } } long count = ( n + bottoleneck - 1 ) / bottoleneck + 4 ; os . println ( count ) ; } }
import java . io . BufferedReader ; import java . io . * ; import java . util . * ; import java . util . ArrayList ; import java . util . Iterator ; import java . util . List ; import java . util . Collections ; public class Main { public static void main ( final String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; List < Integer > list = new ArrayList < > ( ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; String sum = t . concat ( s ) ; System . out . println ( sum ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner src = new Scanner ( System . in ) ; int a = src . nextInt ( ) ; int b = src . nextInt ( ) ; int c = src . nextInt ( ) ; if ( ( a < b ) && ( b < c ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . io . * ; import java . util . * ; import java . lang . * ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; while ( true ) { String line = scan . nextLine ( ) ; int s = 0 ; if ( line . charAt ( 0 ) == '0' ) { break ; } for ( int i = 0 ; i < line . length ( ) ; ++ i ) { s += Character . digit ( line . charAt ( i ) , 10 ) ; } System . out . println ( s ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner stdIn = new Scanner(System.in); int n = stdIn.nextInt(); int x = stdIn.nextInt(); int t = stdIn.nextInt(); System.out.println((n+x-1)/x*t); } }
import java . util . * ; import java . math . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; BigInteger [ ] arr = new BigInteger [ N ] ; BigInteger res = new BigInteger ( " 0 " ) ; for ( int i = 0 ; i < N ; i ++ ) { arr [ i ] = sc . nextBigInteger ( ) ; if ( ( i > 0 ) && ( arr [ i ] . compareTo ( arr [ i - 1 ] ) == - 1 ) ) { BigInteger x = arr [ i - 1 ] . subtract ( arr [ i ] ) ; arr [ i ] = arr [ i ] . add ( x ) ; res = res . add ( x ) ; } } System . out . println ( res ) ; } }
import java . util . Scanner ; public class Main { private static int A ; private static int B ; private static int C ; private static long K ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; A = sc . nextInt ( ) ; B = sc . nextInt ( ) ; C = sc . nextInt ( ) ; K = sc . nextLong ( ) ; System . out . println ( solve ( ) ) ; } private static String solve ( ) { if ( K % 2 == 0 ) { return String . valueOf ( A - B ) ; } else { return String . valueOf ( B - A ) ; } } }
import java . util . * ; public class Main { Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } void run ( ) { int n = sc . nextInt ( ) ; long k = sc . nextLong ( ) ; int [ ] arr = new int [ n ] ; final int L = 60 ; int [ ] [ ] to = new int [ L ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { to [ 0 ] [ i ] = sc . nextInt ( ) - 1 ; } for ( int i = 1 ; i < L ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { to [ i ] [ j ] = to [ i - 1 ] [ to [ i - 1 ] [ j ] ] ; } } int v = 0 ; for ( int i = L - 1 ; 0 <= i ; i -- ) { long l = 1L << i ; if ( l <= k ) { v = to [ i ] [ v ] ; k -= l ; } } System . out . println ( v + 1 ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; try { int w = Integer . parseInt ( reader . readLine ( ) ) ; int n = Integer . parseInt ( reader . readLine ( ) ) ; int [ ] x = new int [ w ] ; for ( int i = 0 ; i < w ; i ++ ) { x [ i ] = i + 1 ; } int a ; int b ; for ( int i = 0 ; i < n ; i ++ ) { String line = reader . readLine ( ) ; String [ ] s = line . split ( " , " ) ; a = Integer . parseInt ( s [ 0 ] ) ; b = Integer . parseInt ( s [ 1 ] ) ; int temp = x [ a - 1 ] ; x [ a - 1 ] = x [ b - 1 ] ; x [ b - 1 ] = temp ; } for ( int i = 0 ; i < w ; i ++ ) { System . out . println ( x [ i ] ) ; } } catch ( IOException e ) { } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner s = new Scanner(System.in); int n = s.nextInt(); System.out.println(n*n*n); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long A = sc . nextLong ( ) ; long V = sc . nextLong ( ) ; long B = sc . nextLong ( ) ; long W = sc . nextLong ( ) ; long T = sc . nextLong ( ) ; long ab = Math . abs ( B - A ) ; long speed = V - W ; if ( ab <= speed * T ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . util . * ; import java . lang . * ; import java . io . * ; class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner scan = new Scanner ( System . in ) ; String str = scan . next ( ) ; String [ ] strArraySub = str . split ( " " ) ; int sval ; int val = strArraySub . length ; //System.out.println(val); for (int i = 1; i <= val; i++) { // "strArraySub"???1??????????????¨??? sval = val - i; System.out.print(strArraySub[sval]); }System.out.println(""); } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ) { String in = br . readLine ( ) ; String chr [ ] = in . split ( " " ) ; int s = Integer . parseInt ( chr [ 0 ] ) ; int w = Integer . parseInt ( chr [ 1 ] ) ; System . out . println ( s > w ? " safe " : " unsafe " ) ; } } }
import static java . lang . System . out ; import java . io . File ; import java . util . Scanner ; public class Main extends BaseExe { public static void main ( String [ ] args ) { new Main ( ) . exeSysIn ( ) ; } @ Override protected void execute ( ) throws Exception { String data ; for ( int count = 1 ; count <= 10000 ; count ++ ) { if ( " 0 " . equals ( data = nextLine ( ) ) ) break ; out . println ( " Case " + count + " : " + data ) ; } } } abstract class BaseExe { private Scanner scan ; private String inData ; public void exeSysIn ( ) { try ( Scanner scan = new Scanner ( System . in ) ) { exeCtrl ( scan ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } public void exeFileIn ( String inDataPath ) { try ( Scanner scan = new Scanner ( new File ( inDataPath ) ) ) { exeCtrl ( scan ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } private void exeCtrl ( Scanner scan ) throws Exception { this . scan = scan ; execute ( ) ; } protected abstract void execute ( ) throws Exception ; protected String nextLine ( ) { return scan . nextLine ( ) ; } protected boolean judgeInData ( ) { return hasNextLine ( ) && isNotEmptyInData ( ) ; } protected boolean hasNextLine ( ) { return scan . hasNextLine ( ) ; } protected boolean isNotEmptyInData ( ) { inData = nextLine ( ) ; return ! inData . isEmpty ( ) ; } protected String getInData ( ) throws Exception { if ( inData . isEmpty ( ) ) throw new Exception ( " inData is Empty. " ) ; return inData ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int A = sc . nextInt ( ) ; N = N % 500 ; if ( A < N ) System . out . println ( " No " ) ; else System . out . println ( " Yes " ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] z ) { Scanner s = new Scanner ( System . in ) ; for ( int n ; ( n = s . nextInt ( ) ) > 0 ; ) { char [ ] c = s . next ( ) . toCharArray ( ) ; int [ ] [ ] a = new int [ n ] [ ] ; for ( int i = 0 ; i < n ; ++ i ) { a [ i ] = new int [ ] { s . nextInt ( ) - 1 , s . nextInt ( ) - 1 } ; } for ( ; n -- > 0 ; ) { int u = a [ n ] [ 0 ] , v = a [ n ] [ 1 ] , x = ( v - u ) % 26 , t = c [ u ] + x , p = c [ v ] + x ; c [ u ] = ( char ) ( p - ( p > 122 ? 26 : 0 ) ) ; c [ v ] = ( char ) ( t - ( t > 122 ? 26 : 0 ) ) ; } System . out . println ( new String ( c ) ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int intA = scan . nextInt ( ) ; int intB = scan . nextInt ( ) ; int intC = scan . nextInt ( ) ; if ( intB < intA ) { int intTemp = intA ; intA = intB ; intB = intTemp ; } int intCount = 0 ; for ( int i = 0 ; i <= intB - intA ; i ++ ) { if ( intC % ( intA + i ) == 0 ) { intCount ++ ; } } System . out . println ( intCount ) ; } }
import java . io . * ; import java . util . * ; public class Main { // "Main" should be used for most online judges public static void main(String[] args) { Scanner sc = new Scanner(System.in); //String s = sc.nextLine(); //int count = sc.nextInt(); //int nums[] = new int[count]; /*int size = nums.length / 2; for(int i = 0; i < nums.length; i++) { }*/ int num1 = sc.nextInt(); int num2 = sc.nextInt(); int num3 = 0; if(num2 < 10) num3 = num1*10 + num2; else if(num2 < 100) num3 = num1*100 + num2; else num3 = num1*1000 + num2; boolean flag = false; for(int i = 0; i < 316; i++) { if(num3 == i*i) { System.out.println("Yes"); flag = true;} } if(!flag) System.out.println("No"); } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader r = new BufferedReader ( new InputStreamReader ( System . in ) , 1 ) ; int x = Integer . parseInt ( r . readLine ( ) ) ; x = x * x * x ; System . out . println ( x ) ; } }
import java . util . * ; import java . util . concurrent . ThreadLocalRandom ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws NumberFormatException , IOException , InterruptedException { // System.out.println("adfsf"); Scanner sc = new Scanner(System.in); PrintWriter pw = new PrintWriter(System.out); int n=sc.nextInt(); int s=sc.nextInt(); w=new int[n]; v=new int [n]; for (int i = 0; i < n; i++) { w[i]=sc.nextInt(); v[i]=sc.nextInt(); } memo=new long[n][s+1]; for (long[] i : memo) { Arrays.fill(i, -1); } //Arrays.fill(memo,-1); pw.print(dp(0,s)); pw.close(); } static long [][]memo; static int []w,v; public static long dp(int idx,int remw) { if(idx==memo.length) return 0; if(memo[idx][remw]!=-1) return memo[idx][remw]; if(w[idx]>remw) return memo[idx][remw]=dp(idx+1,remw); return memo[idx][remw]=Math.max(dp(idx+1,remw), dp(idx+1,remw-w[idx])+v[idx]); } // static class pair{ // int v; // StringBuilder sb; // pair(int v,StringBuilder s){ // this.v=v; // sb=s; // } // pair max(pair b) { // return (this.v>b.v)? this:b; // } // public String toString() { // return v+"\n"+sb.toString(); // } // } // public static void main(String[] args) throws NumberFormatException, IOException, InterruptedException { // // System.out.println("adfsf"); // Scanner sc = new Scanner(System.in); // PrintWriter pw = new PrintWriter(System.out); // int n=sc.nextInt(); // int s=sc.nextInt(); // w=sc.nextIntArr(n); // v=sc.nextIntArr(n); // memo=new pair[n][s+1]; // // //Arrays.fill(memo,-1); // pw.print(dp(0,s,0)); // pw.close(); // } // static pair [][]memo; // static int []w,v; // public static pair dp(int idx,int remw,int value) { // if(idx==memo.length) // return new pair(0,new StringBuilder()); // if(memo[idx][remw]!=null) // return memo[idx][remw]; // if(w[idx]>remw) // return memo[idx][remw]=dp(idx+1,remw,value); // return memo[idx][remw]=(dp(idx+1,remw,value)).max(new pair(value+v[idx],(dp(idx+1,remw-w[idx],value+v[idx])).sb.append(idx+" "))); // } static void shuffleArray(int[] ar) { // If running on Java 6 or older, use `new Random()` on RHS here Random rnd = ThreadLocalRandom.current(); for (int i = ar.length - 1; i > 0; i--) { int index = rnd.nextInt(i + 1); // Simple swap int a = ar[index]; ar[index] = ar[i]; ar[i] = a; } } static class Scanner { StringTokenizer st; BufferedReader br; public Scanner(InputStream s) { br = new BufferedReader(new InputStreamReader(s)); } public Scanner(FileReader r) { br = new BufferedReader(r); } public String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } public int nextInt() throws IOException { return Integer.parseInt(next()); } public long nextLong() throws IOException { return Long.parseLong(next()); } public String nextLine() throws IOException { return br.readLine(); } public double nextDouble() throws IOException { return Double.parseDouble(next()); } public int[] nextIntArr(int n) throws IOException { int[] arr = new int[n]; for (int i = 0; i < arr.length; i++) arr[i] = nextInt(); return arr; } public boolean ready() throws IOException { return br.ready(); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 敵の数 int n = sc.nextInt(); // 必殺技の回数 int k = sc.nextInt(); //攻撃回数 long t = 0; // 必殺技で除去できる物は除外 if(k>=n){ System.out.println(t); } else{ //敵の体力 long a[] = new long[n]; for(int i=0;i<n;i++){ a[i] = sc.nextInt(); } Arrays.sort(a); for(int i=0;i<n-k;i++){ t = t+a[i]; } System.out.println(t); } } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . Collections ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; public class Main { public static void main ( String [ ] args ) throws Exception { try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ) { PrintWriter out = new PrintWriter ( System . out ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; Map < String , Integer > map = new HashMap < > ( ) ; int max = 0 , tmp = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String s = br . readLine ( ) ; if ( map . containsKey ( s ) ) { tmp = map . get ( s ) + 1 ; map . put ( s , tmp ) ; max = Math . max ( tmp , max ) ; } else { map . put ( s , 1 ) ; max = Math . max ( max , 1 ) ; } } List < String > list = new ArrayList < > ( ) ; for ( String key : map . keySet ( ) ) { if ( map . get ( key ) == max ) { list . add ( key ) ; } } Collections . sort ( list ) ; for ( String a : list ) { out . println ( a ) ; } out . flush ( ) ; } } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; int x = Integer . parseInt ( st . nextToken ( ) ) ; int n = Integer . parseInt ( st . nextToken ( ) ) ; if ( n == 0 ) { System . out . println ( x ) ; return ; } st = new StringTokenizer ( br . readLine ( ) ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = Integer . parseInt ( st . nextToken ( ) ) ; Arrays . sort ( arr ) ; if ( Arrays . binarySearch ( arr , x ) < 0 ) { System . out . println ( x ) ; return ; } for ( int i = 1 ; i <= 100 ; i ++ ) { if ( Arrays . binarySearch ( arr , x - i ) < 0 ) { System . out . println ( x - i ) ; return ; } if ( Arrays . binarySearch ( arr , x + i ) < 0 ) { System . out . println ( x + i ) ; return ; } } } }
import java . util . Scanner ; public class Main { public static void debug ( String str ) { System . out . println ( str ) ; } public static void main ( String [ ] args ) { int N ; String S ; String T ; try ( Scanner sc = new Scanner ( System . in ) ) { N = sc . nextInt ( ) ; S = sc . next ( ) ; T = sc . next ( ) ; } char [ ] sc = S . toCharArray ( ) ; char [ ] tc = T . toCharArray ( ) ; char [ ] result = new char [ N * 2 ] ; for ( int i = 0 ; i < N ; i ++ ) { result [ 2 * i ] = sc [ i ] ; result [ 2 * i + 1 ] = tc [ i ] ; } System . out . println ( new String ( result ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String target = ( scanner . next ( ) ) . toLowerCase ( ) ; int result = 0 ; String word = " " ; while ( true ) { word = scanner . next ( ) ; if ( word . equals ( " END_OF_TEXT " ) ) { break ; } word = word . toLowerCase ( ) ; if ( word . equals ( target ) ) { result ++ ; } } System . out . println ( result ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 入力 int H = sc.nextInt(); int W = sc.nextInt(); int[][] s = new int[H][W]; for (int i = 0; i < H; i++) { String str = sc.next(); for (int j = 0; j < W; j++) { s[i][j] = str.substring(j,j+1).equals(".") ? 0 : 1; } } boolean ans = false; for (int i = 0; i < H; i++) { for (int j = 0; j < W; j++) { if (s[i][j] == 1) { if (i == 0) { if (j == 0) { if (!(s[i+1][j] == 1 || s[i][j+1] == 1)) { ans = true; } } else if (j == W-1) { if (!(s[i+1][j] == 1 || s[i][j-1] == 1)) { ans = true; } } else { if (!(s[i+1][j] == 1 || s[i][j-1] == 1 || s[i][j+1] == 1)) { ans = true; } } } else if (i == H-1) { if (j == 0) { if (!(s[i-1][j] == 1 || s[i][j+1] == 1)) { ans = true; } } else if (j == W-1) { if (!(s[i-1][j] == 1 || s[i][j-1] == 1)) { ans = true; } } else { if (!(s[i-1][j] == 1 || s[i][j-1] == 1 || s[i][j+1] == 1)) { ans = true; } } } else { if (j == 0) { if (!(s[i-1][j] == 1 || s[i][j+1] == 1 || s[i+1][j] == 1)) { ans = true; } } else if (j == W-1) { if (!(s[i-1][j] == 1 || s[i][j-1] == 1 || s[i+1][j] == 1)) { ans = true; } } else { if (!(s[i-1][j] == 1 || s[i][j-1] == 1 || s[i][j+1] == 1 || s[i+1][j] == 1)) { ans = true; } } } } } } if(ans){ System.out.println("No"); } else { System.out.println("Yes"); } } }
import java . util . * ; import java . lang . Math ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double r = sc . nextDouble ( ) ; System . out . println ( 2 * r * Math . PI ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . logging . Logger ; public class Main { public static void main ( String [ ] args ) { printAnswer ( ) ; } private static void printAnswer ( ) { Logger logger = Logger . getLogger ( Logger . GLOBAL_LOGGER_NAME ) ; try { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; double r = Double . parseDouble ( br . readLine ( ) ) ; System . out . printf ( " %.6f %.6f " , r * r * Math . PI , 2 * r * Math . PI ) ; } catch ( IOException e ) { logger . info ( " Error: Reading input data is failed. " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; double a [ ] = new double [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } double total = 0 ; for ( int i = 0 ; i < n ; i ++ ) { total += 1 / a [ i ] ; } System . out . println ( 1 / total ) ; } }
import java . util . Arrays ; import java . util . Scanner ; import java . util . stream . Collectors ; import java . util . stream . IntStream ; public class Main { static final Scanner s = new Scanner ( System . in ) ; static IntStream REPS ( int v ) { return IntStream . range ( 0 , v ) ; } static IntStream REPS ( int l , int r ) { return IntStream . rangeClosed ( l , r ) ; } static IntStream INS ( int n ) { return REPS ( n ) . map ( i -> getInt ( ) ) ; } static int getInt ( ) { return Integer . parseInt ( s . next ( ) ) ; } public static void main ( String [ ] $ ) { long k = s . nextLong ( ) ; final int n = 50 ; long [ ] r = IntStream . range ( 0 , 50 ) . mapToLong ( i -> 49 - i ) . toArray ( ) ; for ( int i = 0 ; i < n ; i ++ ) r [ i ] += k / n ; k %= n ; for ( int i = 0 ; i < n && k > 0 ; i ++ ) { ++ r [ i ] ; -- k ; } System . out . println ( n ) ; System . out . println ( Arrays . stream ( r ) . mapToObj ( String :: valueOf ) . collect ( Collectors . joining ( " " ) ) ) ; } }
import java . io . * ; import java . math . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { FastScanner I = new FastScanner ( ) ; //Input OutPut O = new OutPut(); //Output int N = I.nextInt(); int[] a = new int[N]; int maxPrime = 0; //Occurrences of most common prime number among all factorizations int[] cnts = new int[1000001]; int ONE = 0; String ans = ""; for (int i = 0; i < N; i++) { a[i] = I.nextInt(); if (a[i]==1) ONE++; for (int p = 2; p*p<=a[i]; p++) { int cnt = 0; while (a[i]%p==0) { a[i]/=p; cnt++; } cnt=min(cnt,1); cnts[p]+=cnt; maxPrime=max(maxPrime,cnts[p]); if (a[i]==1) break; } if (a[i]>1) { cnts[a[i]]++; maxPrime=max(maxPrime,cnts[a[i]]); } } if (maxPrime==1||ONE==N) ans="pairwise coprime"; else if (maxPrime==N) ans="not coprime"; else ans="setwise coprime"; O.pln(ans); } public static double max(double a, double b) {return Math.max(a, b);} public static double min(double a, double b) {return Math.min(a, b);} public static long min(long a, long b) {return Math.min(a,b);} public static long max(long a, long b) {return Math.max(a,b);} public static int min(int a, int b) {return Math.min(a,b);} public static int max(int a, int b) {return Math.max(a,b);} public static long abs(long x, long y) {return Math.abs(x-y);} public static long ceil(long num, long den) {long ans = num/den; if (num%den!=0) ans++; return ans;} public static long GCD(long a, long b) { if (a==0||b==0) return max(a,b); return GCD(min(a,b),max(a,b)%min(a,b)); } public static long FastExp(long base, long exp, long mod) { long ans=1; while (exp>0) { if (exp%2==1) ans*=base; exp/=2; base*=base; base%=mod; ans%=mod; } return ans; } public static long ModInv(long num,long mod) {return FastExp(num,mod-2,mod);} public static int pop(long x) { //Returns number of bits within a number int cnt = 0; while (x>0) { if (x%2==1) cnt++; x/=2; } return cnt; } static class FastScanner { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st=new StringTokenizer(""); String next() { while (!st.hasMoreTokens()) try { st=new StringTokenizer(br.readLine()); } catch (IOException e) { e.printStackTrace(); } return st.nextToken(); } int nextInt() {return Integer.parseInt(next());} long nextLong() {return Long.parseLong(next());}; double nextDouble() {return Double.parseDouble(next());} } static class OutPut{ PrintWriter w = new PrintWriter(System.out); void pln(double x) {w.println(x);w.flush();} void pln(boolean x) {w.println(x);w.flush();} void pln(int x) {w.println(x);w.flush();} void pln(long x) {w.println(x);w.flush();} void pln(String x) {w.println(x);w.flush();} void pln(char x) {w.println(x);w.flush();} void pln(StringBuilder x) {w.println(x);w.flush();} void pln(BigInteger x) {w.println(x);w.flush();} void p(int x) {w.print(x);w.flush();} void p(long x) {w.print(x);w.flush();} void p(String x) {w.print(x);w.flush();} void p(char x) {w.print(x);w.flush();} void p(StringBuilder x) {w.print(x);w.flush();} void p(BigInteger x) {w.print(x);w.flush();} void p(double x) {w.print(x);w.flush();} void p(boolean x) {w.print(x);w.flush();} } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String a = scan . next ( ) ; String b = scan . next ( ) ; String c = scan . next ( ) ; if ( a . charAt ( a . length ( ) - 1 ) == b . charAt ( 0 ) && b . charAt ( b . length ( ) - 1 ) == c . charAt ( 0 ) ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } }
import java . io . * ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int tri [ ] = new int [ 3 ] ; String str = br . readLine ( ) ; String [ ] str2 = str . split ( " " ) ; for ( int i = 0 ; i < str2 . length ; i ++ ) { tri [ i ] = Integer . parseInt ( str2 [ i ] ) ; } Arrays . sort ( tri ) ; int S = tri [ 0 ] * tri [ 1 ] / 2 ; System . out . println ( S ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) { InputStreamReader insISR = new InputStreamReader ( System . in ) ; BufferedReader reader = new BufferedReader ( insISR ) ; try { String strLine = reader . readLine ( ) ; int intNum = Integer . parseInt ( strLine ) ; double dbNum = ( double ) intNum ; Math . pow ( dbNum , 3 ) ; intNum = ( int ) Math . pow ( dbNum , 3 ) ; System . out . println ( intNum ) ; } catch ( IOException e ) { System . out . println ( e ) ; } catch ( NumberFormatException e ) { System . out . println ( e ) ; } } }
import java . util . * ; class Main { public static void main ( String args [ ] ) { try ( Scanner sc = new Scanner ( System . in ) ) { int n = sc . nextInt ( ) , m = sc . nextInt ( ) ; int [ ] [ ] a = new int [ n ] [ m ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { a [ i ] [ j ] = sc . nextInt ( ) ; } } int [ ] x = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { x [ i ] = sc . nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { int ans = 0 ; for ( int j = 0 ; j < m ; j ++ ) { ans += x [ j ] * a [ i ] [ j ] ; } System . out . println ( ans ) ; } } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; // 整数の入力 int N = sc.nextInt(); long[] A = new long[N]; long[] B = new long[N]; int count = 0; for(int i = 0; i < N; i++){ A[i] = sc.nextInt(); B[i] = sc.nextInt(); } long temp_dif; long temp_sum = 0; for(int i = N - 1; i >= 0; i--){ A[i] += temp_sum; if( A[i] % B[i] != 0){ temp_dif = B[i] - (A[i] % B[i]); temp_sum += temp_dif; } } System.out.println(temp_sum); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int x = stdIn . nextInt ( ) ; System . out . println ( x * x * x ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; // import java.io.PrintWriter; import java.util.Arrays; import java.util.Comparator; public class Main { public static void main(String[] args) { new Main().run(); } public void run() { try(BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); ) { String[] lns = in.readLine().split(" "); int n = Integer.parseInt(lns[0]); int m = Integer.parseInt(lns[1]); City[] city = new City[m]; City[] city2 = new City[m]; int[] p = new int[n+1]; int x,y; for(int i=0; i<m; i++) { lns = in.readLine().split(" "); x = Integer.parseInt(lns[0]); y = Integer.parseInt(lns[1]); city2[i] = city[i] = new City(i, x, y); } Arrays.parallelSort(city2, new Comparator<City>() { public int compare(City a, City b) { if(a.y == b.y) return 0; return a.y > b.y ? 1 : -1; } }); for (City c : city2) c.no = ++p[c.p]; // String no; StringBuilder buf = new StringBuilder(); String[] pre0 = {"000000","00000","0000","000","00","0",""}; for(int i=0; i<m; i++) { // no = String.format("%06d%06d", city[i].p,city[i].no); buf.append(pre0[len(city[i].p)]) .append(city[i].p); buf.append(pre0[len(city[i].no)]) .append(city[i].no) .append('\n'); // out.println(no); } // out.flush(); System.out.print(buf); } catch(IOException e) { System.err.println(e); } } int len(int n) { int i=1; for(int j=10; ; i++,j*=10) if(n<j) break; return i; } class City { int s; int p; int y; int no; public City(int s, int p, int y) { this.s = s; this.p = p; this.y = y; } } }
import java . util . * ; import java . io . * ; public class Main { static int n ; static ArrayList < Integer > [ ] adjList ; static int [ ] counter , value ; static boolean [ ] vis ; public static void dfs ( int u , int c ) { vis [ u ] = true ; c += counter [ u ] ; value [ u ] = c ; for ( int v : adjList [ u ] ) if ( ! vis [ v ] ) dfs ( v , c ) ; } public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; PrintWriter pw = new PrintWriter ( System . out ) ; StringTokenizer st ; st = new StringTokenizer ( br . readLine ( ) ) ; n = Integer . parseInt ( st . nextToken ( ) ) ; int q = Integer . parseInt ( st . nextToken ( ) ) ; adjList = new ArrayList [ n ] ; for ( int i = 0 ; i < n ; i ++ ) adjList [ i ] = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { st = new StringTokenizer ( br . readLine ( ) ) ; int u = Integer . parseInt ( st . nextToken ( ) ) - 1 , v = Integer . parseInt ( st . nextToken ( ) ) - 1 ; adjList [ u ] . add ( v ) ; adjList [ v ] . add ( u ) ; } counter = new int [ n ] ; for ( int i = 0 ; i < q ; i ++ ) { st = new StringTokenizer ( br . readLine ( ) ) ; counter [ Integer . parseInt ( st . nextToken ( ) ) - 1 ] += Integer . parseInt ( st . nextToken ( ) ) ; } value = new int [ n ] ; vis = new boolean [ n ] ; dfs ( 0 , 0 ) ; for ( int i = 0 ; i < n ; i ++ ) pw . print ( value [ i ] + ( i == n - 1 ? " \n " : " " ) ) ; pw . flush ( ) ; pw . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; System . out . println ( sc . nextInt ( ) <= 999 ? " ABC " : " ABD " ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int ans = ( ( n * ( n - 1 ) ) / 2 ) + ( ( m * ( m - 1 ) ) / 2 ) ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { double a = 0 ; double b = 0 ; Scanner in = new Scanner ( System . in ) ; a = in . nextDouble ( ) ; b = in . nextDouble ( ) ; int d = ( int ) ( a / b ) ; int r = ( int ) ( a % b ) ; double f = a / b ; System . out . println ( d + " " + r + " " + String . format ( " %f " , f ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; int max = - 1000000000 ; int min = 1000000000 ; long total = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; max = Math . max ( max , a [ i ] ) ; min = Math . min ( min , a [ i ] ) ; total += a [ i ] ; } System . out . println ( min + " " + max + " " + total ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int k ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 3 == 0 ) { System . out . print ( " " + i ) ; } else { k = i ; while ( true ) { if ( k < 3 ) break ; else if ( k % 10 == 3 ) { System . out . print ( " " + i ) ; break ; } else { k = k / 10 ; } } } } System . out . println ( ) ; } }
import java . math . BigInteger ; import java . util . ArrayList ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner stdin = new Scanner ( System . in ) ; int n = stdin . nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; for ( int i = 0 ; i <= n ; i ++ ) { a [ i ] = stdin . nextInt ( ) ; } Map < Integer , Integer > map = new HashMap < > ( ) ; int l = 0 ; int r = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { if ( map . containsKey ( a [ i ] ) ) { l = map . get ( a [ i ] ) ; r = i ; break ; } map . put ( a [ i ] , i ) ; } int m = 1000000007 ; for ( int k = 1 ; k <= n + 1 ; k ++ ) { int x = c ( n + 1 , k ) ; int y = c ( l + ( n + 1 - r - 1 ) , k - 1 ) ; System . out . println ( ( x - y + m ) % m ) ; } } private static List < BigInteger > fct = new ArrayList < > ( ) ; private static List < BigInteger > inv = new ArrayList < > ( ) ; private static BigInteger mod = BigInteger . valueOf ( 1000000007 ) ; private static int c ( int n , int r ) { if ( n < r ) { return 0 ; } if ( fct . isEmpty ( ) ) { fct . add ( BigInteger . ONE ) ; inv . add ( fct . get ( 0 ) . modInverse ( mod ) ) ; } for ( int i = fct . size ( ) ; i <= n ; i ++ ) { fct . add ( fct . get ( i - 1 ) . multiply ( BigInteger . valueOf ( i ) ) . mod ( mod ) ) ; inv . add ( fct . get ( i ) . modInverse ( mod ) ) ; } return fct . get ( n ) . multiply ( inv . get ( n - r ) . multiply ( inv . get ( r ) ) . mod ( mod ) ) . mod ( mod ) . intValue ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int tl = sc . nextInt ( ) ; int cost [ ] = new int [ n ] ; int min = 1001 ; for ( int i = 0 ; i < n ; i ++ ) { cost [ i ] = sc . nextInt ( ) ; if ( sc . nextInt ( ) <= tl && cost [ i ] < min ) { min = cost [ i ] ; } } if ( min == 1001 ) { System . out . println ( " TLE " ) ; } else { System . out . println ( min ) ; } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) , b = in . nextInt ( ) ; System . out . println ( a * b + " " + ( ( a * 2 ) + ( b * 2 ) ) ) ; } }
import java . io . * ; import java . util . * ; import java . math . * ; public class Main { public static void main ( String [ ] args ) throws java . io . IOException { BufferedReader in = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] ia ; ia = in . readLine ( ) . split ( " " ) ; int [ ] tmp = new int [ 3 ] ; for ( int i = 0 ; i < tmp . length ; ++ i ) { tmp [ i ] = Integer . parseInt ( ia [ i ] ) ; } Arrays . sort ( tmp ) ; System . out . println ( " " + tmp [ 0 ] + " " + tmp [ 1 ] + " " + tmp [ 2 ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; double r = scan . nextDouble ( ) ; System . out . printf ( " %f %f " , r * r * Math . PI , r * 2 * Math . PI ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long N = sc . nextLong ( ) ; if ( N % 2 == 0 ) { System . out . println ( N ) ; } else { System . out . println ( N * 2 ) ; } } }
import java . util . ArrayList ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; public class Main { static class Tree { List < Tree > children ; long add ; public Tree ( ) { children = new ArrayList < Tree > ( ) ; } void propagate ( ) { for ( Tree child : children ) { child . add += add ; child . propagate ( ) ; } } } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int Q = sc . nextInt ( ) ; Tree nodes [ ] = new Tree [ N ] ; for ( int i = 0 ; i < N - 1 ; ++ i ) { int a = sc . nextInt ( ) - 1 ; int b = sc . nextInt ( ) - 1 ; if ( nodes [ a ] == null ) { nodes [ a ] = new Tree ( ) ; } if ( nodes [ b ] == null ) { nodes [ b ] = new Tree ( ) ; } nodes [ a ] . children . add ( nodes [ b ] ) ; } for ( int i = 0 ; i < Q ; ++ i ) { int p = sc . nextInt ( ) - 1 ; int x = sc . nextInt ( ) ; nodes [ p ] . add += x ; } nodes [ 0 ] . propagate ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < N ; ++ i ) { if ( i > 0 ) { sb . append ( ' ' ) ; } sb . append ( nodes [ i ] . add ) ; } System . out . println ( sb ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; /** * @author radhakm * https://atcoder.jp/contests/dp/tasks/dp_a */ public class Main { static int [ ] h ; static int n ; static Integer [ ] dp ; public static void main ( String [ ] args ) { InputReader reader = new InputReader ( System . in ) ; n = reader . nextInt ( ) ; h = new int [ n ] ; dp = new Integer [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = reader . nextInt ( ) ; } System . out . println ( frogJump ( 0 ) ) ; } static int frogJump ( int idx ) { if ( idx == n - 1 ) { return 0 ; } if ( dp [ idx ] != null ) { return dp [ idx ] ; } int minCost = Math . abs ( h [ idx ] - h [ idx + 1 ] ) + frogJump ( idx + 1 ) ; if ( idx + 2 < n ) { int cost = Math . abs ( h [ idx ] - h [ idx + 2 ] ) + frogJump ( idx + 2 ) ; minCost = Math . min ( minCost , cost ) ; } dp [ idx ] = minCost ; return minCost ; } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer . hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader . readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer . nextToken ( ) ; } public int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; Node [ ] node = new Node [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { //先 new n个节点 都为根节点 node[i] = new Node(-1); } for(int i=0;i<n;i++) { String[] str = br.readLine().split(" "); int id = Integer.parseInt(str[0]); // int k = Integer.parseInt(str[1]); //k个节点 for(int j=0;j<k;j++) { int c = Integer.parseInt(str[j+2]); //添加子节点 node[id].add(c); //若是-1就是根节点，其他 node[c].parent=id; } } //输出 for(int i=0;i<n;i++) { System.out.println("node "+i+": parent = "+node[i].parent+", depth = "+node[i].getDepth(node)+", "+node[i].isType()+", "+node[i].child); } } } // 节点类 class Node{ int parent; //有字节点 ArrayList<Integer> child=new ArrayList<>(); //构造方法 有参 public Node(int parent) { this.parent=parent; } //添加子节点 public void add(int id) { child.add(id); } //判断是什么类型的节点 //1 根节点 ， parent=-1 //2 叶节点，没有子节点 //3 ohter internal 节点 public String isType() { if(parent==-1) { return "root"; } else if(child.size()==0) { return "leaf"; } else { return "internal node"; } } //获取深度，就是根节点到节点的路径长度 public int getDepth(Node node[]) { //构造的时候，输入的参数 parent int pID=parent; int count=0; while(pID!=-1) { //只要不是根节点，就递归获取父节点，计数+1 pID=node[pID].parent; count++; } //返回深度 return count; } }
import java . util . Map . Entry ; import java . util . Scanner ; import java . util . TreeMap ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; a : while ( true ) { int N = sc . nextInt ( ) ; if ( N == 0 ) break ; TreeMap < Integer , Integer > map = new TreeMap < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( map . get ( b ) != null ) { map . put ( b , a + map . get ( b ) ) ; } else { map . put ( b , a ) ; } } int c = 0 ; for ( Entry < Integer , Integer > m : map . entrySet ( ) ) { c += m . getValue ( ) ; if ( c > m . getKey ( ) ) { System . out . println ( " No " ) ; continue a ; } } System . out . println ( " Yes " ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String N = sc . nextLine ( ) ; String P = sc . nextLine ( ) ; String [ ] PA = P . split ( " " ) ; int zure = 0 ; for ( int i = 1 ; i <= Integer . parseInt ( N ) ; i ++ ) { if ( Integer . parseInt ( PA [ i - 1 ] ) != i ) { zure ++ ; } } if ( zure <= 2 ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } sc . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int a = sc . nextInt ( ) ; String op = sc . next ( ) ; int b = sc . nextInt ( ) ; if ( " ? " . equals ( op ) ) { break ; } int calcRes = 0 ; if ( " + " . equals ( op ) ) { calcRes = a + b ; } else if ( " - " . equals ( op ) ) { calcRes = a - b ; } else if ( " * " . equals ( op ) ) { calcRes = a * b ; } else if ( " / " . equals ( op ) ) { calcRes = a / b ; } System . out . println ( calcRes ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int y = x * x * x ; System . out . printf ( " %d \n " , y ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { /* A問題 Scanner sc = new Scanner(System.in); int A = sc.nextInt(); int B = sc.nextInt(); int T = sc.nextInt(); int cntBiscuit = 0; int time = A; for(int i = 2 ; time <= T ; i++) { time = A * i; cntBiscuit += B; } System.out.println(String.valueOf(cntBiscuit)); */ Sca ner sc n w Sca ner(Sys t em.in) ; i n t N = s . ex t Int(); i n t ] i n t alue = n w int N]; f o r int i = 0 ; i N ; i + { i t alue[i] = s . ex t Int(); } i t ] i n t ost = n w int N]; f o r int i = 0 ; i N ; i + { i t ost[i] = s . ex t Int(); } i t max alue = 0 o r int i = 0 ; i < N ; i + { i in V alue[i] > i t ost[i]) { m x alue += nt alue[i] - i t ost[i]; } } S s em.out . pri n tln(Str i ng.val u eOf(max V alue)); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; while ( scan . hasNext ( ) ) { int fin = scan . nextInt ( ) ; if ( fin <= 0 ) { break ; } int [ ] num = new int [ fin ] ; for ( int i = 0 ; i < fin ; i ++ ) { num [ i ] = scan . nextInt ( ) ; } int max = Integer . MIN_VALUE ; //intで入る一番小さい数字 for(int i = 0;i < fin;i++) { int[] plus = new int[fin]; for(int j = 0;j < fin - i;j++) { if(j == 0) { plus[j] = num[i]; }else{ plus[j] = plus[j - 1] + num[j + i]; } if(plus[j] > max) { max = plus[j]; } } } System.out.println(max); continue; } scan.close(); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int c = scan . nextInt ( ) ; int tmp ; if ( a > b ) { tmp = a ; a = b ; b = tmp ; } if ( a > c ) { tmp = a ; a = c ; c = tmp ; } if ( b > c ) { tmp = b ; b = c ; c = tmp ; } System . out . println ( a + " " + b + " " + c ) ; } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int x = scan . nextInt ( ) ; System . out . println ( x * x * x ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNext ( ) ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int n = a + b ; int cnt = 1 ; while ( n != 0 ) { n = n / 10 ; cnt ++ ; } System . out . println ( cnt - 1 ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int d = sc . nextInt ( ) ; if ( d == 22 ) System . out . println ( " Christmas Eve Eve Eve " ) ; if ( d == 23 ) System . out . println ( " Christmas Eve Eve " ) ; if ( d == 24 ) System . out . println ( " Christmas Eve " ) ; if ( d == 25 ) System . out . println ( " Christmas " ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner sc = new Scanner(System.in); int a = sc.nextInt(); int b = sc.nextInt(); System.out.printf("%d %d\n", a*b, (a+b)*2); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int a = stdIn . nextInt ( ) ; int b = stdIn . nextInt ( ) ; if ( a < b ) { System . out . println ( " a < b " ) ; } else if ( a > b ) { System . out . println ( " a > b " ) ; } else { System . out . println ( " a == b " ) ; } } }
import java . io . * ; import java . util . * ; public class Main { int N , K ; int [ ] nums ; int solve ( ) { int [ ] dp = new int [ N + 1 ] ; for ( int i = 2 ; i <= N ; i ++ ) { int len = K ; if ( i < K ) len = i ; int min = Integer . MAX_VALUE ; for ( int j = 1 ; j <= len ; j ++ ) { min = Math . min ( min , Math . abs ( nums [ i ] - nums [ i - j ] ) + dp [ i - j ] ) ; } dp [ i ] = min ; } return dp [ N ] ; } void main ( FastScanner in , PrintWriter out ) { N = in . nextInt ( ) ; K = in . nextInt ( ) ; nums = new int [ N + 1 ] ; nums [ 0 ] = Integer . MAX_VALUE ; for ( int i = 1 ; i <= N ; i ++ ) { nums [ i ] = in . nextInt ( ) ; } out . println ( solve ( ) ) ; } public static void main ( String [ ] args ) throws Exception { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; FastScanner in = new FastScanner ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Main m = new Main ( ) ; m . main ( in , out ) ; out . close ( ) ; in . close ( ) ; } static class FastScanner { BufferedReader br ; StringTokenizer st ; public FastScanner ( InputStream in ) { br = new BufferedReader ( new InputStreamReader ( in ) ) ; } public int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } public long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } public double nextDouble ( ) { return Double . parseDouble ( next ( ) ) ; } public String next ( ) { while ( st == null || ! st . hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } return st . nextToken ( ) ; } public String nextLine ( ) { String str = " " ; try { str = br . readLine ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return str ; } public void close ( ) throws IOException { br . close ( ) ; } } }
import java . util . Scanner ; /** * Created by paz on 17-3-18. */ public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; long sum = 0 ; for ( int i = 1 ; ; i ++ ) { sum += i ; if ( sum >= x ) { System . out . println ( i ) ; break ; } } } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int N = scan . nextInt ( ) ; int K = scan . nextInt ( ) ; List < Integer > listN = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { listN . add ( scan . nextInt ( ) ) ; } Collections . sort ( listN ) ; int sum = 0 ; for ( int i = 0 ; i < K ; i ++ ) { sum = sum + listN . get ( i ) ; } System . out . println ( sum ) ; scan . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // write your code here Scanner scanner = new Scanner(System.in); String s = scanner.next(); String t = scanner.next(); int ans = Integer.MAX_VALUE; for (int i = 0; i <= s.length() - t.length(); i++) { char[] v = s.substring(i, i + t.length()).toCharArray(); int a = 0; for (int j = 0; j < v.length; j++) { if (t.charAt(j) != v[j]) { a++; } } ans = Math.min(a, ans); } System.out.println(ans); } }
import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . Comparator ; import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { try ( PrintWriter out = new PrintWriter ( System . out ) ; Scanner sc = new Scanner ( System . in ) ; ) { Task task = new Task ( ) ; task . solve ( sc , out ) ; out . flush ( ) ; } catch ( Exception e ) { // DO NOT USE } } static class Task { public void solve(Scanner sc, PrintWriter out) { // TODO String s = nstr(sc); long k = nlong(sc); String[] a = s.split(""); int stock = 1; int count = 0; for (String string : a) { count++; if (string.equals("1")) { continue; } else { stock = Integer.parseInt(string); break; } } count--; if (s.length() == 1) { out.print(s); return; } if (a[0].equals("1") && k == 1) { out.println(1); return; } if (a[0].equals("1")) { if (count >= k) { out.println(1); return; } else { out.println(stock); return; } } out.print(a[0]); } } // method static int nint(Scanner sc) { return Integer.parseInt(sc.next()); } static long nlong(Scanner sc) { return Long.parseLong(sc.next()); } static double ndouble(Scanner sc) { return Double.parseDouble(sc.next()); } static float nfloat(Scanner sc) { return Float.parseFloat(sc.next()); } static String nstr(Scanner sc) { return sc.next(); } static long[] longLine(Scanner sc, int size) { long[] lLine = new long[size]; for (int i = 0; i < size; i++) { lLine[i] = nlong(sc); } return lLine; } static int[] intLine(Scanner sc, int size) { int[] iLine = new int[size]; for (int i = 0; i < size; i++) { iLine[i] = nint(sc); } return iLine; } static String[] strLine(Scanner sc, int size) { String[] strLine = new String[size]; for (int i = 0; i < size; i++) { strLine[i] = nstr(sc); } return strLine; } static long maxFromList(List<Long> longList) { return longList.stream().max(Comparator.naturalOrder()).get(); } static long minFromList(List<Long> longList) { return longList.stream().min(Comparator.naturalOrder()).get(); } public static int sumDigits(int n) { int sum = 0; while (n != 0) { sum += n % 10; n /= 10; } return sum; } public static long sumDigits(long n) { long sum = 0; while (n != 0) { sum += n % 10; n /= 10; } return sum; } static List<Integer> getIntegerList(Scanner sc, int size) { List<Integer> list = new ArrayList<>(); for (int i = 0; i < size; i++) { list.add(nint(sc)); } return list; } static List<Long> getLongList(Scanner sc, int size) { List<Long> list = new ArrayList<>(); for (int i = 0; i < size; i++) { list.add(nlong(sc)); } return list; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . next ( ) ) ; int k = Integer . parseInt ( sc . next ( ) ) ; k = Math . min ( n , k ) ; int x = Integer . parseInt ( sc . next ( ) ) ; int y = Integer . parseInt ( sc . next ( ) ) ; System . out . println ( k * x + ( n - k ) * y ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int num = scanner . nextInt ( ) ; if ( num >= 30 ) System . out . print ( " Yes " ) ; else System . out . print ( " No " ) ; } }
import java . util . Scanner ; public class Main { private static int merge ( int A [ ] , int left , int mid , int right ) { int cnt = 0 ; int n1 = mid - left ; int n2 = right - mid ; int L [ ] = new int [ n1 + 1 ] , R [ ] = new int [ n2 + 1 ] ; for ( int i = 0 ; i < n1 ; i ++ ) L [ i ] = A [ left + i ] ; L [ n1 ] = Integer . MAX_VALUE ; for ( int i = 0 ; i < n2 ; i ++ ) R [ i ] = A [ mid + i ] ; R [ n2 ] = Integer . MAX_VALUE ; int i = 0 ; int j = 0 ; for ( int k = left ; k < right ; k ++ ) { cnt ++ ; if ( L [ i ] <= R [ j ] ) { A [ k ] = L [ i ] ; i ++ ; } else { A [ k ] = R [ j ] ; j ++ ; } } return cnt ; } private static int mergeSort ( int A [ ] , int left , int right ) { int cnt = 0 ; if ( left + 1 < right ) { int mid = ( left + right ) / 2 ; cnt += mergeSort ( A , left , mid ) ; cnt += mergeSort ( A , mid , right ) ; cnt += merge ( A , left , mid , right ) ; } return cnt ; } public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n , A [ ] , cnt ; n = sc . nextInt ( ) ; A = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) A [ i ] = sc . nextInt ( ) ; cnt = mergeSort ( A , 0 , A . length ) ; for ( int i = 0 ; i < n ; i ++ ) { System . out . print ( A [ i ] ) ; if ( i != n - 1 ) System . out . print ( " " ) ; } System . out . println ( ) ; System . out . println ( cnt ) ; } }
import java . util . * ; import java . io . * ; /** * C */ public class Main { void run ( ) { Scanner sc = new Scanner ( System . in ) ; PriorityQueue < Integer > PQ = new PriorityQueue < > ( 1 , Collections . reverseOrder ( ) ) ; String doing ; int key ; StringBuilder sb = new StringBuilder ( ) ; while ( true ) { doing = sc . next ( ) ; if ( doing . equals ( " insert " ) ) { key = sc . nextInt ( ) ; PQ . add ( key ) ; } else if ( doing . equals ( " end " ) ) { break ; } else { sb . append ( Integer . toString ( PQ . peek ( ) ) ) . append ( " \n " ) ; PQ . remove ( ) ; } } sc . close ( ) ; System . out . print ( sb ) ; } public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) { break ; } for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { System . out . printf ( " # " ) ; } System . out . printf ( " \n " ) ; } System . out . printf ( " \n " ) ; } sc . close ( ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . regex . Pattern ; public class Main { public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } public void run ( ) { try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ) { int n = Integer . parseInt ( br . readLine ( ) ) ; final Pattern delim = Pattern . compile ( " " ) ; int [ ] seq = delim . splitAsStream ( br . readLine ( ) ) . mapToInt ( Integer :: parseInt ) . toArray ( ) ; int q = partition ( seq , 0 , n - 1 ) ; dispIntArrayPartition ( seq , q ) ; } catch ( IOException e ) { System . out . println ( " IOException! " ) ; } } public int partition ( int [ ] seq , int p , int r ) { int x = seq [ r ] ; int i = p - 1 ; int t ; for ( int j = p ; j < r ; j ++ ) { if ( seq [ j ] <= x ) { t = seq [ ++ i ] ; seq [ i ] = seq [ j ] ; seq [ j ] = t ; } } t = seq [ i + 1 ] ; seq [ i + 1 ] = seq [ r ] ; seq [ r ] = t ; return i + 1 ; } public void dispIntArrayPartition ( int [ ] target , int q ) { StringBuilder s = new StringBuilder ( ) ; int l = target . length - 1 ; for ( int i = 0 ; i < q ; i ++ ) { s . append ( target [ i ] ) . append ( " " ) ; } s . append ( " [ " ) . append ( target [ q ] ) . append ( " ] " ) ; for ( int i = q + 1 ; i < l ; i ++ ) { s . append ( target [ i ] ) . append ( " " ) ; } s . append ( target [ l ] ) ; System . out . println ( s ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner n = new Scanner ( System . in ) ; int kazu = n . nextInt ( ) ; int data [ ] = new int [ kazu ] ; for ( int i = 0 ; i < kazu ; i ++ ) { data [ i ] = n . nextInt ( ) ; } for ( int i = kazu - 1 ; i > 0 ; i -- ) { System . out . print ( data [ i ] + " " ) ; } System . out . println ( data [ 0 ] ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayDeque ; import java . util . ArrayList ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String [ ] ins = br . readLine ( ) . split ( " " ) ; int N = Integer . parseInt ( ins [ 0 ] ) , m = Integer . parseInt ( ins [ 1 ] ) ; // ノード配列作成 Node[] nodes = new Node[N]; for ( int i = 0; i < N; i++ ) { nodes[i] = new Node(); } for ( int i = 0; i < m; i++ ) { ins = br.readLine().split(" "); int x = Integer.parseInt(ins[0]) - 1, y = Integer.parseInt(ins[1]) - 1; nodes[x].chldList.add(nodes[y]); nodes[y].prntCnt++; } // 始点サーチ ArrayDeque<Node> toCheck = new ArrayDeque<>(); for ( Node node : nodes ) { if ( node.prntCnt == 0 ) toCheck.add(node); } // BFSで距離計算開始 int lenMax = 0; while ( toCheck.size() > 0 ) { Node node = toCheck.pollFirst(); for ( Node chld : node.chldList ) { chld.prntCnt--; chld.len = Math.max(node.len + 1, chld.len); // lenMax = Math.max(lenMax, chld.len); // 全辺をチェックした子はチェックリストへ if ( chld.prntCnt == 0 ) { toCheck.add(chld); } } } for(Node node : nodes) { lenMax = Math.max(lenMax, node.len); } System.out.println(lenMax); } } class Node{ int len = 0; int prntCnt = 0; ArrayList<Node> chldList = new ArrayList<>(); }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; public final class Main { public static int gcd ( int a , int b ) { return b == 0 ? a : gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { final FastScanner fs = new FastScanner ( ) ; final int n = fs . nextInt ( ) ; final int [ ] arr = fs . readArray ( n ) ; int max = ( int ) 1e6 ; final boolean [ ] seen = new boolean [ max + 1 ] ; boolean pairwiseCoprime = true ; outer : for ( int num : arr ) { final int limit = num ; for ( int p = 2 ; p * p <= limit ; p ++ ) { if ( num % p == 0 ) { if ( seen [ p ] ) { pairwiseCoprime = false ; break outer ; } seen [ p ] = true ; while ( num % p == 0 ) { num /= p ; } } } if ( num > 1 ) { if ( seen [ num ] ) { pairwiseCoprime = false ; break ; } seen [ num ] = true ; } } if ( pairwiseCoprime ) { System . out . println ( " pairwise coprime " ) ; return ; } int gcd = arr [ 0 ] ; for ( int num : arr ) { gcd = gcd ( gcd , num ) ; } System . out . println ( gcd == 1 ? " setwise coprime " : " not coprime " ) ; } static class FastScanner { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( " " ) ; String next ( ) { while ( ! st . hasMoreTokens ( ) ) { try { st = new StringTokenizer ( br . readLine ( ) ) ; } catch ( IOException e ) { //noinspection CallToPrintStackTrace e.printStackTrace(); } } return st.nextToken(); } int nextInt() { return Integer.parseInt(next()); } int[] readArray(int n) { final int[] a = new int[n]; for (int i = 0; i < n; i++) { a[i] = nextInt(); } return a; } long nextLong() { return Long.parseLong(next()); } } }
import java . util . * ; import java . io . PrintWriter ; import static java . lang . Integer . * ; import static java . lang . Long . * ; import static java . lang . Math . * ; import static java . lang . System . * ; public class Main { public static void main ( String [ ] args ) { int i , j ; Scanner sc = new Scanner ( in ) ; long n = parseLong ( sc . next ( ) ) ; long k = parseLong ( sc . next ( ) ) ; long a ; long b ; HashMap < Long , Long > ab = new HashMap < > ( ) ; for ( i = 0 ; i < n ; i ++ ) { a = parseLong ( sc . next ( ) ) ; b = parseLong ( sc . next ( ) ) ; if ( ab . get ( a ) == null ) { ab . put ( a , b ) ; } else { ab . put ( a , ab . get ( a ) + b ) ; } } sc . close ( ) ; ArrayList < Long > abl = new ArrayList < > ( ab . keySet ( ) ) ; Collections . sort ( abl ) ; long cnt = 0L ; long ans = 0L ; for ( Long ll : abl ) { if ( k <= cnt + ab . get ( ll ) ) { ans = ll ; break ; } cnt += ab . get ( ll ) ; } out . println ( ans ) ; } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; List < Integer > N = new ArrayList < > ( ) ; for ( int i = 0 ; i < 3 ; i ++ ) { N . add ( Integer . parseInt ( sc . next ( ) ) ) ; } Collections . sort ( N ) ; for ( int i = 0 ; i < 3 ; i ++ ) { if ( i == 2 ) { System . out . printf ( " %d \n " , N . get ( i ) ) ; } else { System . out . printf ( " %d " , N . get ( i ) ) ; } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } long attacks = 0 ; if ( n > k ) { Arrays . sort ( arr ) ; for ( int i = n - k - 1 ; i >= 0 ; i -- ) { attacks += arr [ i ] ; } } System . out . println ( attacks ) ; } }
import java . util . Scanner ; /* 問題文 */ publi class Main pub i stati void ain( trin g [] arg s ) Sca n n r sc = ew S ann r(Syste m .in); l on g = s . e tL o ng(); lo n g = s . e tL o ng(); lo n g = n k o n g ns = 0; f n k= = ) { a n = 0; e s e ans = Mat . in(a , k- a ) ; } S y s e .out.p r int l n(ans); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . printf ( " %d %d %.5f \n " , a / b , a % b , ( double ) a / b ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = Integer . parseInt ( sc . next ( ) ) ; String S = sc . next ( ) ; StringBuilder sb = new StringBuilder ( ) ; String a = " ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ " ; for ( int i = 0 ; i < S . length ( ) ; i ++ ) { int s = a . indexOf ( S . substring ( i , i + 1 ) ) ; sb . append ( a . substring ( s + N , s + N + 1 ) ) ; } System . out . println ( sb ) ; } }
import java . util . * ; public class Main { private static long solve ( int N , int [ ] a ) { long [ ] [ ] score = new long [ N ] [ N ] ; int parity = N % 2 ; for ( int i = N - 1 ; i >= 0 ; i -- ) score [ i ] [ i ] = parity == 1 ? a [ i ] : - a [ i ] ; for ( int e = 1 ; e < N ; e ++ ) for ( int s = e - 1 , turn = 1 - parity ; s >= 0 ; s -- , turn = 1 - turn ) score [ s ] [ e ] = turn == 1 ? Math . max ( score [ s ] [ e - 1 ] + a [ e ] , score [ s + 1 ] [ e ] + a [ s ] ) : Math . min ( score [ s ] [ e - 1 ] - a [ e ] , score [ s + 1 ] [ e ] - a [ s ] ) ; return score [ 0 ] [ N - 1 ] ; } public static long run ( Scanner scanner ) { int N = scanner . nextInt ( ) ; int [ ] a = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) a [ i ] = scanner . nextInt ( ) ; return solve ( N , a ) ; } public static void main ( String [ ] args ) { try ( Scanner scanner = new Scanner ( System . in ) ) { System . out . println ( run ( scanner ) ) ; } //Tests.run(); } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; int a [ ] = new int [ n ] ; String str [ ] = br . readLine ( ) . split ( " " ) ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = Integer . parseInt ( str [ i ] ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = n - 1 ; j > i ; j -- ) { if ( a [ j ] < a [ j - 1 ] ) { int temp = a [ j ] ; a [ j ] = a [ j - 1 ] ; a [ j - 1 ] = temp ; count ++ ; } } } System . out . print ( a [ 0 ] ) ; for ( int i = 1 ; i < n ; i ++ ) { System . out . print ( " " + a [ i ] ) ; } System . out . print ( " \n " + count + " \n " ) ; } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner sr = new Scanner ( System . in ) ; int A = sr . nextInt ( ) ; int B = sr . nextInt ( ) ; int H = sr . nextInt ( ) ; int M = sr . nextInt ( ) ; double angleA = ( H * 60 + M ) * Math . PI / 360 ; double angleB = ( M * Math . PI ) / 30 ; double C = A * A + B * B - ( 2 * A * B * Math . cos ( Math . abs ( angleA - angleB ) ) ) ; System . out . println ( Math . sqrt ( C ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int R = sc . nextInt ( ) ; double ans ; ans = ( 2 * R * 3.1415926537 ) ; System . out . println ( ans ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int [ ] Az = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Az [ i ] = sc . nextInt ( ) ; // System.out.println(Az[i]); } // System.out.println("rr"); int Q = sc.nextInt(); int[] Bz = new int[Q + 1]; int[] Cz = new int[Q + 1]; for (int i = 0; i < Q; i++){ Bz[i] = sc.nextInt(); Cz[i] = sc.nextInt(); } Arrays.sort(Az); long sumA = 0; // HashMap<Integer, Integer> map = new HashMap<Integer, Integer>(); int[] nums = new int[1000001]; // System.out.println("a"); for (int i = 0; i < N; i++){ // System.out.println(Az[i]); sumA += Az[i]; nums[Az[i]]++; } // System.out.println("b"); int changeNumCnt = 0; // int left = 0; int right = Az.length(); // int mid = 0; int diff = 0; // System.out.println("sumA "+sumA); for (int i = 0; i < Q; i++){ changeNumCnt = nums[Bz[i]]; nums[Bz[i]] = 0; nums[Cz[i]] += changeNumCnt; diff = Cz[i] - Bz[i]; sumA = sumA + (diff * changeNumCnt); System.out.println(sumA); } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // ?¨??????\??????????????????????????????????????? Scanner sc = new Scanner(System.in); while (true) { int n = sc.nextInt(); if (n == 0) { break; } int[] scores = new int[n]; for (int i = 0; i < scores.length; i++) { scores[i] = sc.nextInt(); } double average = 0, variance = 0; // ... ?????????average??¨????????£variance????¨????????????? ... int sum = 0; for (int i = 0; i < scores.length; i++) { sum = sum + scores[i]; } average = (double) sum / scores.length; double s = 0; for (int i = 0; i < scores.length; i++) { s = s + (scores[i] - average) * (scores[i] - average); } variance = (double) s / scores.length; System.out.println(Math.sqrt(variance)); } } }
import java . util . Scanner ; class A { public static void main ( String ... args ) { final Scanner sc = new Scanner ( System . in ) ; final int N = sc . nextInt ( ) ; final int K = sc . nextInt ( ) ; System . out . println ( N >= 2 * K - 1 ? " YES " : " NO " ) ; } } public class Main { public static void main ( String ... args ) { A . main ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int min = 10000 ; for ( int i = 0 ; i < n ; i ++ ) { int a = scan . nextInt ( ) ; int count = 0 ; while ( a % 2 == 0 ) { a = a / 2 ; count ++ ; } if ( count < min ) min = count ; } System . out . println ( min ) ; scan . close ( ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc = new Scanner(System.in); char c = sc.next().charAt(0); if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c =='u'){ System.out.println("vowel"); } else{ System.out.println("consonant"); } sc.close(); } }
import java . util . Scanner ; public class Main { public void solve ( ) { Scanner in = new Scanner ( System . in ) ; in . nextInt ( ) ; String s = in . next ( ) ; in . close ( ) ; int r = 0 ; int b = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == 'R' ) { r ++ ; } else { b ++ ; } } if ( r > b ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } public static void main ( String [ ] args ) { Main main = new Main ( ) ; main . solve ( ) ; } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; List < Integer > numberList = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { numberList . add ( Integer . parseInt ( sc . next ( ) ) ) ; } sc . close ( ) ; List < Integer > sortList = new ArrayList < > ( numberList ) ; Collections . sort ( sortList ) ; int onesmall = sortList . get ( n / 2 - 1 ) ; int center = sortList . get ( n / 2 ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( numberList . get ( i ) <= onesmall ) { System . out . println ( center ) ; } else { System . out . println ( onesmall ) ; } } } }
import java . util . Scanner ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String s = scan . nextLine ( ) ; String t = scan . nextLine ( ) ; int sum = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) != t . charAt ( i ) ) { sum ++ ; } } System . out . println ( sum ) ; } }
import java . util . * ; import static java . lang . Math . * ; class Main { final Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } private void run ( ) { int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int ans = 0 ; for ( int i = l ; i <= r ; i ++ ) { if ( i % d == 0 ) ans ++ ; } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int x = scan . nextInt ( ) ; int a = scan . nextInt ( ) ; if ( x < a ) System . out . println ( 0 ) ; else if ( a < x ) System . out . println ( 10 ) ; else { System . out . println ( 10 ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = Long . parseLong ( sc . next ( ) ) ; long input = n ; // nを素因数分解する。結果はmapに、素因数と指数のペアで入れていくことにする。 HashMap<Long, Long> map = new HashMap<Long, Long>(); for (long i = 2; i * i <= input; i++) { long j = 0; while (true) { if (n % i == 0) { j++; map.put(i, j); n /= i; } else { break; } } } if (n != 1) { map.put(n, 1L); // 最後に残った数も忘れずに入れる } // 素因数分解の結果 for (long key : map.keySet()) { // System.out.println(key + " " + map.get(key)); } // 結果を求めて出力 int result = 0; for (long key : map.keySet()) { long z = map.get(key); for (int j = 1; j < 10000; j++) { if (j <= z) { z -= j; result++; } else { break; } } } System.out.println(result); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; while ( scan . hasNext ( ) ) { int h = scan . nextInt ( ) ; int w = scan . nextInt ( ) ; if ( h == 0 && w == 0 ) { break ; } for ( int y = 0 ; y < h ; y ++ ) { for ( int x = 0 ; x < w ; x ++ ) { if ( ( x + y ) % 2 == 0 ) { System . out . print ( " # " ) ; } else { System . out . print ( " . " ) ; } } System . out . println ( ) ; } System . out . println ( ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int M = sc . nextInt ( ) ; String [ ] A = new String [ N ] ; String [ ] B = new String [ M ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc . next ( ) ; } for ( int i = 0 ; i < M ; i ++ ) { B [ i ] = sc . next ( ) ; } for ( int i = 0 ; i <= N - M ; i ++ ) { for ( int j = 0 ; j <= N - M ; j ++ ) { boolean flag = true ; for ( int k = 0 ; k < M ; k ++ ) { for ( int l = 0 ; l < M ; l ++ ) { if ( A [ i + k ] . charAt ( j + l ) != B [ k ] . charAt ( l ) ) { flag = false ; } } } if ( flag ) { System . out . println ( " Yes " ) ; System . exit ( 0 ) ; } } } System . out . println ( " No " ) ; } }
import java . io . * ; import java . util . * ; class Main { public static void main ( String [ ] args ) { BufferedReader sc = new BufferedReader ( new InputStreamReader ( System . in ) ) ; try { while ( true ) { String st = sc . readLine ( ) ; if ( st . equals ( " END OF INPUT " ) ) break ; String [ ] sp = st . split ( " " ) ; for ( int i = 0 ; i < sp . length ; i ++ ) System . out . print ( sp [ i ] . length ( ) ) ; System . out . println ( ) ; } } catch ( Exception e ) { System . out . println ( " Error " ) ; } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; // String a = sc.next(); String ans; if(a.equals("ARC")){ ans = "ABC"; } else { ans = "ARC"; } System.out.println(ans); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String str = null ; String [ ] item = new String [ 3 ] ; int a , b ; while ( true ) { str = scan . nextLine ( ) ; item = str . split ( " " ) ; a = Integer . parseInt ( item [ 0 ] ) ; b = Integer . parseInt ( item [ 2 ] ) ; if ( item [ 1 ] . equals ( " ? " ) ) { break ; } switch ( item [ 1 ] ) { case " + " : System . out . println ( a + b ) ; break ; case " - " : System . out . println ( a - b ) ; break ; case " * " : System . out . println ( a * b ) ; break ; case " / " : System . out . println ( a / b ) ; break ; } } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int A = scan . nextInt ( ) ; int B = scan . nextInt ( ) ; int res = A * B ; System . out . println ( res ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long a [ ] = new long [ n + 1 ] ; a [ 0 ] = 2 ; a [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { a [ i ] = a [ i - 1 ] + a [ i - 2 ] ; } System . out . println ( a [ n ] ) ; } }
import java . util . Scanner ; class Main { public void ci ( ) { Scanner sc = new Scanner ( System . in ) ; double r , S , O ; r = sc . nextDouble ( ) ; S = r * r * 3.141592653589 ; O = 2 * r * 3.141592653589 ; System . out . printf ( " %2.6f %2.6f \n " , S , O ) ; } public static void main ( String [ ] args ) { new Main ( ) . ci ( ) ; } }
import java . util . Scanner ; import java . text . DecimalFormat ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; DecimalFormat df1 = new DecimalFormat ( " 0.00000 " ) ; double r = sc . nextDouble ( ) ; double pi = Math . PI ; double area = pi * r * r ; double length = 2 * pi * r ; System . out . println ( df1 . format ( area ) + " " + df1 . format ( length ) ) ; } }
import static java . lang . System . out ; import java . util . Scanner ; class XCubic { public void run ( ) { int input = new Scanner ( System . in ) . nextInt ( ) ; out . println ( power ( input , 3 ) ) ; } private int power ( int num , int index ) { if ( index < 2 ) { return num ; } return num * power ( num , index - 1 ) ; } } public class Main { public static void main ( String ... args ) { XCubic test = new XCubic ( ) ; test . run ( ) ; } }
import java . util . * ; import java . io . * ; class Main { public static void main ( String [ ] args ) { try { BufferedReader kb = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( kb . readLine ( ) ) ; ArrayDeque < Integer > dq = new ArrayDeque < Integer > ( ) ; String [ ] str ; for ( int i = 0 ; i < n ; i ++ ) { str = kb . readLine ( ) . split ( " " ) ; if ( " insert " . equals ( str [ 0 ] ) ) { dq . addFirst ( Integer . parseInt ( str [ 1 ] ) ) ; } else if ( " deleteFirst " . equals ( str [ 0 ] ) ) { dq . removeFirst ( ) ; } else if ( " deleteLast " . equals ( str [ 0 ] ) ) { dq . removeLast ( ) ; } else { dq . removeFirstOccurrence ( Integer . parseInt ( str [ 1 ] ) ) ; } } StringBuilder output = new StringBuilder ( ) ; for ( Iterator itr = dq . iterator ( ) ; itr . hasNext ( ) ; ) { output . append ( itr . next ( ) ) . append ( " " ) ; } output . deleteCharAt ( output . lastIndexOf ( " " ) ) ; System . out . println ( output ) ; } catch ( IOException e ) { System . err . println ( e ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( true ) { int a = sc . nextInt ( ) ; String op = sc . next ( ) ; int b = sc . nextInt ( ) ; if ( op . equals ( " + " ) ) { System . out . printf ( " %d \n " , a + b ) ; } else if ( op . equals ( " - " ) ) { System . out . printf ( " %d \n " , a - b ) ; } else if ( op . equals ( " * " ) ) { System . out . printf ( " %d \n " , a * b ) ; } else if ( op . equals ( " / " ) ) { System . out . printf ( " %d \n " , ( int ) a / b ) ; } else if ( op . equals ( " ? " ) ) { break ; } } sc . close ( ) ; } }
import java . io . FileNotFoundException ; import java . io . FileReader ; import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) throws FileNotFoundException { // Scanner cin = new Scanner(new FileReader("input.txt")); Scanner cin = new Scanner(System.in); int n= cin.nextInt(); int[] price = new int[n]; for (int i=0;i<n;i++) { price[i] = cin.nextInt(); } Arrays.sort(price); price[n-1] = price[n-1]/2; int sum = 0; for (int i=0;i<n;i++) { sum += price[i]; } System.out.println(sum); } }
import java . io . PrintWriter ; import java . util . ArrayDeque ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . Scanner ; class Main implements Runnable { public static void main ( String [ ] args ) { new Main ( ) . run ( ) ; } class State { int i ; int parent ; int j ; // in the next step,go into g[i][j] public State(int i_, int parent_, int j_) { i = i_; parent = parent_; j = j_; } } int strongly_connected_componets(ArrayList<Integer>[] g, int[] col) { int n = g.length; Arrays.fill(col, -1); int cols = 0; int[] low = new int[n]; int[] ord = new int[n]; boolean[] marked = new boolean[n]; Arrays.fill(low, -1); Arrays.fill(ord, -1); int order = 0; ArrayDeque<State> stk = new ArrayDeque<>(); ArrayDeque<Integer> pnd = new ArrayDeque<>(); for (int ii = 0; ii < n; ++ii) { if (ord[ii] == -1) { stk.add(new State(ii, -1, 0)); } while (!stk.isEmpty()) { State s = stk.pollFirst(); if (ord[s.i] == -1) { low[s.i] = (ord[s.i] = order++); pnd.addFirst(s.i); } if (s.j > 0 && s.parent != g[s.i].get(s.j - 1) && !marked[g[s.i].get(s.j - 1)]) { if (low[g[s.i].get(s.j - 1)] == -1) { throw new AssertionError(); } low[s.i] = Math.min(low[s.i], low[g[s.i].get(s.j - 1)]); } if (s.j == g[s.i].size() && low[s.i] == ord[s.i]) { while (true) { int v = pnd.pollFirst(); col[v] = cols; marked[v] = true; if (v == s.i) break; } ++cols; continue; } if (s.j == g[s.i].size()) continue; int v = g[s.i].get(s.j); stk.addFirst(new State(s.i, s.parent, s.j + 1)); if (ord[v] == -1) { stk.addFirst(new State(v, s.i, 0)); } else if (!marked[v]) { low[s.i] = Math.min(low[s.i], low[v]); } } } return cols; } @SuppressWarnings("unchecked") public void run() { Scanner sc = new Scanner(System.in); PrintWriter pw = new PrintWriter(System.out); int V = sc.nextInt(); int E = sc.nextInt(); ArrayList<Integer>[] g = new ArrayList[V]; for (int i = 0; i < V; ++i) { g[i] = new ArrayList<>(); } for (int i = 0; i < E; ++i) { int s = sc.nextInt(); int t = sc.nextInt(); g[s].add(t); } int[] col = new int[V]; strongly_connected_componets(g, col); int q = sc.nextInt(); while (q-- > 0) { int u = sc.nextInt(); int v = sc.nextInt(); System.out.println(col[u] == col[v] ? "1" : "0"); } } static void tr(Object... objects) { System.out.println(Arrays.deepToString(objects)); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( a == 1 ) a = 14 ; if ( b == 1 ) b = 14 ; if ( a < b ) { System . out . println ( " Bob " ) ; } else if ( a == b ) { System . out . println ( " Draw " ) ; } else { System . out . println ( " Alice " ) ; } } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { static long [ ] dp = new long [ 100010 ] ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; Arrays . fill ( dp , Long . MAX_VALUE ) ; dp [ 0 ] = 0 ; int n = sc . nextInt ( ) ; int [ ] h = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) h [ i ] = sc . nextInt ( ) ; dp [ 1 ] = Math . abs ( h [ 0 ] - h [ 1 ] ) ; for ( int i = 2 ; i < n ; i ++ ) { dp [ i ] = Math . min ( dp [ i - 2 ] + Math . abs ( h [ i ] - h [ i - 2 ] ) , dp [ i - 1 ] + Math . abs ( h [ i ] - h [ i - 1 ] ) ) ; } System . out . println ( dp [ n - 1 ] ) ; } }
import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . NoSuchElementException ; public class Main { static FastScanner sc = new FastScanner ( ) ; static PrintWriter out = new PrintWriter ( System . out ) ; //static PriorityQueue <Integer> q ; //static Deque <Integer> q; //Deque deque = new LinkedList(); //static HashMap <Integer, Integer> map; static int n; static String S; //static final int mod = 1_000_000_007; //static int ROW; //static int COL; //static final int[] dx = {0,1,0,-1}; //static final int[] dy = {-1,0,1,0}; //static int max_d; //static int [] dp; public static void main(String[] args) { S = sc.next(); if (S.equals("ABC")) out.println("ARC"); else out.println("ABC"); out.flush(); } static class FastScanner { private final InputStream in = System.in; private final byte[] buffer = new byte[1024]; private int ptr = 0; private int buflen = 0; private boolean hasNextByte() { if (ptr < buflen) { return true; } else { ptr = 0; try { buflen = in.read(buffer); } catch (IOException e) { e.printStackTrace(); } if (buflen <= 0) { return false; } } return true; } private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1; } private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126; } private void skipUnprintable() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; } public boolean hasNext() { skipUnprintable(); return hasNextByte(); } public String next() { if (!hasNext()) throw new NoSuchElementException(); StringBuilder sb = new StringBuilder(); int b = readByte(); while (isPrintableChar(b)) { sb.appendCodePoint(b); b = readByte(); } return sb.toString(); } public double nextDouble () { return Double.parseDouble(next()); } public long nextLong() { if (!hasNext()) throw new NoSuchElementException(); long n = 0; boolean minus = false; int b = readByte(); if (b == '-') { minus = true; b = readByte(); } if (b < '0' || '9' < b) { throw new NumberFormatException(); } while (true) { if ('0' <= b && b <= '9') { n *= 10; n += b - '0'; } else if (b == -1 || !isPrintableChar(b)) { return minus ? -n : n; } else { throw new NumberFormatException(); } b = readByte(); } } public int nextInt() { return (int) nextLong(); } public int[] nextIntArray(int N, boolean oneBased) { if (oneBased) { int[] array = new int[N + 1]; for (int i = 1; i <= N; i++) { array[i] = sc.nextInt(); } return array; } else { int[] array = new int[N]; for (int i = 0; i < N; i++) { array[i] = sc.nextInt(); } return array; } } public long[] nextLongArray(int N, boolean oneBased) { if (oneBased) { long[] array = new long[N + 1]; for (int i = 1; i <= N; i++) { array[i] = sc.nextLong(); } return array; } else { long[] array = new long[N]; for (int i = 0; i < N; i++) { array[i] = sc.nextLong(); } return array; } } } }
import java . io . * ; import java . math . BigInteger ; import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { FastScanner sc = new FastScanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int n = sc . nextInt ( ) ; ArrayList < BigInteger > array = new ArrayList < BigInteger > ( ) ; BigInteger result = BigInteger . valueOf ( 1 ) ; BigInteger x = BigInteger . valueOf ( 1 ) ; for ( int i = 0 ; i < 18 ; i ++ ) x = x . multiply ( BigInteger . valueOf ( 10 ) ) ; for ( int i = 0 ; i < n ; i ++ ) { BigInteger input = BigInteger . valueOf ( sc . nextLong ( ) ) ; if ( input == BigInteger . ZERO ) { out . println ( 0 ) ; out . flush ( ) ; return ; } else { array . add ( input ) ; } } for ( BigInteger num : array ) { result = result . multiply ( num ) ; if ( result . compareTo ( x ) == 1 ) { out . println ( " -1 " ) ; out . flush ( ) ; return ; } } out . println ( result ) ; out . flush ( ) ; } static class FastScanner { private BufferedReader reader = null ; private StringTokenizer tokenizer = null ; public FastScanner ( InputStream in ) { reader = new BufferedReader ( new InputStreamReader ( in ) ) ; tokenizer = null ; } public String next ( ) { if ( tokenizer == null || ! tokenizer . hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader . readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer . nextToken ( ) ; } public String nextLine ( ) { if ( tokenizer == null || ! tokenizer . hasMoreTokens ( ) ) { try { return reader . readLine ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer . nextToken ( " \n " ) ; } public long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } public int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner stdin = new Scanner ( System . in ) ; int r = stdin . nextInt ( ) ; int c = stdin . nextInt ( ) ; int [ ] [ ] sheet = new int [ r + 1 ] [ c + 1 ] ; int sum = 0 ; for ( int i = 0 ; i < r ; i ++ ) { for ( int j = 0 ; j < c ; j ++ ) { int n = stdin . nextInt ( ) ; sheet [ i ] [ j ] = n ; sheet [ r ] [ j ] += n ; sheet [ i ] [ c ] += n ; sum += n ; } } sheet [ r ] [ c ] = sum ; for ( int i = 0 ; i <= r ; i ++ ) { for ( int j = 0 ; j <= c ; j ++ ) { System . out . printf ( j < c ? " %d " : " %d%n " , sheet [ i ] [ j ] ) ; } } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x , y ; while ( true ) { x = sc . nextInt ( ) ; y = sc . nextInt ( ) ; if ( x == 0 && y == 0 ) break ; if ( x < y ) System . out . println ( x + " " + y ) ; else System . out . println ( y + " " + x ) ; } } }
import java . util . Scanner ; public class Main { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { long a = sc . nextLong ( ) ; long v = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long w = sc . nextLong ( ) ; long t = sc . nextLong ( ) ; if ( a <= b ) { if ( a + v * t >= b + w * t ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } else { if ( a - v * t <= b - w * t ) { System . out . println ( " YES " ) ; } else { System . out . println ( " NO " ) ; } } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { int m , f , r , sum ; BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; for ( int i = 0 ; i < 255 ; i ++ ) { String [ ] mfr = br . readLine ( ) . split ( " " ) ; m = Integer . parseInt ( mfr [ 0 ] ) ; f = Integer . parseInt ( mfr [ 1 ] ) ; r = Integer . parseInt ( mfr [ 2 ] ) ; sum = m + f ; if ( sum + r == - 3 ) i = 255 ; else if ( m * f < 0 || sum < 30 ) System . out . println ( " F " ) ; else if ( 30 <= sum && sum < 50 ) System . out . println ( ( 50 <= r ) ? 'C' : 'D' ) ; else if ( 50 <= sum && sum < 65 ) System . out . println ( " C " ) ; else if ( 65 <= sum && sum < 80 ) System . out . println ( " B " ) ; else if ( 80 <= sum ) System . out . println ( " A " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { char [ ] ch = { '#' , '.' } ; Scanner sc = new Scanner ( System . in ) ; while ( true ) { int H = sc . nextInt ( ) ; int W = sc . nextInt ( ) ; if ( H == 0 && W == 0 ) { break ; } int pos = 0 ; for ( int i = 0 ; i < H ; ++ i ) { if ( i % 2 == 1 ) { pos = 1 ; } else { pos = 0 ; } for ( int j = 0 ; j < W ; ++ j ) { System . out . print ( ch [ pos ] ) ; pos = ( pos + 1 ) % 2 ; } System . out . println ( ) ; } System . out . println ( ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; StringBuilder sb = new StringBuilder ( ) ; int max = sc . nextInt ( ) ; main : for ( int i = 1 ; i <= max ; i ++ ) { //multiples of 3 if(i % 3 == 0){ sb.append(" " + i); continue main; } int keta = (int)Math.log10(i); int tmp = i; for(int j = keta; j >= 0; j--){ int zeros = (int)Math.pow(10 , j); int kurai = tmp/zeros; if(kurai == 3){ sb.append(" " + i); continue main; } tmp -= zeros*kurai; } } System.out.println(sb); } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Arrays ; import java . util . StringTokenizer ; public class Main { // AtCoder Beginner Contest 079 // https://atcoder.jp/contests/abc079/tasks public static void main(String[] args) { FastReader sc = new FastReader(); int n = sc.nextInt(); int[] mochis = new int[n]; for (int i = 0; i < n; i++) { mochis[i] = sc.nextInt(); } Arrays.sort(mochis); int res = 1; for (int i = n - 2; i >= 0; i--) { if (mochis[i] < mochis[i+1]) { res++; } } System.out.println(res); } static class FastReader { BufferedReader br; StringTokenizer st; public FastReader() { br = new BufferedReader(new InputStreamReader(System.in)); } String next() { while (st == null || !st.hasMoreElements()) { try { st = new StringTokenizer(br.readLine()); } catch (IOException e) { e.printStackTrace(); } } return st.nextToken(); } int nextInt() { return Integer.parseInt(next()); } long nextLong() { return Long.parseLong(next()); } double nextDouble() { return Double.parseDouble(next()); } String nextLine() { String str = ""; try{ str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } return str; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { // Your code here! Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int[] a = new int[n]; for(int i = 0; i < n; i++){ a[i] = sc.nextInt(); } Arrays.sort(a); System.out.println(a[n - 1] - a[0]); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int r , c ; // row, col while((r = sc.nextInt()) != 0 | (c = sc.nextInt()) != 0){ for(int i = 0; i < r; i++){ for(int j = 0; j < c; j++){ System.out.printf("#"); } System.out.println(); } System.out.println(); } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = in . nextInt ( ) ; int dp [ ] = new int [ n ] ; dp [ 0 ] = 0 ; for ( int i = 1 ; i < n ; i ++ ) { dp [ i ] = dp [ i - 1 ] + Math . abs ( a [ i ] - a [ i - 1 ] ) ; if ( i > 1 ) dp [ i ] = Math . min ( dp [ i ] , dp [ i - 2 ] + Math . abs ( a [ i - 2 ] - a [ i ] ) ) ; } System . out . println ( dp [ n - 1 ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; if ( k <= ( a + b ) ) { if ( a < k ) { k = k - a ; a = 0 ; } else { a = a - k ; k = 0 ; } b = b - k ; System . out . print ( a + " " + b ) ; } else { System . out . print ( 0 + " " + 0 ) ; } } }
import java . util . * ; import java . io . * ; import java . math . * ; public class Main { public static void process ( ) throws IOException { int n = ni ( ) , r = ni ( ) ; if ( n >= 10 ) { pn ( r ) ; return ; } pn ( r + 100l * ( 10l - n ) ) ; } static AnotherReader sc ; static PrintWriter out ; public static void main ( String [ ] args ) throws IOException { out = new PrintWriter ( System . out ) ; sc = new AnotherReader ( ) ; boolean oj = true ; //oj = System.getProperty("ONLINE_JUDGE") != null; if(!oj) sc=new AnotherReader(100); long s = System.currentTimeMillis(); int t=1; while(t-->0) process(); out.flush(); if(!oj) System.out.println(System.currentTimeMillis()-s+"ms"); System.out.close(); } static void pn(Object o){out.println(o);} static void p(Object o){out.print(o);} static void pni(Object o){out.println(o);System.out.flush();} static int ni()throws IOException{return sc.nextInt();} static long nl()throws IOException{return sc.nextLong();} static double nd()throws IOException{return sc.nextDouble();} static String nln()throws IOException{return sc.nextLine();} static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);} static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);} static int bit(long n)throws IOException{return (n==0)?0:(1+bit(n&(n-1)));} static boolean multipleTC=false; ///////////////////////////////////////////////////////////////////////////////////////////////////////// static class AnotherReader{BufferedReader br; StringTokenizer st; AnotherReader()throws FileNotFoundException{ br=new BufferedReader(new InputStreamReader(System.in));} AnotherReader(int a)throws FileNotFoundException{ br = new BufferedReader(new FileReader("input.txt"));} String next()throws IOException{ while (st == null || !st.hasMoreElements()) {try{ st = new StringTokenizer(br.readLine());} catch (IOException e){ e.printStackTrace(); }} return st.nextToken(); } int nextInt() throws IOException{ return Integer.parseInt(next());} long nextLong() throws IOException {return Long.parseLong(next());} double nextDouble()throws IOException { return Double.parseDouble(next()); } String nextLine() throws IOException{ String str = ""; try{ str = br.readLine();} catch (IOException e){ e.printStackTrace();} return str;}} ///////////////////////////////////////////////////////////////////////////////////////////////////////////// }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int [ ] t = new int [ n + 1 ] ; int [ ] x = new int [ n + 1 ] ; int [ ] y = new int [ n + 1 ] ; x [ 0 ] = y [ 0 ] = t [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { t [ i ] = scan . nextInt ( ) ; x [ i ] = scan . nextInt ( ) ; y [ i ] = scan . nextInt ( ) ; } boolean f = true ; for ( int i = 1 ; i <= n ; i ++ ) { int dist = 0 ; dist = Math . abs ( x [ i ] - x [ i - 1 ] ) + Math . abs ( y [ i ] - y [ i - 1 ] ) ; //System.out.println("dist : "+dist); //System.out.println("t : "+ (t[i]-t[i-1])); if (dist > t[i]-t[i-1]) { f = false; break; } else { if ((t[i]-t[i-1]-dist) % 2 == 1) { f = false; break; } } } if (f) { System.out.println("Yes"); } else { System.out.println("No"); } System.out.println(""); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int K = sc . nextInt ( ) ; int S = sc . nextInt ( ) ; int cnt = 0 ; for ( int i = 0 ; i <= K ; i ++ ) { for ( int j = 0 ; j <= K ; j ++ ) { if ( S - i - j >= 0 && S - i - j <= K ) { cnt ++ ; } } } System . out . println ( cnt ) ; } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { static Scanner sc = new Scanner ( System . in ) ; static int n , sum ; static boolean prime [ ] ; public static void main ( String [ ] args ) { while ( read ( ) ) { solve ( ) ; } } public static boolean read ( ) { if ( ! sc . hasNext ( ) ) return false ; n = sc . nextInt ( ) ; return true ; } public static void solve ( ) { prime = new boolean [ n + 1 ] ; Arrays . fill ( prime , true ) ; prime [ 0 ] = false ; prime [ 1 ] = false ; for ( int i = 2 ; i < prime . length ; i ++ ) { if ( prime [ i ] ) { for ( int j = 2 * i ; j < prime . length ; j += i ) { prime [ j ] = false ; } } } sum = 0 ; for ( int i = 0 ; i < prime . length ; i ++ ) { if ( prime [ i ] ) sum ++ ; } System . out . println ( sum ) ; } }
import java . util . Scanner ; import java . text . * ; public class Main { public static void main ( String [ ] args ) { NumberFormat format = NumberFormat . getInstance ( ) ; format . setMaximumFractionDigits ( 8 ) ; Scanner scan = new Scanner ( System . in ) ; long a = Integer . parseInt ( scan . next ( ) ) ; long b = Integer . parseInt ( scan . next ( ) ) ; System . out . print ( a / b + " " + a % b ) ; double f = ( double ) a / b ; System . out . println ( " " + String . format ( " %8f " , f ) ) ; scan . close ( ) ; } }
import java . util . * ; public class Main { private static Scanner sc = new Scanner ( System . in ) ; public static void main ( String ... args ) { while ( sc . hasNext ( ) ) { final int n = sc . nextInt ( ) ; if ( n == 0 ) break ; solve ( n ) ; } } private static int case_num = 1 ; private static void solve ( final int n ) { final int [ ] x = new int [ n ] ; final int [ ] y = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc . nextInt ( ) - x [ 0 ] ; y [ i ] = sc . nextInt ( ) - y [ 0 ] ; } int ans = 0 ; for ( int i = 2 ; i < n ; i ++ ) ans += x [ i - 1 ] * y [ i ] - x [ i ] * y [ i - 1 ] ; System . out . println ( case_num ++ + " " + ( .5 * Math . abs ( ans ) ) ) ; } }
import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc . nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; Arrays . sort ( b ) ; Arrays . sort ( c ) ; long [ ] bc = new long [ n ] ; { int j = 0 ; for ( int i = 0 ; i < n ; i ++ ) { while ( j < n && b [ i ] >= c [ j ] ) { j ++ ; } bc [ i ] = n - j ; } } long ret = 0 ; for ( int i = n - 1 ; i > 0 ; i -- ) { bc [ i - 1 ] += bc [ i ] ; } { int j = 0 ; for ( int i = 0 ; i < n ; i ++ ) { while ( j < n && a [ i ] >= b [ j ] ) { j ++ ; } ret += j < n ? bc [ j ] : 0 ; } } System . out . println ( ret ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int H , W ; do { H = stdIn . nextInt ( ) ; W = stdIn . nextInt ( ) ; if ( W == 0 && H == 0 ) break ; for ( int i = 1 ; i <= H ; i ++ ) { for ( int j = 1 ; j <= W ; j ++ ) { if ( i % 2 == 0 ) { if ( j % 2 == 0 ) { if ( j == W ) { System . out . println ( " # " ) ; } else { System . out . print ( " # " ) ; } } else { if ( j == W ) { System . out . println ( " . " ) ; } else { System . out . print ( " . " ) ; } } } else { if ( j % 2 == 0 ) { if ( j == W ) { System . out . println ( " . " ) ; } else { System . out . print ( " . " ) ; } } else { if ( j == W ) { System . out . println ( " # " ) ; } else { System . out . print ( " # " ) ; } } } } } System . out . print ( " \n " ) ; } while ( true ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . Reader ; import java . util . Arrays ; import java . util . Scanner ; import java . util . StringTokenizer ; public class Main { public static class WeightedUnionFind { int [ ] par ; // 親の番号 int[] ws; // 親との重みの差 public WeightedUnionFind(int n){ par = new int[n]; ws = new int[n]; for(int i = 0; i < n; i++){ par[i] = -1; } } public int find(int x){ if(par[x] < 0){ return x; }else{ final int parent = find(par[x]); ws[x] += ws[par[x]]; par[x] = parent; return parent; } } public int weight(int x){ find(x); return ws[x]; } public boolean union(int x, int y, int w){ // x <-(w)- y (x + w = y) w += weight(x); w -= weight(y); x = find(x); y = find(y); if(x != y){ if(par[y] < par[x]) { // 多い方が根になるようにスワップする. int tmp = x; x = y; y = tmp; w = -w; } par[x] += par[y]; par[y] = x; ws[y] = w; return true; }else{ return false; } } public boolean same(int x, int y){ return find(x) == find(y); } public Integer diff(int x, int y){ // x - y を求める. 比較不能ならnull. if(!same(x, y)){ return null; }else{ return this.weight(x) - this.weight(y); } } public int size(int x){ return -par[find(x)]; } } public static void main(String[] args) throws IOException { Scanner sc = new Scanner(System.in); while(true){ final int n = sc.nextInt(); final int m = sc.nextInt(); if(n == 0 && m == 0){ break; } WeightedUnionFind uf = new WeightedUnionFind(n); for(int i = 0; i < m; i++){ final char ops = sc.nextChar(); if('?' == ops){ final int r = sc.nextInt() - 1; final int l = sc.nextInt() - 1; final Integer ret = uf.diff(r, l); System.out.println(ret == null ? "UNKNOWN" : -ret); }else{ final int r = sc.nextInt() - 1; final int l = sc.nextInt() - 1; final int w = sc.nextInt(); uf.union(r, l, w); } } } sc.close(); } public static class Scanner { private Reader br; public Scanner(InputStream is) throws IOException { br = new BufferedReader(new InputStreamReader(is)); } public int nextInt() throws IOException { int sign = 1; int b = br.read(); while(((b < '0') || ('9' < b)) && b != '-' && b != '+'){ if(b == -1){ return 0; } b = br.read(); } if(b == '-'){ sign = -1; b = br.read(); }else if(b == '+'){ b = br.read(); } int ret = b - '0'; while(true){ b = br.read(); if(b < '0' || b > '9'){ return sign * ret; } ret *= 10; ret += b - '0'; } } public char nextChar() throws IOException{ int b = br.read(); while(Character.isWhitespace(b)){ b = br.read(); } return (char)(b); } public void close() throws IOException { br.close(); } } }
import java . math . BigInteger ; import java . util . * ; import java . util . stream . Collectors ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; System . out . println ( S . equals ( " Sunny " ) ? " Cloudy " : S . equals ( " Cloudy " ) ? " Rainy " : " Sunny " ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long A = sc . nextInt ( ) ; long B = sc . nextLong ( ) ; long C = 6 ; long ans = 6 - A - B ; System . out . println ( ans ) ; } }
import java . util . List ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Main main = new Main ( ) ; main . run ( ) ; } void run ( ) { Scanner sc = new Scanner ( System . in ) ; String [ ] s = sc . next ( ) . split ( " " ) ; String prev = s [ 0 ] ; int cnt = 0 ; for ( int i = 1 ; i < s . length ; i ++ ) { if ( ! prev . equals ( s [ i ] ) ) { cnt ++ ; } prev = s [ i ] ; } System . out . println ( cnt ) ; } //以下テンプレート public static int[] extgcd(int a, int b) { int x0 = 1; int x1 = 0; int y0 = 0; int y1 = 1; while (b != 0) { int q = a / b; int r = a % b; int x2 = x0 - q * x1; int y2 = y0 - q * y1; a = b; b = r; x0 = x1; x1 = x2; y0 = y1; y1 = y2; } return new int[] { a, x0, y0 }; } static int gcd(int a, int b) { if (b == 0) return a; if (a < b) { int t = a; a = b; b = t; } return gcd(b, a % b); } static int lcm(int a, int b) { return a * b / gcd(a, b); } static void swap(int[] a) { int t; t = a[0]; a[0] = a[1]; a[1] = t; return; } static <T> void output(List<T> list) { for (int i = 0; i < list.size(); i++) { System.out.print(list.get(i)); if (i != list.size() - 1) { System.out.print(" "); } else { nl(); } } } static void output(String[][] str) { for (int i = 0; i < str.length; i++) { for (int j = 0; j < str[i].length; j++) { print(str[i][j]); } nl(); } } static void output(boolean flg, String Yes, String No) { if (flg) { pln(Yes); } else { pln(No); } } static void output(String[][] str, int digit) { String dig = "%" + String.valueOf(digit) + "s"; for (int i = 0; i < str.length; i++) { for (int j = 0; j < str[i].length; j++) { System.out.printf(dig, str[i][j]); } nl(); } } static void pln(String str) { System.out.println(str); } static void pln(int x) { System.out.println(x); } static void print(String str) { System.out.print(str); } static void print(int x) { System.out.print(x); } static void print(String str, int times) { for (int i = 0; i < times; i++) { print(str); } } static void print(int x, int times) { for (int i = 0; i < times; i++) { print(x); } } static void nl() { System.out.println(); } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; double t = sc . nextDouble ( ) , a = sc . nextDouble ( ) ; double [ ] h = new double [ n ] ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = sc . nextDouble ( ) ; if ( Math . abs ( a - ( t - h [ i ] * 6 / 1000 ) ) < Math . abs ( a - ( t - h [ ans ] * 6 / 1000 ) ) ) { ans = i ; } } System . out . println ( ans + 1 ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int K = sc . nextInt ( ) ; int p [ ] = new int [ N ] ; int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { p [ i ] = sc . nextInt ( ) ; } Arrays . sort ( p ) ; for ( int i = 0 ; i < K ; i ++ ) { ans += p [ i ] ; } System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int W = scanner . nextInt ( ) ; int H = scanner . nextInt ( ) ; String c = scanner . next ( ) ; int x = ( W - 1 ) / 2 ; int y = ( H - 1 ) / 2 ; for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( j == 0 && i == 0 || j == 0 && i == H - 1 || j == W - 1 && i == 0 || j == W - 1 && i == H - 1 ) { System . out . print ( " + " ) ; } else if ( j != 0 && j != W - 1 && i == 0 || j != 0 && j != W - 1 && i == H - 1 ) { System . out . print ( " - " ) ; } else if ( i != 0 && i != H - 1 && j == 0 || i != 0 && i != H - 1 && j == W - 1 ) { System . out . print ( " | " ) ; } else if ( j == x && i == y ) { System . out . print ( c ) ; } else { System . out . print ( " . " ) ; } } System . out . println ( ) ; } } }
import java . util . Scanner ; public class Main { static Scanner sc = new Scanner ( System . in ) ; /** * @param args */ public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ int a = sc.nextInt(); int b = sc.nextInt(); int d = a / b; int r = a % b; double f = (double)a / (double)b; System.out.printf("%d %d %.5f\n", d, r, f); } }
import java . util . Scanner ; public class Main { static Scanner scanner ; public static void main ( String [ ] args ) { scanner = new Scanner ( System . in ) ; int a = gi ( ) ; int b = gi ( ) ; //System.out.print(Math.max(a*b, c*d)); if (a==b) { System.out.print("Draw"); }else if(a==1){ System.out.print("Alice"); }else if(b==1){ System.out.print("Bob"); }else if(a>b){ System.out.print("Alice"); }else{ System.out.print("Bob"); } } // 文字列として入力を取得 public static String gs() { return scanner.next(); } // intとして入力を取得 public static int gi() { return Integer.parseInt(scanner.next()); } // longとして入力を取得 public static long gl() { return Long.parseLong(scanner.next()); } }
import java . util . Arrays ; import java . util . LinkedList ; import java . util . Scanner ; public class Main { long get ( int [ ] Wi , int T ) { long s1 = 0 ; long s2 = 0 ; for ( int i = 0 ; i < Wi . length ; i ++ ) { if ( i <= T ) { s1 += Wi [ i ] ; } else { s2 += Wi [ i ] ; } } return Math . abs ( s1 - s2 ) ; } public void solve ( ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; int [ ] Wi = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Wi [ i ] = in . nextInt ( ) ; } in . close ( ) ; long min = Integer . MAX_VALUE ; for ( int i = 0 ; i < N ; i ++ ) { long x = get ( Wi , i ) ; min = Math . min ( min , x ) ; } System . out . println ( min ) ; } public static void main ( String [ ] args ) { Main main = new Main ( ) ; main . solve ( ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; System . out . println ( problem102a ( n ) ) ; } private static int problem102a ( int n ) { return ( n % 2 == 0 ) ? n : ( n * 2 ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int C = sc . nextInt ( ) ; int D = sc . nextInt ( ) ; String S = sc . next ( ) ; boolean move = true ; boolean oikoshi = true ; for ( int i = A - 1 ; i < Math . max ( C , D ) - 1 ; i ++ ) { String judge = S . substring ( i , i + 2 ) ; if ( judge . equals ( " ## " ) ) { move = false ; } } if ( C > D ) { oikoshi = false ; for ( int i = B - 2 ; i < D - 1 ; i ++ ) { String judge = S . substring ( i , i + 3 ) ; //System.out.println(judge); if (judge.equals("...")){ oikoshi = true; } } } if (move&&oikoshi){ System.out.println("Yes"); }else{ System.out.println("No"); } } }
import java . util . Scanner ; public class Main { static int mod = 1000000007 ; public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int ans = Math . min ( n * a , b ) ; System . out . println ( ans ) ; sc . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n , x ; while ( true ) { n = sc . nextInt ( ) ; x = sc . nextInt ( ) ; if ( n == 0 && x == 0 ) { break ; } int count = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { for ( int k = 1 ; k <= n ; k ++ ) { if ( i < j && j < k ) { if ( ( i + j + k ) == x ) { count ++ ; } } } } } System . out . println ( count ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int count = sc . nextInt ( ) ; int sogaku = sc . nextInt ( ) ; if ( ( 500 * count ) >= sogaku ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; public class Main { public static void main ( String arg [ ] ) { try { Scanner scan = new Scanner ( System . in ) ; int x = scan . nextInt ( ) ; if ( 0 < x && x < 101 ) { int y = ( int ) Math . pow ( x , 3 ) ; System . out . println ( y ) ; } else { System . out . println ( " 1??????100?????§???????????§???") ; } } a tch(I n putMismatchException e ){ S stem.o u t.p r intln(" 1 ? ?????100?????§????????¶??°?????\???? ?? ???????????????"); } }
import java . math . BigDecimal ; import java . math . MathContext ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double a = sc . nextDouble ( ) ; double b = sc . nextDouble ( ) ; double c = sc . nextDouble ( ) ; BigDecimal d = sqrt ( new BigDecimal ( a ) , 50 ) ; BigDecimal e = sqrt ( new BigDecimal ( b ) , 50 ) ; BigDecimal f = sqrt ( new BigDecimal ( c ) , 50 ) ; System . out . println ( d . add ( e ) . compareTo ( f ) == - 1 ? " Yes " : " No " ) ; } public static BigDecimal sqrt ( BigDecimal a , int scale ) { BigDecimal x = new BigDecimal ( Math . sqrt ( a . doubleValue ( ) ) , MathContext . DECIMAL64 ) ; if ( scale < 17 ) { x = x . setScale ( scale , BigDecimal . ROUND_HALF_EVEN ) ; return x ; } BigDecimal b2 = new BigDecimal ( 2 ) ; for ( int tempScale = 16 ; tempScale < scale ; tempScale *= 2 ) { x = x . subtract ( x . multiply ( x ) . subtract ( a ) . divide ( x . multiply ( b2 ) , scale , BigDecimal . ROUND_HALF_EVEN ) ) ; } return x ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . nextLine ( ) ; String ans = " " ; for ( int i = 0 ; i < str . length ( ) ; ++ i ) { ans += 'x' ; } System . out . println ( ans ) ; } }
import java . math . BigInteger ; public class Main { private static void solve ( ) { long a = nl ( ) ; long b = nl ( ) ; long c = nl ( ) ; BigInteger y = BigInteger . valueOf ( 4 ) . multiply ( BigInteger . valueOf ( a ) ) . multiply ( BigInteger . valueOf ( b ) ) ; // a + b + 2√ab < c // c-b-a > 2√ab BigInteger x = BigInteger.valueOf(c - (a + b)); if (x.compareTo(BigInteger.valueOf(0)) >= 0 && x.multiply(x).compareTo(y) > 0) { System.out.println("Yes"); } else { System.out.println("No"); } } public static void main(String[] args) { new Thread(null, new Runnable() { @Override public void run() { long start = System.currentTimeMillis(); String debug = args.length > 0 ? args[0] : null; if (debug != null) { try { is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug)); } catch (Exception e) { throw new RuntimeException(e); } } reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768); solve(); out.flush(); tr((System.currentTimeMillis() - start) + "ms"); } }, "", 64000000).start(); } private static java.io.InputStream is = System.in; private static java.io.PrintWriter out = new java.io.PrintWriter(System.out); private static java.util.StringTokenizer tokenizer = null; private static java.io.BufferedReader reader; public static String next() { while (tokenizer == null || !tokenizer.hasMoreTokens()) { try { tokenizer = new java.util.StringTokenizer(reader.readLine()); } catch (Exception e) { throw new RuntimeException(e); } } return tokenizer.nextToken(); } private static double nd() { return Double.parseDouble(next()); } private static long nl() { return Long.parseLong(next()); } private static int[] na(int n) { int[] a = new int[n]; for (int i = 0; i < n; i++) a[i] = ni(); return a; } private static char[] ns() { return next().toCharArray(); } private static long[] nal(int n) { long[] a = new long[n]; for (int i = 0; i < n; i++) a[i] = nl(); return a; } private static int[][] ntable(int n, int m) { int[][] table = new int[n][m]; for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) { table[i][j] = ni(); } } return table; } private static int[][] nlist(int n, int m) { int[][] table = new int[m][n]; for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) { table[j][i] = ni(); } } return table; } private static int ni() { return Integer.parseInt(next()); } private static void tr(Object... o) { if (is != System.in) System.out.println(java.util.Arrays.deepToString(o)); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . next ( ) ) ; int m = Integer . parseInt ( sc . next ( ) ) ; int [ ] p = new int [ n ] ; long wa = 0 ; long ac = 0 ; for ( int i = 0 ; i < m ; i ++ ) { int pi = Integer . parseInt ( sc . next ( ) ) ; String s = sc . next ( ) ; if ( " WA " . equals ( s ) && p [ pi - 1 ] != - 1 ) { p [ pi - 1 ] ++ ; } else if ( " AC " . equals ( s ) && p [ pi - 1 ] >= 0 ) { ac ++ ; wa += p [ pi - 1 ] ; p [ pi - 1 ] = - 1 ; } } System . out . println ( ac + " " + wa ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String S = sc . next ( ) ; int cnt = 0 ; for ( int i = 0 ; i < S . length ( ) ; i ++ ) { int num = S . charAt ( i ) - '0' ; if ( i % 2 == num ) cnt ++ ; } System . out . println ( Math . min ( cnt , S . length ( ) - cnt ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; while ( true ) { int a = scan . nextInt ( ) ; String operator = scan . next ( ) ; int b = scan . nextInt ( ) ; int ans = 0 ; if ( operator . equals ( " ? " ) ) { break ; } switch ( operator ) { case " + " : ans = a + b ; break ; case " - " : ans = a - b ; break ; case " * " : ans = a * b ; break ; case " / " : ans = a / b ; break ; } System . out . println ( ans ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int ans = ( int ) Math . pow ( n , 3 ) ; System . out . println ( ans ) ; } }
import java . io . InputStream ; import java . io . PrintStream ; import java . util . Scanner ; public class Main { InputStream in = System . in ; PrintStream out = System . out ; public void _main ( String [ ] args ) { Scanner sc = new Scanner ( in ) ; int W = sc . nextInt ( ) ; int H = sc . nextInt ( ) ; int N = sc . nextInt ( ) ; int left = 0 ; int right = W ; int bottom = 0 ; int top = H ; for ( int i = 0 ; i < N ; i ++ ) { int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; switch ( a ) { case 1 : left = Math . max ( left , x ) ; break ; case 2 : right = Math . min ( right , x ) ; break ; case 3 : bottom = Math . max ( bottom , y ) ; break ; case 4 : top = Math . min ( top , y ) ; break ; } } if ( left >= right || bottom >= top ) { out . println ( 0 ) ; } else { out . println ( ( right - left ) * ( top - bottom ) ) ; } sc . close ( ) ; } public static void main ( String [ ] args ) { new Main ( ) . _main ( args ) ; } @ SuppressWarnings ( " unused " ) private int [ ] nextIntArray ( Scanner sc , int n ) { int [ ] result = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { result [ i ] = sc . nextInt ( ) ; } return result ; } @ SuppressWarnings ( " unused " ) private int [ ] nextIntArray1origin ( Scanner sc , int n ) { int [ ] result = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { result [ i ] = sc . nextInt ( ) ; } return result ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; System . out . println ( Math . ceil ( ( double ) N / 2 ) / N ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String aStr = sc . next ( ) ; String bStr = sc . next ( ) ; int a = Integer . parseInt ( aStr ) ; int b = Integer . parseInt ( bStr ) ; if ( a == b ) { System . out . println ( " a == b " ) ; } else if ( a > b ) { System . out . println ( " a > b " ) ; } else { System . out . println ( " a < b " ) ; } sc . close ( ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { { double r ; Scanner sc = new Scanner ( System . in ) ; r = sc . nextDouble ( ) ; double d = r * r * Math . PI ; double t = 2 * r * Math . PI ; System . out . printf ( " %.6f " , d ) ; System . out . print ( " " ) ; System . out . printf ( " %.6f " , t ) ; sc . close ( ) ; } } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System . in ) ; int K = stdIn . nextInt ( ) ; //1周の距離 int N=stdIn.nextInt(); //家の軒数 int min=0; int []a=new int[N]; for(int i=0; i<N; i++){ a[i]=stdIn.nextInt(); } for(int i=0; i<N-1; i++){ if(a[i+1]-a[i]>min){ min=a[i+1]-a[i]; } } if(K-a[N-1]+a[0]>min){ min=K-a[N-1]+a[0]; } System.out.println(K-min); } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ; public class Main { private static void solve ( FastScanner fr ) { int n = fr . nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = fr . nextInt ( ) ; if ( n < 2 ) { sout ( 0 ) ; return ; } if ( n == 2 ) { sout ( ( int ) Math . abs ( arr [ 1 ] - arr [ 0 ] ) ) ; return ; } int pp = 0 ; int p = Math . abs ( arr [ 1 ] - arr [ 0 ] ) ; for ( int i = 2 ; i < n ; i ++ ) { int cur = Math . min ( pp + Math . abs ( arr [ i ] - arr [ i - 2 ] ) , p + Math . abs ( arr [ i ] - arr [ i - 1 ] ) ) ; // sout(i + " " + cur); pp = p; p = cur; } sout(p); } public static void main(String[] args) { FastScanner fs = new FastScanner(); int n = 1; // int n = fs.nextInt(); while (n-- > 0) { solve(fs); } } private static void sout() { System.out.println(); } private static void sout(String s) { System.out.println(s); } private static void sout(int s) { System.out.println(s); } private static void sout(long s) { System.out.println(s); } private static void sout(double s) { System.out.println(s); } static class FastScanner { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st=new StringTokenizer(""); String next() { while (!st.hasMoreTokens()) try { st=new StringTokenizer(br.readLine()); } catch (IOException e) { e.printStackTrace(); } return st.nextToken(); } int[] readArray(int n) { int[] a=new int[n]; for (int i=0; i<n; i++) a[i]=nextInt(); return a; } int nextInt() { return Integer.parseInt(next()); } long nextLong() { return Long.parseLong(next()); } double nextDouble() { return Double.parseDouble(next()); } } }
import java . io . * ; class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int x , i , tmp ; StringBuilder sb = new StringBuilder ( ) ; x = Integer . parseInt ( br . readLine ( ) ) ; for ( i = 1 ; i <= x ; i ++ ) { if ( i % 3 == 0 ) { sb . append ( " " + i ) ; } else { tmp = i ; while ( tmp != 0 ) { if ( tmp % 10 == 3 ) { sb . append ( " " + i ) ; break ; } tmp = tmp / 10 ; } } } System . out . println ( sb ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sca = new Scanner ( System . in ) ; int a = sca . nextInt ( ) ; int b = sca . nextInt ( ) ; int c = sca . nextInt ( ) ; if ( a == b && b != c ) { System . out . println ( " Yes " ) ; } else if ( a == c && b != c ) { System . out . println ( " Yes " ) ; } else if ( b == c && a != c ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } // ArrayList<String> list = new ArrayList<String>(); // list.add(""); // 後始末 sca.close(); } }
import java . util . * ; import java . lang . * ; import java . io . * ; class Main { public static long modpow ( long a , long b , long m ) { long ret = 1 ; while ( b > 0 ) { if ( ( b & 1 ) == 1 ) ret = ret * a % m ; a = a * a % m ; b >>= 1 ; } return ret ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) , b = sc . nextInt ( ) ; System . out . println ( modpow ( a , b , 1000000007 ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( ( System . in ) ) ; int N = sc . nextInt ( ) ; int [ ] a = new int [ N + 1 ] ; long b = 0 , c = 0 ; for ( int i = 0 ; i < N ; i ++ ) { a [ i ] = sc . nextInt ( ) ; if ( a [ i ] > c ) { c = a [ i ] ; } } for ( int i = 0 ; i < N ; i ++ ) { int n = a [ i ] ; b = 0 ; while ( n % 2 == 0 && n > 0 ) { n = n / 2 ; b ++ ; } if ( b < c ) { c = b ; } } System . out . println ( c ) ; sc . close ( ) ; } }
import java . util . * ; import java . io . * ; public class Main { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int datasize = 0 ; //????????° int datasize2 = 0;//???????????° int start = 0; int distance[];//???????????¢ @SuppressWarnings("unchecked") static ArrayList<Edge>[]G = new ArrayList[100000]; static int Infinity = 1500000000; public static void main(String []args){ Main m = new Main(); } public Main(){ try{ String input = reader.readLine(); String []get = input.split(" "); datasize = Integer.parseInt(get[1]); datasize2 = Integer.parseInt(get[0]); start = Integer.parseInt(get[2]); distance = new int[datasize2]; for(int z = 0;z < datasize2;z++){ G[z] = new ArrayList<Edge>(0); this.distance[z] = Infinity; } for(int z = 0;z < datasize;z++){ input = reader.readLine(); get = input.split(" "); G[Integer.parseInt(get[0])].add(new Edge(Integer.parseInt(get[1]),Integer.parseInt(get[2]))); } Explore(); for(int z = 0;z < datasize2;z++){ if(distance[z] != Infinity)System.out.println(distance[z]); else System.out.println("INF"); } }catch(IOException e){ } } public void Explore(){ PriorityQueue<Candidate> candidates = new PriorityQueue<Candidate>(); candidates.offer(new Candidate(start,0)); distance[start] = 0; while(!candidates.isEmpty()){ Candidate c = candidates.poll(); int number = c.number; int d = c.d; if(distance[number] < d){ continue; } List<Edge> edges = G[number];//No.????????????????????????????????´????????¢??????????????¨?????? for(Edge ed : edges){ if(distance[ed.go] > distance[number] + ed.cost){//?????????????????????????????¢>????????????+???????????????????????? distance[ed.go] = distance[number]+ed.cost; candidates.offer(new Candidate(ed.go,distance[ed.go])); } } } } static class Candidate implements Comparable<Candidate>{//???????????¢????£?????????? int number = -1;//????????????????????? int d = 0;//?????¢ public Candidate(int number,int d){ this.number = number; this.d = d; } @Override public int compareTo(Candidate o) { return d-o.d; } }static class Edge{ int go;//?????????????????? int cost;//?????¢ Edge(int go,int cost){ this.go = go; this.cost = cost; } } }
import java . io . InputStream ; import java . io . PrintStream ; import java . util . Arrays ; import java . util . Scanner ; public class Main { InputStream in = System . in ; PrintStream out = System . out ; public void _main ( String [ ] args ) { Scanner sc = new Scanner ( in ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int C = sc . nextInt ( ) ; sc . close ( ) ; if ( A == B && A != C || A == C && A != B || A != B && B == C ) { out . println ( " Yes " ) ; } else { out . println ( " No " ) ; } } public static void main ( String [ ] args ) { new Main ( ) . _main ( args ) ; } }
import java . io . IOException ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) throws IOException { Scanner scanner = new Scanner ( System . in ) ; int h = scanner . nextInt ( ) ; int w = scanner . nextInt ( ) ; for ( int i = 0 ; i < h ; i ++ ) { String string = scanner . next ( ) ; System . out . println ( string ) ; System . out . println ( string ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // ABC148E - Double Factorial Scanner sc = new Scanner(System.in); long n = sc.nextLong(); if (n % 2 == 1) { System.out.println(0); return; } long ans = 0; for (long i = 10; i <= n; i *= 5) { ans += n / i; } System.out.println(ans); } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int max = 0 ; int min = 123 ; int x ; for ( int i = 0 ; i < 5 ; i ++ ) { x = sc . nextInt ( ) ; max = Math . max ( max , x ) ; min = Math . min ( min , x ) ; } int k = sc . nextInt ( ) ; if ( max - min > k ) System . out . println ( " :( " ) ; else System . out . println ( " Yay! " ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner scan =new Scanner(System.in); int n=scan.nextInt(); int min=scan.nextInt(); int max=-2000000000; for(int i=1;i<n;i++){ int tmp=scan.nextInt(); max=Math.max(max, tmp-min); min=Math.min(min, tmp); } System.out.println(max); } }
import java . util . * ; import java . lang . * ; public class Main { public int dp ( int [ ] arr , int [ ] dp , int n , int index ) { if ( index == n - 1 ) { dp [ n - 1 ] = 0 ; return 0 ; } if ( index == n - 2 ) { dp [ n - 2 ] = Math . abs ( arr [ n - 1 ] - arr [ n - 2 ] ) ; return dp [ n - 2 ] ; } int temp1 = 0 ; int temp2 = 0 ; if ( dp [ index + 1 ] != - 1 ) { temp1 = dp [ index + 1 ] ; } else { temp1 = this . dp ( arr , dp , n , index + 1 ) ; } if ( dp [ index + 2 ] != - 1 ) { temp2 = dp [ index + 2 ] ; } else { temp2 = this . dp ( arr , dp , n , index + 2 ) ; } dp [ index ] = Math . min ( Math . abs ( arr [ index ] - arr [ index + 1 ] ) + temp1 , Math . abs ( arr [ index ] - arr [ index + 2 ] ) + temp2 ) ; return dp [ index ] ; } public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner sc=new Scanner(System.in); int n=sc.nextInt(); int[] arr=new int[n]; int[] dp=new int[n]; for(int i=0;i<n;i++) { arr[i]=sc.nextInt(); } Main mm=new Main(); for(int i=0;i<n;i++) { dp[i]=-1; } System.out.println(mm.dp(arr, dp, n, 0)); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; String input = sc . next ( ) ; if ( a >= 3200 ) { System . out . println ( input ) ; } else { System . out . println ( " red " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; int dist = b - a ; double tt = 0 ; String ans = " YES " ; if ( b > a ) { tt = ( double ) ( b - a ) / ( v - w ) ; } else if ( a > b ) { tt = ( double ) ( a - b ) / ( v - w ) ; } if ( t < tt ) { ans = " NO " ; } else if ( w > v ) { ans = " NO " ; } System . out . println ( ans ) ; } }
import java . awt . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ; import java . util . List ; public class Main { public static void main ( String args [ ] ) throws IOException { Scanner sc = new Scanner ( System . in ) ; double w = sc . nextInt ( ) ; double h = sc . nextInt ( ) ; double x = sc . nextInt ( ) ; double y = sc . nextInt ( ) ; double a = w * h / 2d ; int one = 0 ; if ( w == 2 * x && h == 2 * y ) one = 1 ; System . out . println ( a + " " + one ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { // TODO Auto-generated method stub Scanner stdIn = new Scanner(System.in); TreeSet<Long> list = new TreeSet<Long>(); int numS = stdIn.nextInt(); //集合Sの読み込み for(int r = 0; r < numS; r++) { long input = stdIn.nextInt(); list.add(input); } int numT = stdIn.nextInt(); //集合Tの読み込み int count = 0; for(int r = 0; r < numT; r++) { long input = stdIn.nextInt(); if(list.contains(input)) { count++; } } System.out.println(count); } }
import java . util . Scanner ; class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int W = scan . nextInt ( ) ; System . out . println ( W * 32 ) ; } }
import java . util . * ; class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int A = sc . nextInt ( ) ; int B = sc . nextInt ( ) ; int count = 0 ; for ( int i = 0 ; i <= N ; i ++ ) { int num = i ; int sum = 0 ; while ( num != 0 ) { sum += num % 10 ; num /= 10 ; } if ( A <= sum && sum <= B ) { count += i ; } } System . out . println ( count ) ; } }
import java . util . Scanner ; class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; while ( scan . hasNextLine ( ) ) { String line = scan . nextLine ( ) ; String [ ] cipher = line . split ( " " ) ; char [ ] [ ] ch = new char [ cipher . length ] [ ] ; int i , j ; for ( i = 0 ; i < cipher . length ; i ++ ) { ch [ i ] = cipher [ i ] . toCharArray ( ) ; } String [ ] str = new String [ cipher . length ] ; String s = " " ; out : while ( true ) { for ( i = 0 ; i < cipher . length ; i ++ ) { for ( j = 0 ; j < cipher [ i ] . length ( ) ; j ++ ) { if ( ch [ i ] [ j ] != '.' && ch [ i ] [ j ] != ' ' ) { if ( ch [ i ] [ j ] == 'z' ) { ch [ i ] [ j ] = 'a' ; } else { ch [ i ] [ j ] = ( char ) ( ch [ i ] [ j ] + 1 ) ; } } } str [ i ] = String . valueOf ( ch [ i ] ) ; } for ( i = 0 ; i < cipher . length ; i ++ ) { if ( str [ i ] . equals ( " the " ) || str [ i ] . equals ( " this " ) || str [ i ] . equals ( " that " ) || str [ i ] . equals ( " the. " ) || str [ i ] . equals ( " this. " ) || str [ i ] . equals ( " that. " ) ) { break out ; } } } for ( i = 0 ; i < cipher . length - 1 ; i ++ ) { s += ( str [ i ] + " " ) ; } s += str [ cipher . length - 1 ] ; System . out . println ( s ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String s = scanner . next ( ) ; if ( s . charAt ( 0 ) == s . charAt ( 2 ) ) { System . out . println ( " Yes " ) ; } else { System . out . println ( " No " ) ; } } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; sc . close ( ) ; String ans [ ] = { " Yes " , " No " } ; int an = 1 ; char st = s . charAt ( 0 ) ; for ( int i = 0 ; i < s . length ( ) ; ++ i ) { if ( st != s . charAt ( i ) ) an = 0 ; } System . out . println ( ans [ an ] ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String a = scan . next ( ) ; String b = scan . next ( ) ; if ( a . equals ( " H " ) ) { if ( b . equals ( " H " ) ) { System . out . println ( " H " ) ; } else { System . out . println ( " D " ) ; } } if ( a . equals ( " D " ) ) { if ( b . equals ( " H " ) ) { System . out . println ( " D " ) ; } else { System . out . println ( " H " ) ; } } } }
import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; int n = sc . nextInt ( ) ; int t = n % 10 ; switch ( t ) { case 3 : System . out . println ( " bon " ) ; break ; case 0 : case 1 : case 6 : case 8 : System . out . println ( " pon " ) ; break ; default : System . out . println ( " hon " ) ; } } static class MyScanner { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) , 1 << 15 ) ; StringTokenizer tokenizer ; String next ( ) { try { while ( tokenizer == null || ! tokenizer . hasMoreTokens ( ) ) { tokenizer = new StringTokenizer ( reader . readLine ( ) ) ; } } catch ( IOException ignored ) { } return tokenizer . nextToken ( ) ; } int nextInt ( ) { return Integer . parseInt ( next ( ) ) ; } long nextLong ( ) { return Long . parseLong ( next ( ) ) ; } } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; //???????????????????????????????????´??°?????¨???????????????????????? while(true){ int H = sc.nextInt(); int W = sc.nextInt(); if(H == 0 && W == 0){ break; }else{ for(int i=0;i<H;i++){ for(int j=0;j<W;j++){ System.out.printf("#"); } System.out.printf("\n"); } } System.out.printf("\n"); } } }
import java . io . * ; import java . util . * ; class Main { private static int n ; private static List < String > a = new ArrayList < > ( ) ; public static void main ( String [ ] args ) throws Exception { final Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; dfs ( 0 , new StringBuilder ( ) , new HashMap ( ) ) ; StringBuilder sb = new StringBuilder ( ) ; for ( String b : a ) { sb . append ( b ) . append ( " \n " ) ; } System . out . print ( sb ) ; } private static void dfs ( int x , StringBuilder sb , Map < Character , Integer > s ) { if ( sb . length ( ) == n ) { //if (ok(sb.toString())) { a.add(sb.toString()); //} return; } for (int i = 0; i <= x && i <= s.size(); i++) { char c = (char) ('a' + i); s.put(c, s.getOrDefault(c, 0) + 1); sb.append(c); dfs(x + 1, sb, s); sb.deleteCharAt(sb.length() - 1); if (s.getOrDefault(c, 1) == 1) { s.remove(c); } else { s.put(c, s.get(c) - 1); } } } private static boolean ok(String a) { if (a.charAt(a.length() - 1) == (char) ('a' + n - 1)) { for (int i = 0; i < a.length(); i++) { if (a.charAt(i) != (char) ('a' + i)) return false; } } return true; } }
import java . util . ArrayList ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { // TODO 自動生成されたメソッド・スタブ Scanner sc = new Scanner(System.in); int n = Integer.parseInt(sc.next());//int型 String sline = sc.next(); sc.close(); String[] s =new String[n]; for (int i=0; i<n; i++){ s[i] = String.valueOf(sline.charAt(i)); } ArrayList<Integer> divind = new ArrayList<Integer>(); for(int i=0; i<n-1; i++) { if (s[i].equals(".")&&s[i+1].equals("#")) { divind.add(i); } } int cnt = 0; int[] sharps = new int[n]; // #の累積和 int[] dots = new int[n]; for (int i=0; i<n; i++){ if (s[i].equals("#")) { cnt++; } sharps[i] = cnt; } int ans = 10000000; int tmp = 10000000; cnt = 0; for (int i=n-1; i>-1; i--){ if (s[i].equals(".")) { cnt++; } dots[i] = cnt; } /* for (int i=0; i<n; i++){ System.out.print(sharps[i]); } System.out.print("\n"); for (int i=0; i<n; i++){ System.out.print(dots[i]); } System.out.print("\n"); */ for (int i=0; i<n-1; i++) { // System.out.println(in); tmp = sharps[i]+dots[i+1]; ans = Math.min(tmp, ans); } ans = Math.min(ans, dots[0]); ans = Math.min(ans, sharps[n-1]); System.out.println(ans); } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int X = sc . nextInt ( ) ; if ( X <= 599 ) { System . out . println ( " 8 " ) ; } else if ( X <= 799 ) { System . out . println ( " 7 " ) ; } else if ( X <= 999 ) { System . out . println ( " 6 " ) ; } else if ( X <= 1199 ) { System . out . println ( " 5 " ) ; } else if ( X <= 1399 ) { System . out . println ( " 4 " ) ; } else if ( X <= 1599 ) { System . out . println ( " 3 " ) ; } else if ( X <= 1799 ) { System . out . println ( " 2 " ) ; } else { System . out . println ( " 1 " ) ; } } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; HashSet < Integer > set = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { set . add ( sc . nextInt ( ) ) ; } String ans = " NO " ; if ( set . size ( ) == n ) ans = " YES " ; System . out . println ( ans ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int r = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int [ ] [ ] su = new int [ r + 1 ] [ c + 1 ] ; for ( int i = 0 ; i < r ; i ++ ) { for ( int j = 0 ; j < c ; j ++ ) { su [ i ] [ j ] = sc . nextInt ( ) ; } } for ( int i = 0 ; i < r ; i ++ ) { int tmp = 0 ; for ( int j = 0 ; j < c + 1 ; j ++ ) { if ( j != c ) { tmp += su [ i ] [ j ] ; } else { su [ i ] [ j ] = tmp ; } } } for ( int i = 0 ; i < c + 1 ; i ++ ) { int tmp = 0 ; for ( int j = 0 ; j < r + 1 ; j ++ ) { if ( j != r ) { tmp += su [ j ] [ i ] ; } else { su [ j ] [ i ] = tmp ; } } } for ( int i = 0 ; i < r + 1 ; i ++ ) { for ( int j = 0 ; j < c + 1 ; j ++ ) { if ( j != c ) { System . out . printf ( " %d " , su [ i ] [ j ] ) ; } else { System . out . printf ( " %d \n " , su [ i ] [ j ] ) ; } } } } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . math . BigInteger ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; String readStr ; int count = Integer . parseInt ( reader . readLine ( ) ) ; for ( int i = 0 ; i < count ; i ++ ) { BigInteger l = new BigInteger ( reader . readLine ( ) ) ; BigInteger r = new BigInteger ( reader . readLine ( ) ) ; if ( l . toString ( ) . length ( ) > 80 || r . toString ( ) . length ( ) > 80 ) { System . out . println ( " overflow " ) ; continue ; } BigInteger result = l . add ( r ) ; if ( result . toString ( ) . length ( ) > 80 ) { System . out . println ( " overflow " ) ; continue ; } System . out . println ( result . toString ( ) ) ; } } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; public class Main { public static void main ( String [ ] args ) throws Exception { // TODO 自動生成されたメソッド・スタブ BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); String Wd = in.readLine(); int H = Integer.parseInt(Wd); Wd = in.readLine(); int W = Integer.parseInt(Wd); Wd = in.readLine(); int N = Integer.parseInt(Wd); int ans = 0; int black=0; while(true){ if(H<W){ black+=W; ans++; H--; }else{ black+=H; ans++; W--; } if(black >=N){ break; } } System.out.println(ans); } }
import java . util . LinkedList ; import java . util . List ; import java . util . Scanner ; public class Main { private static class Line { public long a ; public long b ; public char op ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; List < Line > list = new LinkedList < Line > ( ) ; while ( sc . hasNext ( ) ) { Line line = new Line ( ) ; line . a = sc . nextLong ( ) ; line . op = sc . next ( ) . charAt ( 0 ) ; line . b = sc . nextLong ( ) ; list . add ( line ) ; } for ( Line line : list ) { switch ( line . op ) { case '+' : System . out . println ( line . a + line . b ) ; break ; case '-' : System . out . println ( line . a - line . b ) ; break ; case '*' : System . out . println ( line . a * line . b ) ; break ; case '/' : System . out . println ( line . a / line . b ) ; break ; } } } }
import java . util . * ; import java . io . * ; class Main { public static void main ( String args [ ] ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int num1 = 0 , num2 = 0 , num3 = 0 ; String s = br . readLine ( ) ; int x = Integer . parseInt ( s ) ; if ( x >= 0 && x < 86400 ) { num1 = x / 3600 ; //??????????±??????? num2 = (x % 3600) / 60; //???????±??????? num3 = x % 60; //?§?????±??????? System.out.println(num1+":"+num2+":"+num3); } } }
import java . util . * ; public class Main { private int N ; private char [ ] S ; public void inputData ( ) { Scanner sc = new Scanner ( System . in ) ; N = sc . nextInt ( ) ; S = new char [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { S [ i ] = sc . next ( ) . charAt ( 0 ) ; } } public void printAnswer ( ) { for ( int i = 0 ; i < N ; i ++ ) { if ( S [ i ] == 'Y' ) { System . out . println ( " Four " ) ; return ; } } System . out . println ( " Three " ) ; } public void run ( ) { inputData ( ) ; printAnswer ( ) ; } public static void main ( String [ ] args ) { ( new Main ( ) ) . run ( ) ; } }
